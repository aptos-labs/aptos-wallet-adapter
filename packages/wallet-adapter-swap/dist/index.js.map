{"version":3,"sources":["../src/index.tsx","../src/MultiChain.tsx","../src/ui/card.tsx","../src/lib/utils.ts","../src/components/walletSelector/aptos/WalletSelector.tsx","../src/ui/button.tsx","../src/ui/collapsible.tsx","../src/ui/dialog.tsx","../src/ui/dropdown-menu.tsx","../src/ui/use-toast.ts","../src/components/walletSelector/solana/SolanaWalletSelector.tsx","../src/components/walletSelector/solana/SolanaWalletItem.tsx","../src/utils/chains/mainnet/index.ts","../src/utils/chains/testnet/index.ts","../src/utils/tokens/mainnet.ts","../src/utils/tokens/testnet.ts","../src/components/ChainSelect.tsx","../src/ui/input.tsx","../src/signer/SolanaSigner.ts","../src/signer/EthereumSigner.ts","../src/signer/Signer.ts","../src/signer/AptosSigner.ts","../src/ui/progress.tsx","../src/components/walletSelector/ethereum/EthereumWalletSelector.tsx","../src/components/walletSelector/ethereum/EthereumWalletItem.tsx","../src/icons/Aptos.tsx","../src/icons/USDC.tsx","../src/utils/logger.ts"],"sourcesContent":["export * from \"./MultiChain\";\n","import \"./global.css\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useWallet } from \"@aptos-labs/wallet-adapter-react\";\nimport { CircleAlert, Loader2, MoveDown } from \"lucide-react\";\nimport { Ed25519Account, Network as AptosNetwork } from \"@aptos-labs/ts-sdk\";\nimport {\n  chainToPlatform,\n  routes,\n  TokenId,\n  Wormhole,\n  wormhole,\n  Chain,\n  Platform,\n  Network,\n  AttestationReceipt,\n  TransferState,\n  PlatformContext,\n  amount as amountUtils,\n} from \"@wormhole-foundation/sdk\";\nimport { chainToIcon } from \"@wormhole-foundation/sdk-icons\";\nimport { Wallet } from \"@xlabs-libs/wallet-aggregator-core\";\nimport aptos from \"@wormhole-foundation/sdk/aptos\";\nimport solana from \"@wormhole-foundation/sdk/solana\";\nimport evm from \"@wormhole-foundation/sdk/evm\";\n\nimport { Card, CardContent } from \"./ui/card\";\nimport { WalletSelector } from \"./components/walletSelector/aptos/WalletSelector\";\nimport { Button } from \"./ui/button\";\nimport { SolanaWalletSelector } from \"./components/walletSelector/solana/SolanaWalletSelector\";\nimport {\n  AptosMainnetUSDCToken,\n  AptosTestnetUSDCToken,\n  mainnetChainTokens,\n  testnetChainTokens,\n} from \"./utils/index\";\nimport { ChainSelect } from \"./components/ChainSelect\";\nimport { Input } from \"./ui/input\";\nimport { Signer } from \"./signer/Signer\";\nimport { AptosSigner } from \"./signer/AptosSigner\";\nimport { sleep } from \"./signer/SolanaSigner\";\nimport { Progress } from \"./ui/progress\";\nimport { EthereumWalletSelector } from \"./components/walletSelector/ethereum/EthereumWalletSelector\";\nimport { AptosLogo } from \"./icons/Aptos\";\nimport USDC from \"./icons/USDC\";\nimport { logger } from \"./utils/logger\";\n\nexport interface MultiChainProps {\n  feePayerAccount?: Ed25519Account;\n  dappConfig: { network: AptosNetwork.MAINNET | AptosNetwork.TESTNET };\n}\n\nexport const MultiChain: FC<MultiChainProps> = ({\n  feePayerAccount = undefined,\n  dappConfig,\n}) => {\n  const isMainnet = dappConfig.network === AptosNetwork.MAINNET;\n  const chainToken = isMainnet ? mainnetChainTokens : testnetChainTokens;\n\n  const aptosWalletContext = useWallet();\n  const { wallet, account } = aptosWalletContext;\n  const [sourceWallet, setSourceWallet] = useState<Wallet | null>(null);\n\n  const [selectedSourceChain, setSelectedSourceChain] =\n    useState<Chain>(\"Solana\");\n  const [amount, setAmount] = useState<string>(\"0\");\n\n  const [platform, setPlatform] = useState<\n    PlatformContext<Network, Platform> | undefined\n  >(undefined);\n\n  const [cctpRequest, setCctpRequest] = useState<\n    routes.RouteTransferRequest<Network> | undefined\n  >(undefined);\n\n  const [cctpRoute, setCctpRoute] = useState<\n    | routes.Route<\n        Network,\n        routes.Options,\n        routes.ValidatedTransferParams<routes.Options>,\n        routes.Receipt\n      >\n    | undefined\n  >(undefined);\n\n  const [quote, setQuote] = useState<routes.Quote<\n    routes.Options,\n    routes.ValidatedTransferParams<routes.Options>,\n    any\n  > | null>(null);\n\n  const [showQuote, setShowQuote] = useState(false);\n  const [quoteAmount, setQuoteAmount] = useState<string | null>(null);\n\n  const [transactionReceipt, setTransactionReceipt] =\n    useState<routes.Receipt<AttestationReceipt> | null>(null);\n\n  const [wormholeContext, setWormholeContext] = useState<\n    Wormhole<Network> | undefined\n  >(undefined);\n\n  const [sourceWalletUSDCBalance, setSourceWalletUSDCBalance] =\n    useState<amountUtils.Amount | null>(null);\n\n  const [progress, setProgress] = useState(0);\n  const [transactionETA, setTransactionETA] = useState<number>(0);\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  const [transactionInitiated, setTransactionInitiated] = useState(false);\n  const [transactionSubmitted, setTransactionSubmitted] = useState(false);\n\n  const [countdown, setCountdown] = useState({ minutes: 0, seconds: 0 });\n\n  const [invalidAmount, setInvalidAmount] = useState(false);\n\n  const [transactionReadyToClaim, setTransactionReadyToClaim] = useState(false);\n\n  const [transactionClaimed, setTransactionClaimed] = useState(false);\n\n  const [wormholeTransactionId, setWormholeTransactionId] = useState<\n    string | undefined\n  >(undefined);\n\n  const [isCountdownComplete, setIsCountdownComplete] = useState(false);\n\n  const onSetAmount = (amount: string) => {\n    if (!cctpRoute) {\n      throw new Error(\"Route is not initialized\");\n    }\n    if (!cctpRequest) {\n      throw new Error(\"Request is not initialized\");\n    }\n    setAmount(amount);\n    setQuoteAmount(null);\n    setTimeout(async () => {\n      setQuoteAmount(amount);\n      // TODO what is nativeGas for?\n      const transferParams = { amount, options: { nativeGas: 0 } };\n\n      const validated = await cctpRoute.validate(cctpRequest, transferParams);\n      if (!validated.valid) {\n        logger.log(\"invalid\", validated.valid);\n        throw validated.error;\n      }\n      const quote = await cctpRoute.quote(cctpRequest, validated.params);\n      if (!quote.success) {\n        logger.log(\"quote failed\", quote.success);\n        throw quote.error;\n      }\n\n      logger.log(\"quote\", quote);\n      setQuote(quote);\n      setTransactionETA(Math.ceil((quote.eta ?? 0) / 1000) * 1000);\n      setShowQuote(true);\n    }, 800);\n  };\n\n  const humanReadableETA = (milliseconds: number): string => {\n    if (milliseconds >= 60000) {\n      const minutes = Math.floor(milliseconds / 60000);\n      return `${minutes} minute${minutes > 1 ? \"s\" : \"\"}`;\n    } else {\n      const seconds = Math.floor(milliseconds / 1000);\n      return `${seconds} second${seconds > 1 ? \"s\" : \"\"}`;\n    }\n  };\n\n  useEffect(() => {\n    if (!startTime || !transactionETA) return;\n\n    const updateCountdown = () => {\n      const elapsed = Date.now() - startTime;\n      const remainingTime = Math.max(transactionETA - elapsed, 0); // Ensure non-negative\n      const minutes = Math.floor(remainingTime / 60000);\n      const seconds = Math.floor((remainingTime % 60000) / 1000);\n\n      setCountdown({ minutes, seconds });\n\n      const progressPercent = Math.min((elapsed / transactionETA) * 100, 100);\n      setProgress(progressPercent);\n\n      if (remainingTime === 0) {\n        setIsCountdownComplete(true);\n        clearInterval(interval);\n      }\n\n      if (progressPercent >= 100) {\n        clearInterval(interval);\n      }\n    };\n\n    updateCountdown(); // Initialize immediately\n    const interval = setInterval(updateCountdown, 1000); // Update every second\n\n    return () => clearInterval(interval);\n  }, [startTime, transactionETA]);\n\n  useEffect(() => {\n    if (!sourceWalletUSDCBalance || !amount) {\n      return;\n    }\n\n    const parsedAmount = amountUtils.parse(\n      amount,\n      chainToken[selectedSourceChain].decimals\n    );\n\n    if (\n      amountUtils.units(parsedAmount) >\n      amountUtils.units(sourceWalletUSDCBalance)\n    ) {\n      setInvalidAmount(true);\n    } else {\n      setInvalidAmount(false);\n    }\n  }, [sourceWalletUSDCBalance, amount]);\n\n  useEffect(() => {\n    const initializeRoute = async () => {\n      const wh = await wormhole(isMainnet ? \"Mainnet\" : \"Testnet\", [\n        solana,\n        aptos,\n        evm,\n      ]);\n      setWormholeContext(wh);\n      const platform = wh.getPlatform(chainToPlatform(selectedSourceChain));\n      setPlatform(platform);\n\n      const sourceToken: TokenId = Wormhole.tokenId(\n        chainToken[selectedSourceChain].tokenId.chain as Chain,\n        chainToken[selectedSourceChain].tokenId.address\n      );\n      const aptosChainToken = isMainnet\n        ? AptosMainnetUSDCToken\n        : AptosTestnetUSDCToken;\n      const destToken: TokenId = Wormhole.tokenId(\n        aptosChainToken.tokenId.chain as Chain,\n        aptosChainToken.tokenId.address\n      );\n\n      const sourceContext = wh\n        .getPlatform(chainToPlatform(selectedSourceChain))\n        .getChain(selectedSourceChain);\n      logger.log(\"sourceContext\", sourceContext);\n      const destContext = wh\n        .getPlatform(chainToPlatform(\"Aptos\"))\n        .getChain(\"Aptos\");\n      logger.log(\"destContext\", destContext);\n\n      const req = await routes.RouteTransferRequest.create(\n        wh,\n        {\n          source: sourceToken,\n          destination: destToken,\n        },\n        sourceContext,\n        destContext\n      );\n\n      setCctpRequest(req);\n\n      const resolver = wh.resolver([\n        routes.CCTPRoute, // manual CCTP\n      ]);\n\n      const route = await resolver.findRoutes(req);\n      const cctpRoute = route[0];\n      logger.log(\"cctpRoute\", cctpRoute);\n      setCctpRoute(cctpRoute);\n    };\n\n    initializeRoute();\n  }, [selectedSourceChain]);\n\n  useEffect(() => {\n    const getBalances = async () => {\n      if (!wormholeContext) {\n        return;\n      }\n      if (!sourceWallet) {\n        return;\n      }\n\n      try {\n        const platform = wormholeContext.getPlatform(\n          chainToPlatform(selectedSourceChain)\n        );\n        const rpc = platform.getRpc(selectedSourceChain);\n\n        const result = await platform\n          .utils()\n          .getBalances(selectedSourceChain, rpc, sourceWallet?.getAddress()!, [\n            chainToken[selectedSourceChain].tokenId.address,\n          ]);\n\n        const currentAmount =\n          result[chainToken[selectedSourceChain].tokenId.address];\n\n        const usdcBalance = amountUtils.fromBaseUnits(\n          currentAmount ?? BigInt(0),\n          chainToken[selectedSourceChain].decimals\n        );\n\n        return usdcBalance;\n      } catch (e) {\n        console.error(\"Failed to get token balances\", e);\n      }\n    };\n\n    getBalances().then((usdcBalance) => {\n      if (usdcBalance) {\n        setSourceWalletUSDCBalance(usdcBalance);\n      }\n    });\n  }, [sourceWallet, platform]);\n\n  const onSetMaxAmount = () => {\n    if (!sourceWalletUSDCBalance) {\n      return;\n    }\n    setAmount(\n      amountUtils.display(amountUtils.truncate(sourceWalletUSDCBalance, 6))\n    );\n  };\n\n  const onSwapClick = async () => {\n    if (!sourceWallet) {\n      return;\n    }\n    if (!sourceWallet.getAddress()) {\n      throw new Error(\"Source wallet address is undefined\");\n    }\n\n    if (!cctpRoute) {\n      throw new Error(\"Route is not initialized\");\n    }\n\n    if (!cctpRequest) {\n      throw new Error(\"Request is not initialized\");\n    }\n\n    if (!account?.address) {\n      throw new Error(\"Destination wallet is undefined\");\n    }\n\n    if (!quote) {\n      throw new Error(\"Quote is not initialized\");\n    }\n\n    const signer = new Signer(\n      selectedSourceChain,\n      sourceWallet.getAddress()!,\n      {},\n      sourceWallet\n    );\n\n    // initiate transfer\n    setTransactionInitiated(true);\n    let receipt = await cctpRoute.initiate(\n      cctpRequest,\n      signer,\n      quote,\n      Wormhole.chainAddress(\"Aptos\", account?.address)\n    );\n    logger.log(\"Initiated transfer with receipt: \", receipt);\n\n    setTransactionSubmitted(true);\n    setStartTime(Date.now()); // Start the timer\n\n    // The txn hash that shows up on solana and wormhole explorer\n    const txId =\n      \"originTxs\" in receipt\n        ? receipt.originTxs[receipt.originTxs.length - 1].txid\n        : undefined;\n    setWormholeTransactionId(txId);\n\n    let retries = 0;\n    const maxRetries = 5;\n    const baseDelay = 1000; // Initial delay of 1 second\n\n    while (retries < maxRetries) {\n      try {\n        for await (receipt of cctpRoute.track(receipt, 120 * 1000)) {\n          if (receipt.state >= TransferState.SourceInitiated) {\n            setTransactionReceipt(receipt);\n            setTransactionReadyToClaim(true);\n            logger.log(\"Receipt is on track \", receipt);\n            return;\n          }\n        }\n      } catch (e) {\n        console.error(\n          `Error tracking transfer (attempt ${retries + 1} / ${maxRetries}):`,\n          e\n        );\n        // Error: Circle chain id not found for Testnet Ethereum\n        const delay = baseDelay * Math.pow(2, retries); // Exponential backoff\n        await sleep(delay);\n        retries++;\n      }\n    }\n  };\n\n  const onClaimClick = async () => {\n    if (!wallet) {\n      throw new Error(\"Wallet is not initialized\");\n    }\n\n    if (!cctpRoute) {\n      throw new Error(\"Route is not initialized\");\n    }\n\n    if (!transactionReceipt) {\n      throw new Error(\"Transaction receipt is not initialized\");\n    }\n\n    const signer = new AptosSigner(\n      \"Aptos\",\n      account?.address!,\n      {},\n      aptosWalletContext,\n      feePayerAccount\n    );\n\n    if (routes.isManual(cctpRoute)) {\n      const receipt = await cctpRoute.complete(signer, transactionReceipt);\n      logger.log(\"Claim receipt: \", receipt);\n      setTransactionClaimed(true);\n    } else {\n      // Should be unreachable\n      return undefined;\n    }\n  };\n\n  return (\n    <div className=\"w-full flex justify-center items-center p-4\">\n      <Card className=\"w-96\">\n        <CardContent className=\"flex flex-col gap-8 pt-6\">\n          {/*From*/}\n          <div className=\"flex flex-col gap-6\">\n            <div className=\"flex flex-row justify-between items-center\">\n              <p>From:</p>\n              <p>\n                {selectedSourceChain === \"Solana\" ? (\n                  <SolanaWalletSelector\n                    setSourceWallet={setSourceWallet}\n                    transactionInProgress={transactionInitiated}\n                  />\n                ) : (\n                  <EthereumWalletSelector\n                    setSourceWallet={setSourceWallet}\n                    transactionInProgress={transactionInitiated}\n                  />\n                )}\n              </p>\n            </div>\n            <ChainSelect\n              setSelectedSourceChain={setSelectedSourceChain}\n              selectedSourceChain={selectedSourceChain}\n              isMainnet={isMainnet}\n            />\n          </div>\n\n          {/*To*/}\n          <div className=\"flex flex-col gap-6\">\n            <div className=\"flex flex-row justify-between items-center\">\n              <p>To:</p>\n              <p>\n                <WalletSelector\n                  walletSortingOptions={{}}\n                  transactionInProgress={transactionInitiated}\n                />\n              </p>\n            </div>\n            <Button variant=\"outline\" className=\"w-full gap-6\" disabled>\n              <div className=\"flex flex-row items-center justify-between\">\n                <AptosLogo />\n                <span className=\"ml-2\">USDC</span>\n              </div>\n            </Button>\n          </div>\n          <div className=\"flex flex-row gap-2 items-center\">\n            <Input\n              value={amount}\n              onChange={(e) => onSetAmount(e.target.value)}\n            />\n            <div\n              className=\"flex flex-col cursor-pointer\"\n              onClick={onSetMaxAmount}\n            >\n              <span>Max</span>\n              <span>\n                {sourceWalletUSDCBalance\n                  ? amountUtils.display(\n                      amountUtils.truncate(sourceWalletUSDCBalance, 6)\n                    )\n                  : \"0\"}\n              </span>\n            </div>\n          </div>\n          {invalidAmount && (\n            <p className=\"text-red-500\">\n              Amount is greater than the balance of the source wallet\n            </p>\n          )}\n          {showQuote && quoteAmount && !invalidAmount && (\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex flex-row items-center\">\n                  <div className=\"w-10 h-10\">\n                    <USDC />\n                  </div>\n                  <div\n                    className=\"w-4 h-4\"\n                    style={{\n                      position: \"relative\",\n                      bottom: 0,\n                      top: 15,\n                      right: 14,\n                      backgroundColor: \"black\",\n                      padding: 4,\n                      borderRadius: 4,\n                    }}\n                  >\n                    <img\n                      src={chainToIcon(selectedSourceChain as any)}\n                      alt={selectedSourceChain}\n                      height=\"32px\"\n                      width=\"32px\"\n                    />\n                  </div>\n                  <div>\n                    <p>-{quoteAmount} USDC</p>\n                  </div>\n                </div>\n                <div className=\"p-2\">\n                  <MoveDown />\n                </div>\n                <div className=\"flex flex-row items-center\">\n                  <div className=\"w-10 h-10\">\n                    <USDC />\n                  </div>\n                  <div\n                    className=\"w-4 h-4\"\n                    style={{\n                      position: \"relative\",\n                      bottom: 0,\n                      top: 15,\n                      right: 14,\n                      backgroundColor: \"black\",\n                      padding: 4,\n                      borderRadius: 4,\n                    }}\n                  >\n                    <img\n                      src={chainToIcon(\"Aptos\")}\n                      alt=\"Aptos\"\n                      height=\"32px\"\n                      width=\"32px\"\n                    />\n                  </div>\n                  <div>\n                    <p>+{quoteAmount} USDC</p>\n                  </div>\n                </div>\n                <div className=\"flex flex-row justify-between py-4\">\n                  <div className=\"flex flex-col\">\n                    <p className=\"text-sm\">via Wormhole</p>\n                  </div>\n                  <p className=\"text-md\">~{humanReadableETA(transactionETA)}</p>\n                </div>\n                <div className=\"flex flex-row gap-2\">\n                  <CircleAlert />\n                  <div>\n                    <p>This transfer requires two transactions.</p>\n                    <p>You will need to make two wallet approvals.</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {!transactionInitiated && (\n            <Button\n              onClick={onSwapClick}\n              disabled={\n                !amount ||\n                !sourceWallet ||\n                !wallet ||\n                !quoteAmount ||\n                !quote ||\n                invalidAmount\n              }\n            >\n              Confirm\n            </Button>\n          )}\n\n          {transactionInitiated && !transactionSubmitted && (\n            <div className=\"flex flex-col gap-4\">\n              <p className=\"text-lg text-center\">Submitting transaction</p>\n              <Button disabled>\n                <Loader2 className=\"animate-spin\" />\n              </Button>\n            </div>\n          )}\n\n          {transactionInitiated && transactionSubmitted && (\n            <div className=\"flex flex-col items-center justify-center gap-4\">\n              <p className=\"text-lg\">Transaction submitted, begin transfer</p>\n              {wormholeTransactionId && (\n                <a\n                  href={`https://wormholescan.io/#/tx/${wormholeTransactionId}?network=${\n                    isMainnet ? \"Mainnet\" : \"Testnet\"\n                  }`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <p className=\"text-md underline\">View on Wormholescan</p>\n                </a>\n              )}\n              {!isCountdownComplete && (\n                <>\n                  <p className=\"test-xl\">\n                    ETA: {humanReadableETA(transactionETA)}\n                  </p>\n                  <p className=\"text-3xl font-bold\">\n                    {countdown.minutes}:{countdown.seconds}\n                  </p>\n                  <Progress value={progress} />\n                </>\n              )}\n            </div>\n          )}\n\n          {transactionReadyToClaim && (\n            <div className=\"flex flex-col gap-4\">\n              <p className=\"text-lg text-center\">Ready to claim on Aptos</p>\n              <Button onClick={onClaimClick} disabled={transactionClaimed}>\n                {transactionClaimed ? \"Claimed\" : \"Claim\"}\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import {\n  APTOS_CONNECT_ACCOUNT_URL,\n  AboutAptosConnect,\n  AboutAptosConnectEducationScreen,\n  AnyAptosWallet,\n  AptosPrivacyPolicy,\n  WalletItem,\n  WalletSortingOptions,\n  groupAndSortWallets,\n  isAptosConnectWallet,\n  isInstallRequired,\n  truncateAddress,\n  useWallet,\n} from \"@aptos-labs/wallet-adapter-react\";\nimport {\n  ArrowLeft,\n  ArrowRight,\n  ChevronDown,\n  Copy,\n  LogOut,\n  User,\n} from \"lucide-react\";\nimport { useCallback, useState } from \"react\";\nimport { Button } from \"../../../ui/button\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"../../../ui/collapsible\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"../../../ui/dialog\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"../../../ui/dropdown-menu\";\nimport { useToast } from \"../../../ui/use-toast\";\n\nexport function WalletSelector({\n  walletSortingOptions,\n  transactionInProgress,\n}: {\n  walletSortingOptions: WalletSortingOptions;\n  transactionInProgress: boolean;\n}) {\n  const { account, connected, disconnect, wallet } = useWallet();\n  const { toast } = useToast();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const closeDialog = useCallback(() => setIsDialogOpen(false), []);\n\n  const copyAddress = useCallback(async () => {\n    if (!account?.address) return;\n    try {\n      await navigator.clipboard.writeText(account.address);\n      toast({\n        title: \"Success\",\n        description: \"Copied wallet address to clipboard.\",\n      });\n    } catch {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to copy wallet address.\",\n      });\n    }\n  }, [account?.address, toast]);\n\n  return connected ? (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button disabled={transactionInProgress}>\n          {account?.ansName || truncateAddress(account?.address) || \"Unknown\"}\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onSelect={copyAddress} className=\"gap-2\">\n          <Copy className=\"h-4 w-4\" /> Copy address\n        </DropdownMenuItem>\n        {wallet && isAptosConnectWallet(wallet) && (\n          <DropdownMenuItem asChild>\n            <a\n              href={APTOS_CONNECT_ACCOUNT_URL}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex gap-2\"\n            >\n              <User className=\"h-4 w-4\" /> Account\n            </a>\n          </DropdownMenuItem>\n        )}\n        <DropdownMenuItem onSelect={disconnect} className=\"gap-2\">\n          <LogOut className=\"h-4 w-4\" /> Disconnect\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  ) : (\n    <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n      <DialogTrigger asChild>\n        <Button>Connect Aptos Wallet</Button>\n      </DialogTrigger>\n      <ConnectWalletDialog close={closeDialog} {...walletSortingOptions} />\n    </Dialog>\n  );\n}\n\ninterface ConnectWalletDialogProps extends WalletSortingOptions {\n  close: () => void;\n}\n\nfunction ConnectWalletDialog({\n  close,\n  ...walletSortingOptions\n}: ConnectWalletDialogProps) {\n  const { wallets = [] } = useWallet();\n\n  const { aptosConnectWallets, availableWallets, installableWallets } =\n    groupAndSortWallets(wallets, walletSortingOptions);\n\n  const hasAptosConnectWallets = !!aptosConnectWallets.length;\n\n  const handleOnConnect = (wallet: AnyAptosWallet) => {\n    close();\n    console.log(\"Connected to wallet: \", wallet);\n  };\n\n  return (\n    <DialogContent className=\"max-h-screen overflow-auto\">\n      <AboutAptosConnect renderEducationScreen={renderEducationScreen}>\n        <DialogHeader>\n          <DialogTitle className=\"flex flex-col text-center leading-snug\">\n            {hasAptosConnectWallets ? (\n              <>\n                <span>Log in or sign up</span>\n                <span>with Social + Aptos Connect</span>\n              </>\n            ) : (\n              \"Connect Wallet\"\n            )}\n          </DialogTitle>\n        </DialogHeader>\n\n        {hasAptosConnectWallets && (\n          <div className=\"flex flex-col gap-2 pt-3\">\n            {aptosConnectWallets.map((wallet) => (\n              <AptosConnectWalletRow\n                key={wallet.name}\n                wallet={wallet}\n                onConnect={close}\n              />\n            ))}\n            <p className=\"flex gap-1 justify-center items-center text-muted-foreground text-sm\">\n              Learn more about{\" \"}\n              <AboutAptosConnect.Trigger className=\"flex gap-1 py-3 items-center text-foreground\">\n                Aptos Connect <ArrowRight size={16} />\n              </AboutAptosConnect.Trigger>\n            </p>\n            <AptosPrivacyPolicy className=\"flex flex-col items-center py-1\">\n              <p className=\"text-xs leading-5\">\n                <AptosPrivacyPolicy.Disclaimer />{\" \"}\n                <AptosPrivacyPolicy.Link className=\"text-muted-foreground underline underline-offset-4\" />\n                <span className=\"text-muted-foreground\">.</span>\n              </p>\n              <AptosPrivacyPolicy.PoweredBy className=\"flex gap-1.5 items-center text-xs leading-5 text-muted-foreground\" />\n            </AptosPrivacyPolicy>\n            <div className=\"flex items-center gap-3 pt-4 text-muted-foreground\">\n              <div className=\"h-px w-full bg-secondary\" />\n              Or\n              <div className=\"h-px w-full bg-secondary\" />\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex flex-col gap-3 pt-3\">\n          {availableWallets.map((wallet) => (\n            <WalletRow key={wallet.name} wallet={wallet} onConnect={close} />\n          ))}\n          {!!installableWallets.length && (\n            <Collapsible className=\"flex flex-col gap-3\">\n              <CollapsibleTrigger asChild>\n                <Button size=\"sm\" variant=\"ghost\" className=\"gap-2\">\n                  More wallets <ChevronDown />\n                </Button>\n              </CollapsibleTrigger>\n              <CollapsibleContent className=\"flex flex-col gap-3\">\n                {installableWallets.map((wallet) => (\n                  <WalletRow\n                    key={wallet.name}\n                    wallet={wallet}\n                    onConnect={close}\n                  />\n                ))}\n              </CollapsibleContent>\n            </Collapsible>\n          )}\n        </div>\n      </AboutAptosConnect>\n    </DialogContent>\n  );\n}\n\ninterface WalletRowProps {\n  wallet: AnyAptosWallet;\n  onConnect?: () => void;\n}\n\nfunction WalletRow({ wallet, onConnect }: WalletRowProps) {\n  return (\n    <WalletItem\n      wallet={wallet}\n      onConnect={onConnect}\n      className=\"flex items-center justify-between px-4 py-3 gap-4 border rounded-md\"\n    >\n      <div className=\"flex items-center gap-4\">\n        <WalletItem.Icon className=\"h-6 w-6\" />\n        <WalletItem.Name className=\"text-base font-normal\" />\n      </div>\n      {isInstallRequired(wallet) ? (\n        <Button size=\"sm\" variant=\"ghost\" asChild>\n          <WalletItem.InstallLink />\n        </Button>\n      ) : (\n        <WalletItem.ConnectButton asChild>\n          <Button size=\"sm\">Connect</Button>\n        </WalletItem.ConnectButton>\n      )}\n    </WalletItem>\n  );\n}\n\nfunction AptosConnectWalletRow({ wallet, onConnect }: WalletRowProps) {\n  return (\n    <WalletItem wallet={wallet} onConnect={onConnect}>\n      <WalletItem.ConnectButton asChild>\n        <Button size=\"lg\" variant=\"outline\" className=\"w-full gap-4\">\n          <WalletItem.Icon className=\"h-5 w-5\" />\n          <WalletItem.Name className=\"text-base font-normal\" />\n        </Button>\n      </WalletItem.ConnectButton>\n    </WalletItem>\n  );\n}\n\nfunction renderEducationScreen(screen: AboutAptosConnectEducationScreen) {\n  return (\n    <>\n      <DialogHeader className=\"grid grid-cols-[1fr_4fr_1fr] items-center space-y-0\">\n        <Button variant=\"ghost\" size=\"icon\" onClick={screen.cancel}>\n          <ArrowLeft />\n        </Button>\n        <DialogTitle className=\"leading-snug text-base text-center\">\n          About Aptos Connect\n        </DialogTitle>\n      </DialogHeader>\n\n      <div className=\"flex h-[162px] pb-3 items-end justify-center\">\n        <screen.Graphic />\n      </div>\n      <div className=\"flex flex-col gap-2 text-center pb-4\">\n        <screen.Title className=\"text-xl\" />\n        <screen.Description className=\"text-sm text-muted-foreground [&>a]:underline [&>a]:underline-offset-4 [&>a]:text-foreground\" />\n      </div>\n\n      <div className=\"grid grid-cols-3 items-center\">\n        <Button\n          size=\"sm\"\n          variant=\"ghost\"\n          onClick={screen.back}\n          className=\"justify-self-start\"\n        >\n          Back\n        </Button>\n        <div className=\"flex items-center gap-2 place-self-center\">\n          {screen.screenIndicators.map((ScreenIndicator, i) => (\n            <ScreenIndicator key={i} className=\"py-4\">\n              <div className=\"h-0.5 w-6 transition-colors bg-muted [[data-active]>&]:bg-foreground\" />\n            </ScreenIndicator>\n          ))}\n        </div>\n        <Button\n          size=\"sm\"\n          variant=\"ghost\"\n          onClick={screen.next}\n          className=\"gap-2 justify-self-end\"\n        >\n          {screen.screenIndex === screen.totalScreens - 1 ? \"Finish\" : \"Next\"}\n          <ArrowRight size={16} />\n        </Button>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\n\nconst Collapsible = CollapsiblePrimitive.Root;\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent;\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\n","import * as React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { X } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = \"DialogHeader\";\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = \"DialogFooter\";\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n","import * as React from \"react\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { Check, ChevronRight, Circle } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName;\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName;\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName;\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  );\n};\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\";\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n};\n","// Inspired by react-hot-toast library\nimport * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"@/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open: any) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  };\n}\n\nexport { useToast, toast };\n","import { Copy, LogOut } from \"lucide-react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Button } from \"../../../ui/button\";\nimport { Dialog, DialogContent, DialogTrigger } from \"../../../ui/dialog\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"../../../ui/dropdown-menu\";\nimport { useToast } from \"../../../ui/use-toast\";\nimport {\n  getSolanaStandardWallets,\n  SolanaWallet,\n} from \"@xlabs-libs/wallet-aggregator-solana\";\nimport { WalletState } from \"@xlabs-libs/wallet-aggregator-core\";\nimport { Connection } from \"@solana/web3.js\";\nimport { SolanaWalletItem } from \"./SolanaWalletItem\";\nimport { truncateAddress } from \"@aptos-labs/wallet-adapter-react\";\n\nexport function SolanaWalletSelector({\n  setSourceWallet,\n  transactionInProgress,\n}: {\n  setSourceWallet: (wallet: SolanaWallet | null) => void;\n  transactionInProgress: boolean;\n}) {\n  const [connected, setConnected] = useState(false);\n  const [accountAddress, setAccountAddress] = useState<string | undefined>(\n    undefined\n  );\n  const [wallet, setWallet] = useState<SolanaWallet | undefined>(undefined);\n\n  const { toast } = useToast();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const closeDialog = useCallback(() => setIsDialogOpen(false), []);\n\n  const onDisconnect = useCallback(async () => {\n    await wallet?.disconnect();\n    setConnected(false);\n    setSourceWallet(null);\n    setAccountAddress(undefined);\n    setWallet(undefined);\n  }, [wallet]);\n\n  const copyAddress = useCallback(async () => {\n    if (!accountAddress) return;\n    try {\n      await navigator.clipboard.writeText(accountAddress);\n      toast({\n        title: \"Success\",\n        description: \"Copied wallet address to clipboard.\",\n      });\n    } catch {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to copy wallet address.\",\n      });\n    }\n  }, [accountAddress, toast]);\n\n  return connected ? (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button disabled={transactionInProgress}>\n          {truncateAddress(accountAddress) || \"Unknown\"}\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onSelect={copyAddress} className=\"gap-2\">\n          <Copy className=\"h-4 w-4\" /> Copy address\n        </DropdownMenuItem>\n        <DropdownMenuItem onSelect={onDisconnect} className=\"gap-2\">\n          <LogOut className=\"h-4 w-4\" /> Disconnect\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  ) : (\n    <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n      <DialogTrigger asChild>\n        <Button>Connect Solana Wallet</Button>\n      </DialogTrigger>\n      <ConnectWalletDialog\n        close={closeDialog}\n        setAccountAddress={setAccountAddress}\n        setConnected={setConnected}\n        setWallet={setWallet}\n        setSourceWallet={setSourceWallet}\n      />\n    </Dialog>\n  );\n}\n\ninterface ConnectWalletDialogProps {\n  close: () => void;\n  setAccountAddress: (address: string | undefined) => void;\n  setConnected: (connected: boolean) => void;\n  setWallet: (wallet: SolanaWallet | undefined) => void;\n  setSourceWallet: (wallet: SolanaWallet | null) => void;\n}\n\nfunction ConnectWalletDialog({\n  close,\n  setAccountAddress,\n  setConnected,\n  setWallet,\n  setSourceWallet,\n}: ConnectWalletDialogProps) {\n  const [wallets, setSolanaWallets] = useState<SolanaWallet[]>([]);\n\n  useEffect(() => {\n    const solanaWallets = async () => {\n      // const cluster = \"mainnet-beta\";\n      // const url = clusterApiUrl(cluster);\n      const isDevnet = true;\n      const connection = isDevnet\n        ? \"https://api.devnet.solana.com\"\n        : \"https://solana-mainnet.rpc.extrnode.com/eb370d10-948a-4f47-8017-a80241a5c7fc\";\n      const wallets = await getSolanaStandardWallets(\n        new Connection(connection)\n      );\n      setSolanaWallets(wallets);\n    };\n    solanaWallets();\n  }, []);\n\n  const onConnectClick = useCallback(\n    (wallet: SolanaWallet) => {\n      setAccountAddress(wallet.getAddress());\n      setConnected(true);\n      setWallet(wallet);\n      setSourceWallet(wallet);\n      close();\n    },\n    [setAccountAddress, close, setSourceWallet]\n  );\n\n  return (\n    <DialogContent className=\"max-h-screen overflow-auto\">\n      <div className=\"flex flex-col gap-3 pt-3\">\n        {wallets.map((wallet) => (\n          <WalletRow\n            key={wallet.getName()}\n            wallet={wallet}\n            onConnect={() => onConnectClick(wallet)}\n          />\n        ))}\n      </div>\n    </DialogContent>\n  );\n}\n\ninterface WalletRowProps {\n  wallet: SolanaWallet;\n  onConnect?: () => void;\n}\n\nfunction WalletRow({ wallet, onConnect }: WalletRowProps) {\n  const connectWallet = useCallback(async () => {\n    const res = await wallet.connect();\n    console.log(\"res\", res);\n    onConnect?.();\n  }, [wallet, onConnect]);\n\n  return (\n    <SolanaWalletItem\n      wallet={wallet}\n      onConnect={connectWallet}\n      className=\"flex items-center justify-between px-4 py-3 gap-4 border rounded-md\"\n    >\n      <div className=\"flex items-center gap-4\">\n        <SolanaWalletItem.Icon className=\"h-6 w-6\" />\n        <SolanaWalletItem.Name className=\"text-base font-normal\" />\n      </div>\n      {wallet.getWalletState() === WalletState.NotDetected ? (\n        <Button size=\"sm\" variant=\"ghost\" asChild>\n          <SolanaWalletItem.InstallLink />\n        </Button>\n      ) : (\n        <SolanaWalletItem.ConnectButton asChild>\n          <Button size=\"sm\">Connect</Button>\n        </SolanaWalletItem.ConnectButton>\n      )}\n    </SolanaWalletItem>\n  );\n}\n","import { Slot } from \"@radix-ui/react-slot\";\nimport {\n  cloneElement,\n  createContext,\n  forwardRef,\n  isValidElement,\n  ReactNode,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { SolanaWallet } from \"@xlabs-libs/wallet-aggregator-solana\";\n\nexport interface WalletItemProps extends HeadlessComponentProps {\n  /** The wallet option to be displayed. */\n  wallet: SolanaWallet;\n  /** A callback to be invoked when the wallet is connected. */\n  onConnect?: () => void;\n}\n\nfunction useSolanaWalletItemContext(displayName: string) {\n  const context = useContext(SolanaWalletItemContext);\n\n  if (!context) {\n    throw new Error(\n      `\\`${displayName}\\` must be used within \\`SolanaWalletItem\\``\n    );\n  }\n\n  return context;\n}\n\nconst SolanaWalletItemContext = createContext<{\n  wallet: SolanaWallet;\n  connectWallet: () => void;\n} | null>(null);\n\nconst Root = forwardRef<HTMLDivElement, WalletItemProps>(\n  ({ wallet, onConnect, className, asChild, children }, ref) => {\n    const connectWallet = useCallback(async () => {\n      await wallet.connect();\n      onConnect?.();\n    }, [wallet, onConnect]);\n\n    // const isWalletReady =\n    //   wallet.readyState === WalletReadyState.Installed ||\n    //   wallet.readyState === WalletReadyState.Loadable;\n\n    // const mobileSupport =\n    //   \"deeplinkProvider\" in wallet && wallet.deeplinkProvider;\n\n    // if (!isWalletReady && isRedirectable() && !mobileSupport) return null;\n\n    const Component = asChild ? Slot : \"div\";\n\n    return (\n      <SolanaWalletItemContext.Provider value={{ wallet, connectWallet }}>\n        <Component ref={ref} className={className}>\n          {children}\n        </Component>\n      </SolanaWalletItemContext.Provider>\n    );\n  }\n);\nRoot.displayName = \"SolanaWalletItem\";\n\nconst Icon = createHeadlessComponent(\n  \"SolanaWalletItem.Icon\",\n  \"img\",\n  (displayName) => {\n    const context = useSolanaWalletItemContext(displayName);\n\n    return {\n      src: context.wallet.getIcon(),\n      alt: `${context.wallet.getName()} icon`,\n    };\n  }\n);\n\nconst Name = createHeadlessComponent(\n  \"SolanaWalletItem.Name\",\n  \"div\",\n  (displayName) => {\n    const context = useSolanaWalletItemContext(displayName);\n\n    return {\n      children: context.wallet.getName(),\n    };\n  }\n);\n\nconst ConnectButton = createHeadlessComponent(\n  \"SolanaWalletItem.ConnectButton\",\n  \"button\",\n  (displayName) => {\n    const context = useSolanaWalletItemContext(displayName);\n\n    return {\n      onClick: context.connectWallet,\n      children: \"Connect\",\n    };\n  }\n);\n\nconst InstallLink = createHeadlessComponent(\n  \"SolanaWalletItem.InstallLink\",\n  \"a\",\n  (displayName) => {\n    const context = useSolanaWalletItemContext(displayName);\n\n    return {\n      href: context.wallet.getUrl(),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"Install\",\n    };\n  }\n);\n\n/** A headless component for rendering a wallet option's name, icon, and either connect button or install link. */\nexport const SolanaWalletItem = Object.assign(Root, {\n  Icon,\n  Name,\n  ConnectButton,\n  InstallLink,\n});\n\nexport interface HeadlessComponentProps {\n  /** A class name for styling the element. */\n  className?: string;\n  /**\n   * Whether to render as the child element instead of the default element provided.\n   * All props will be merged into the child element.\n   */\n  asChild?: boolean;\n  children?: ReactNode;\n}\n\n/**\n * Gets an HTML element type from its tag name\n * @example\n * HTMLElementFromTag<\"img\"> // resolved type: HTMLImageElement\n */\ntype HTMLElementFromTag<T extends keyof JSX.IntrinsicElements> =\n  JSX.IntrinsicElements[T] extends React.ClassAttributes<infer Element>\n    ? Element\n    : HTMLElement;\n\nexport function createHeadlessComponent<\n  TElement extends keyof JSX.IntrinsicElements,\n>(\n  displayName: string,\n  elementType: TElement,\n  props?:\n    | JSX.IntrinsicElements[TElement]\n    | ((displayName: string) => JSX.IntrinsicElements[TElement])\n) {\n  const component = forwardRef<\n    HTMLElementFromTag<TElement>,\n    HeadlessComponentProps\n  >(({ className, asChild, children }, ref) => {\n    const Component = asChild ? Slot : elementType;\n\n    const { children: defaultChildren, ...resolvedProps } =\n      typeof props === \"function\" ? props(displayName) : (props ?? {});\n    const resolvedChildren =\n      /**\n       * Use props' default children if no children are set in the component element's children and when asChild is true.\n       */\n      asChild && isValidElement(children) && !children.props.children\n        ? cloneElement(children, {}, defaultChildren)\n        : (children ?? defaultChildren);\n\n    return (\n      /**\n       * Due to the complexity of the types at play, TypeScript reports the\n       * following error for our JSX below:\n       *\n       * `Expression produces a union type that is too complex to represent.`\n       *\n       * We can safely ignore this error and retain accurate return types for\n       * consumers of this function. The only drawback is that type-checking is\n       * ignored for the JSX block below.\n       */\n      // @ts-expect-error\n      <Component ref={ref} className={className} {...resolvedProps}>\n        {resolvedChildren}\n      </Component>\n    );\n  });\n  component.displayName = displayName;\n\n  return component;\n}\n","export const mainnetChains = {\n  Ethereum: {\n    key: \"Ethereum\",\n    id: 2,\n    context: \"Ethereum\",\n    finalityThreshold: 64,\n    displayName: \"Ethereum\",\n    explorerUrl: \"https://etherscan.io/\",\n    explorerName: \"Etherscan\",\n    gasToken: \"ETH\",\n    chainId: 1,\n    icon: \"Ethereum\",\n    maxBlockSearch: 2000,\n    symbol: \"ETH\",\n  },\n  Solana: {\n    key: \"Solana\",\n    id: 1,\n    context: \"Solana\",\n    finalityThreshold: 32,\n    displayName: \"Solana\",\n    explorerUrl: \"https://explorer.solana.com/\",\n    explorerName: \"Solana Explorer\",\n    gasToken: \"SOL\",\n    chainId: 0,\n    icon: \"Solana\",\n    maxBlockSearch: 2000,\n    symbol: \"SOL\",\n  },\n};\n\nexport const AptosMainnetChain = {\n  key: \"Aptos\",\n  id: 22,\n  context: \"Aptos\",\n  finalityThreshold: 0,\n  displayName: \"Aptos\",\n  explorerUrl: \"https://explorer.aptoslabs.com/\",\n  explorerName: \"Aptos Explorer\",\n  gasToken: \"APT\",\n  chainId: 0,\n  icon: \"Aptos\",\n  maxBlockSearch: 0,\n  symbol: \"APT\",\n};\n","export const testnetChains = {\n  // Avalanche: {\n  //   key: \"Avalanche\",\n  //   id: 6,\n  //   context: \"Ethereum\",\n  //   finalityThreshold: 1,\n  //   displayName: \"Fuji\",\n  //   explorerUrl: \"https://testnet.avascan.info/blockchain/c/\",\n  //   explorerName: \"Avascan\",\n  //   gasToken: \"AVAX\",\n  //   chainId: 43113,\n  //   icon: \"Avalanche\",\n  //   maxBlockSearch: 2000,\n  //   symbol: \"AVAX\",\n  //   sdkName: \"Avalanche\",\n  //   wrappedGasToken: \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\",\n  // },\n  Sepolia: {\n    key: \"Sepolia\",\n    id: 10002,\n    context: \"Ethereum\",\n    finalityThreshold: 0,\n    displayName: \"Sepolia\",\n    explorerUrl: \"https://sepolia.etherscan.io/\",\n    explorerName: \"Etherscan\",\n    gasToken: \"ETHsepolia\",\n    chainId: 11155111,\n    icon: \"Ethereum\",\n    maxBlockSearch: 2000,\n    symbol: \"ETH\",\n    sdkName: \"Sepolia\",\n    wrappedGasToken: \"0xeef12A83EE5b7161D3873317c8E0E7B76e0B5D9c\",\n  },\n  Solana: {\n    key: \"Solana\",\n    id: 1,\n    context: \"Solana\",\n    finalityThreshold: 32,\n    displayName: \"Solana\",\n    explorerUrl: \"https://explorer.solana.com/\",\n    explorerName: \"Solana Explorer\",\n    gasToken: \"SOL\",\n    chainId: 0,\n    icon: \"Solana\",\n    maxBlockSearch: 2000,\n    symbol: \"SOL\",\n    sdkName: \"Solana\",\n    wrappedGasToken: \"So11111111111111111111111111111111111111112\",\n  },\n};\n\nexport const AptosTestnetChain = {\n  key: \"Aptos\",\n  id: 22,\n  context: \"Aptos\",\n  finalityThreshold: 0,\n  displayName: \"Aptos\",\n  explorerUrl: \"https://explorer.aptoslabs.com/\",\n  explorerName: \"Aptos Explorer\",\n  gasToken: \"APT\",\n  chainId: 0,\n  icon: \"Aptos\",\n  maxBlockSearch: 0,\n  symbol: \"APT\",\n  sdkName: \"Aptos\",\n};\n","export const mainnetChainTokens: Record<string, any> = {\n  Ethereum: {\n    key: \"USDCeth\",\n    symbol: \"USDC\",\n    nativeChain: \"Ethereum\",\n    tokenId: {\n      chain: \"Ethereum\",\n      address: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    },\n    icon: \"USDC\",\n    coinGeckoId: \"usd-coin\",\n    color: \"#ffffff\",\n    decimals: 6,\n  },\n  Solana: {\n    key: \"USDCsol\",\n    symbol: \"USDC\",\n    nativeChain: \"Solana\",\n    tokenId: {\n      chain: \"Solana\",\n      address: \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n    },\n    icon: \"USDC\",\n    coinGeckoId: \"usd-coin\",\n    color: \"#2774CA\",\n    decimals: 6,\n  },\n};\n\nexport const AptosMainnetUSDCToken = {\n  key: \"USDCapt\",\n  symbol: \"USDC\",\n  nativeChain: \"Aptos\",\n  tokenId: {\n    chain: \"Aptos\",\n    address:\n      \"0xbae207659db88bea0cbead6da0ed00aac12edcdda169e591cd41c94180b46f3b\",\n  },\n  icon: \"USDC\",\n  coinGeckoId: \"usd-coin\",\n  color: \"#2774CA\",\n  decimals: 6,\n};\n","export const testnetChainTokens: Record<string, any> = {\n  Avalanche: {\n    symbol: \"USDC\",\n    icon: \"USDC\",\n    decimals: 6,\n    tokenId: {\n      chain: \"Avalanche\",\n      address: \"0x5425890298aed601595a70AB815c96711a31Bc65\",\n    },\n  },\n  Sepolia: {\n    symbol: \"USDC\",\n    icon: \"USDC\",\n    decimals: 6,\n    tokenId: {\n      chain: \"Sepolia\",\n      address: \"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\",\n    },\n  },\n  Solana: {\n    symbol: \"USDC\",\n    tokenId: {\n      chain: \"Solana\",\n      address: \"4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU\",\n    },\n    icon: \"USDC\",\n    decimals: 6,\n  },\n};\n\nexport const AptosTestnetUSDCToken = {\n  symbol: \"USDC\",\n  decimals: 6,\n  tokenId: {\n    chain: \"Aptos\",\n    address:\n      \"0x69091fbab5f7d635ee7ac5098cf0c1efbe31d68fec0f2cd565e8d168daf52832\",\n  },\n  icon: \"USDC\",\n};\n","import * as React from \"react\";\nimport { ChevronDown, ExternalLink } from \"lucide-react\";\nimport { Button } from \"../ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"../ui/dropdown-menu\";\nimport {\n  mainnetChains,\n  mainnetChainTokens,\n  testnetChains,\n  testnetChainTokens,\n} from \"../utils/index\";\nimport { chainToIcon } from \"@wormhole-foundation/sdk-icons\";\nimport { truncateAddress } from \"@aptos-labs/wallet-adapter-react\";\nimport { Chain } from \"@wormhole-foundation/sdk/dist/cjs\";\n\nexport function ChainSelect({\n  setSelectedSourceChain,\n  selectedSourceChain,\n  isMainnet,\n}: {\n  setSelectedSourceChain: (chain: Chain) => void;\n  selectedSourceChain: Chain;\n  isMainnet: boolean;\n}) {\n  const [selectedItem, setSelectedItem] =\n    React.useState<Chain>(selectedSourceChain);\n\n  const onSelectedSourceChainChangeClicked = (chain: string) => {\n    setSelectedItem(chain as Chain);\n    setSelectedSourceChain(chain as Chain);\n  };\n\n  const chains = isMainnet ? mainnetChains : testnetChains;\n\n  const chainTokens = isMainnet ? mainnetChainTokens : testnetChainTokens;\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" className=\"w-full justify-between\">\n          {selectedItem ? (\n            <>\n              <img\n                src={chainToIcon(selectedItem as any)}\n                alt={selectedItem}\n                height=\"32px\"\n                width=\"32px\"\n              />\n              <span className=\"ml-2\">USDC</span>\n            </>\n          ) : (\n            \"Select an item\"\n          )}\n          <ChevronDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent>\n        {Object.values(chains).map((chain, index) => (\n          <DropdownMenuItem\n            key={index}\n            onSelect={() =>\n              onSelectedSourceChainChangeClicked(chain.displayName)\n            }\n          >\n            <img\n              src={chainToIcon(chain.icon as any)}\n              alt={chain.key}\n              height=\"32px\"\n              width=\"32px\"\n            />\n            <div>\n              <span className=\"ml-2\">USDC</span>\n              <a\n                href={`${chain.explorerUrl}/address/${chainTokens[chain.key].tokenId.address}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                onClick={(e) => e.stopPropagation()}\n                className=\"ml-2 underline flex flex-row gap-2\"\n              >\n                {truncateAddress(chainTokens[chain.key].tokenId.address)}\n                <ExternalLink className=\"h-4 w-4\" />\n              </a>\n            </div>\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","// This function signs and sends the transaction while constantly checking for confirmation\n// and resending the transaction if it hasn't been confirmed after the specified interval\n\nimport { SolanaWallet } from \"@xlabs-libs/wallet-aggregator-solana\";\n\nimport {\n  AddressLookupTableAccount,\n  Commitment,\n  ComputeBudgetProgram,\n  ConfirmOptions,\n  LAMPORTS_PER_SOL,\n  SimulatedTransactionResponse,\n  TransactionInstruction,\n  TransactionMessage,\n  VersionedTransaction,\n} from \"@solana/web3.js\";\n\nimport { Transaction } from \"@solana/web3.js\";\nimport { RpcResponseAndContext, SignatureResult } from \"@solana/web3.js\";\nimport {\n  determinePriorityFee,\n  determinePriorityFeeTritonOne,\n  isVersionedTransaction,\n  SolanaUnsignedTransaction,\n} from \"@wormhole-foundation/sdk-solana\";\n\nimport { Connection } from \"@solana/web3.js\";\nimport { Network } from \"@wormhole-foundation/sdk\";\n\nexport type SolanaRpcProvider = \"triton\" | \"helius\" | \"ankr\" | \"unknown\";\n\n// See https://docs.triton.one/chains/solana/sending-txs for more information\nexport async function signAndSendTransaction(\n  request: SolanaUnsignedTransaction<Network>,\n  wallet: SolanaWallet | undefined,\n  options?: ConfirmOptions\n) {\n  if (!wallet) throw new Error(\"Wallet not found\");\n  // if (!config.rpcs.Solana) throw new Error('Solana RPC not found');\n\n  const commitment = options?.commitment ?? \"finalized\";\n  console.log(\"SolanaSigner\", wallet);\n  const connection = new Connection((wallet as any).connection._rpcEndpoint);\n  const { blockhash, lastValidBlockHeight } =\n    await connection.getLatestBlockhash(commitment);\n\n  const unsignedTx = await setPriorityFeeInstructions(\n    connection,\n    blockhash,\n    lastValidBlockHeight,\n    request\n  );\n\n  let confirmTransactionPromise: Promise<\n    RpcResponseAndContext<SignatureResult>\n  > | null = null;\n  let confirmedTx: RpcResponseAndContext<SignatureResult> | null = null;\n  let txSendAttempts = 1;\n  let signature = \"\";\n  // TODO: VersionedTransaction is supported, but the interface needs to be updated\n  const tx = await wallet.signTransaction(unsignedTx as Transaction);\n  const serializedTx = tx.serialize();\n  const sendOptions = {\n    skipPreflight: true,\n    maxRetries: 0,\n    preFlightCommitment: commitment, // See PR and linked issue for why setting this matters: https://github.com/anza-xyz/agave/pull/483\n  };\n  signature = await connection.sendRawTransaction(serializedTx, sendOptions);\n  confirmTransactionPromise = connection.confirmTransaction(\n    {\n      signature,\n      blockhash,\n      lastValidBlockHeight,\n    },\n    commitment\n  );\n\n  // This loop will break once the transaction has been confirmed or the block height is exceeded.\n  // An exception will be thrown if the block height is exceeded by the confirmTransactionPromise.\n  // The transaction will be resent if it hasn't been confirmed after the interval.\n  const txRetryInterval = 5000;\n  while (!confirmedTx) {\n    confirmedTx = await Promise.race([\n      confirmTransactionPromise,\n      new Promise<null>((resolve) =>\n        setTimeout(() => {\n          resolve(null);\n        }, txRetryInterval)\n      ),\n    ]);\n    if (confirmedTx) {\n      break;\n    }\n    console.log(\n      `Tx not confirmed after ${\n        txRetryInterval * txSendAttempts++\n      }ms, resending`\n    );\n    try {\n      await connection.sendRawTransaction(serializedTx, sendOptions);\n    } catch (e) {\n      console.error(\"Failed to resend transaction:\", e);\n    }\n  }\n\n  if (confirmedTx.value.err) {\n    let errorMessage = `Transaction failed: ${confirmedTx.value.err}`;\n    if (typeof confirmedTx.value.err === \"object\") {\n      try {\n        errorMessage = `Transaction failed: ${JSON.stringify(\n          confirmedTx.value.err,\n          (_key, value) =>\n            typeof value === \"bigint\" ? value.toString() : value // Handle bigint props\n        )}`;\n      } catch (e: unknown) {\n        // Most likely a circular reference error, we can't stringify this error object.\n        // See for more details:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#exceptions\n        errorMessage = `Transaction failed: Unknown error`;\n      }\n    }\n    throw new Error(`Transaction failed: ${errorMessage}`);\n  }\n\n  return signature;\n}\n\nexport async function setPriorityFeeInstructions(\n  connection: Connection,\n  blockhash: string,\n  lastValidBlockHeight: number,\n  request: SolanaUnsignedTransaction<Network>\n): Promise<Transaction | VersionedTransaction> {\n  const unsignedTx = request.transaction.transaction;\n\n  const computeBudgetIxFilter = (ix: TransactionInstruction) =>\n    ix.programId.toString() !== \"ComputeBudget111111111111111111111111111111\";\n\n  if (isVersionedTransaction(unsignedTx)) {\n    const luts = (\n      await Promise.all(\n        unsignedTx.message.addressTableLookups.map((acc) =>\n          connection.getAddressLookupTable(acc.accountKey)\n        )\n      )\n    )\n      .map((lut) => lut.value)\n      .filter((lut) => lut !== null) as AddressLookupTableAccount[];\n\n    const message = TransactionMessage.decompile(unsignedTx.message, {\n      addressLookupTableAccounts: luts,\n    });\n    message.recentBlockhash = blockhash;\n    unsignedTx.message.recentBlockhash = blockhash;\n\n    // Remove existing compute budget instructions if they were added by the SDK\n    message.instructions = message.instructions.filter(computeBudgetIxFilter);\n    message.instructions.push(\n      ...(await createPriorityFeeInstructions(connection, unsignedTx))\n    );\n\n    unsignedTx.message = message.compileToV0Message(luts);\n    unsignedTx.sign(request.transaction.signers ?? []);\n  } else {\n    unsignedTx.recentBlockhash = blockhash;\n    unsignedTx.lastValidBlockHeight = lastValidBlockHeight;\n\n    // Remove existing compute budget instructions if they were added by the SDK\n    unsignedTx.instructions = unsignedTx.instructions.filter(\n      computeBudgetIxFilter\n    );\n    unsignedTx.add(\n      ...(await createPriorityFeeInstructions(connection, unsignedTx))\n    );\n    if (request.transaction.signers) {\n      unsignedTx.partialSign(...request.transaction.signers);\n    }\n  }\n\n  return unsignedTx;\n}\n\n// This will throw if the simulation fails\nasync function createPriorityFeeInstructions(\n  connection: Connection,\n  transaction: Transaction | VersionedTransaction,\n  commitment?: Commitment\n) {\n  let unitsUsed = 200_000;\n  let simulationAttempts = 0;\n\n  simulationLoop: while (true) {\n    if (\n      isVersionedTransaction(transaction) &&\n      !transaction.message.recentBlockhash\n    ) {\n      // This is required for versioned transactions\n      // SimulateTransaction throws if recentBlockhash is an empty string\n      const { blockhash } = await connection.getLatestBlockhash(commitment);\n      transaction.message.recentBlockhash = blockhash;\n    }\n\n    const response = await (isVersionedTransaction(transaction)\n      ? connection.simulateTransaction(transaction, {\n          commitment,\n          replaceRecentBlockhash: true,\n        })\n      : connection.simulateTransaction(transaction));\n\n    if (response.value.err) {\n      if (checkKnownSimulationError(response.value)) {\n        // Number of attempts will be at most 5 for known errors\n        if (simulationAttempts < 5) {\n          simulationAttempts++;\n          await sleep(1000);\n          continue simulationLoop;\n        }\n      } else if (simulationAttempts < 3) {\n        // Number of attempts will be at most 3 for unknown errors\n        simulationAttempts++;\n        await sleep(1000);\n        continue simulationLoop;\n      }\n\n      // Still failing after multiple attempts for both known and unknown errors\n      // We should throw in that case\n      throw new Error(\n        `Simulation failed: ${JSON.stringify(response.value.err)}\\nLogs:\\n${(\n          response.value.logs || []\n        ).join(\"\\n  \")}`\n      );\n    } else {\n      // Simulation was successful\n      if (response.value.unitsConsumed) {\n        unitsUsed = response.value.unitsConsumed;\n      }\n      break;\n    }\n  }\n\n  const unitBudget = Math.floor(unitsUsed * 1.2); // Budget in 20% headroom\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    ComputeBudgetProgram.setComputeUnitLimit({\n      // Set compute budget to 120% of the units used in the simulated transaction\n      units: unitBudget,\n    })\n  );\n\n  // const priorityFeeConfig =\n  //   config.transactionSettings?.Solana?.priorityFee || {};\n\n  // const {\n  //   percentile = 0.9,\n  //   percentileMultiple = 1,\n  //   min = 100_000,\n  //   max = 100_000_000,\n  // } = priorityFeeConfig;\n  const percentile = 0.9;\n  const percentileMultiple = 1;\n  const min = 100_000;\n  const max = 100_000_000;\n\n  const calculateFee = async (\n    rpcProvider?: SolanaRpcProvider\n  ): Promise<{ fee: number; methodUsed: \"triton\" | \"default\" | \"minimum\" }> => {\n    if (rpcProvider === \"triton\") {\n      // Triton has an experimental RPC method that accepts a percentile paramater\n      // and usually gives more accurate fee numbers.\n      try {\n        const fee = await determinePriorityFeeTritonOne(\n          connection,\n          transaction,\n          percentile,\n          percentileMultiple,\n          min,\n          max\n        );\n\n        return {\n          fee,\n          methodUsed: \"triton\",\n        };\n      } catch (e) {\n        console.warn(`Failed to determine priority fee using Triton RPC:`, e);\n      }\n    }\n\n    try {\n      // By default, use generic Solana RPC method\n      const fee = await determinePriorityFee(\n        connection,\n        transaction,\n        percentile,\n        percentileMultiple,\n        min,\n        max\n      );\n\n      return {\n        fee,\n        methodUsed: \"default\",\n      };\n    } catch (e) {\n      console.warn(`Failed to determine priority fee using Triton RPC:`, e);\n\n      return {\n        fee: min,\n        methodUsed: \"minimum\",\n      };\n    }\n  };\n\n  const rpcProvider = determineRpcProvider(connection.rpcEndpoint);\n\n  const { fee, methodUsed } = await calculateFee(rpcProvider);\n\n  const maxFeeInSol =\n    (fee /\n      // convert microlamports to lamports\n      1e6 /\n      // convert lamports to SOL\n      LAMPORTS_PER_SOL) *\n    // multiply by maximum compute units used\n    unitBudget;\n\n  console.table({\n    \"RPC Provider\": rpcProvider,\n    \"Method used\": methodUsed,\n    \"Percentile used\": percentile,\n    \"Multiple used\": percentileMultiple,\n    \"Compute budget\": unitBudget,\n    \"Priority fee\": fee,\n    \"Max fee in SOL\": maxFeeInSol,\n  });\n\n  instructions.push(\n    ComputeBudgetProgram.setComputeUnitPrice({ microLamports: fee })\n  );\n  return instructions;\n}\n\n// Checks response logs for known errors.\n// Returns when the first error is encountered.\nfunction checkKnownSimulationError(\n  response: SimulatedTransactionResponse\n): boolean {\n  const errors = {} as any;\n\n  // This error occur when the blockhash included in a transaction is not deemed to be valid\n  // when a validator processes a transaction. We can retry the simulation to get a valid blockhash.\n  if (response.err === \"BlockhashNotFound\") {\n    errors[\"BlockhashNotFound\"] =\n      \"Blockhash not found during simulation. Trying again.\";\n  }\n\n  // Check the response logs for any known errors\n  if (response.logs) {\n    for (const line of response.logs) {\n      // In some cases which aren't deterministic, like a slippage error, we can retry the\n      // simulation a few times to get a successful response.\n      if (line.includes(\"SlippageToleranceExceeded\")) {\n        errors[\"SlippageToleranceExceeded\"] =\n          \"Slippage failure during simulation. Trying again.\";\n      }\n\n      // In this case a require_gte expression was violated during a Swap instruction.\n      // We can retry the simulation to get a successful response.\n      if (line.includes(\"RequireGteViolated\")) {\n        errors[\"RequireGteViolated\"] =\n          \"Swap instruction failure during simulation. Trying again.\";\n      }\n    }\n  }\n\n  // No known simulation errors found\n  if (isEmptyObject(errors)) {\n    return false;\n  }\n\n  console.table(errors);\n  return true;\n}\n\nexport async function sleep(timeout: number) {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n}\n\n/**\n * Checks whether an object is empty.\n *\n * isEmptyObject(null)\n * // => true\n *\n * isEmptyObject(undefined)\n * // => true\n *\n * isEmptyObject({})\n * // => true\n *\n * isEmptyObject({ 'a': 1 })\n * // => false\n */\nexport const isEmptyObject = (value: object | null | undefined) => {\n  if (value === null || value === undefined) {\n    return true;\n  }\n\n  // Check all property keys for any own prop\n  for (const key in value) {\n    if (value.hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nfunction determineRpcProvider(endpoint: string): SolanaRpcProvider {\n  if (endpoint.includes(\"rpcpool.com\")) {\n    return \"triton\";\n  } else if (endpoint.includes(\"helius-rpc.com\")) {\n    return \"helius\";\n  } else if (endpoint.includes(\"rpc.ankr.com\")) {\n    return \"ankr\";\n  } else {\n    return \"unknown\";\n  }\n}\n","import {\n  EvmUnsignedTransaction,\n  EvmChains,\n} from \"@wormhole-foundation/sdk-evm\";\nimport { Network } from \"@wormhole-foundation/sdk\";\nimport { Eip6963Wallet } from \"@xlabs-libs/wallet-aggregator-evm\";\nimport { getBigInt } from \"ethers\";\n\nexport async function signAndSendTransaction(\n  request: EvmUnsignedTransaction<Network, EvmChains>,\n  wallet: Eip6963Wallet,\n  chainName: string,\n  options: any // TODO ?!?!!?!?\n): Promise<string> {\n  // Ensure the signer is connected to the correct chain\n  console.log(\"wallet\", wallet);\n  const provider = await wallet.getNetworkInfo();\n  console.log(\"provider\", provider);\n  if (!provider) throw new Error(\"No signer found for chain\" + chainName);\n  const expectedChainId = request.transaction.chainId\n    ? getBigInt(request.transaction.chainId)\n    : undefined;\n  const actualChainId = provider?.chainId;\n  console.log(\"actualChainId\", actualChainId);\n  console.log(\"expectedChainId\", expectedChainId);\n  if (\n    !actualChainId ||\n    !expectedChainId ||\n    BigInt(actualChainId) !== expectedChainId\n  ) {\n    throw new Error(\n      `Signer is not connected to the right chain. Expected ${expectedChainId}, got ${actualChainId}`\n    );\n  }\n\n  const tx = await wallet.sendTransaction(request.transaction);\n  //const result = await tx.wait();\n  console.log(\"tx.hash\", tx.id);\n\n  return tx.id;\n}\n","import {\n  UnsignedTransaction,\n  Network,\n  Chain,\n  TxHash,\n  SignAndSendSigner,\n} from \"@wormhole-foundation/sdk\";\nimport { SolanaUnsignedTransaction } from \"@wormhole-foundation/sdk-solana/dist/cjs/unsignedTransaction\";\nimport { Wallet } from \"@xlabs-libs/wallet-aggregator-core\";\nimport { SolanaWallet } from \"@xlabs-libs/wallet-aggregator-solana\";\nimport * as solanaSigner from \"./SolanaSigner\";\nimport * as ethereumSigner from \"./EthereumSigner\";\nimport { EvmChains } from \"@wormhole-foundation/sdk-evm/dist/cjs/types\";\nimport { EvmUnsignedTransaction } from \"@wormhole-foundation/sdk-evm/dist/cjs/unsignedTransaction\";\nimport { Eip6963Wallet } from \"@xlabs-libs/wallet-aggregator-evm\";\nimport { testnetChains } from \"@/utils/chains/testnet\";\n\nexport class Signer<N extends Network, C extends Chain>\n  implements SignAndSendSigner<N, C>\n{\n  _chain: C;\n  _address: string;\n  _options: any;\n  _wallet: Wallet;\n\n  constructor(chain: C, address: string, options: any, wallet: Wallet) {\n    this._chain = chain;\n    this._address = address;\n    this._options = options;\n    this._wallet = wallet;\n  }\n\n  chain(): C {\n    return this._chain;\n  }\n  address(): string {\n    return this._address;\n  }\n  /* other methods... */\n\n  async signAndSend(txs: UnsignedTransaction<N, C>[]): Promise<TxHash[]> {\n    console.log(\"Signer signAndSend txs\", txs);\n    const txHashes: TxHash[] = [];\n\n    for (const tx of txs) {\n      const txId = await signAndSendTransaction(\n        this._chain,\n        tx,\n        this._wallet,\n        this._options\n      );\n      txHashes.push(txId);\n    }\n    return txHashes;\n  }\n}\n\nexport const signAndSendTransaction = async (\n  chain: Chain,\n  request: UnsignedTransaction<Network, Chain>,\n  wallet: Wallet,\n  options: any = {}\n): Promise<string> => {\n  if (!wallet) {\n    throw new Error(\"wallet is undefined\");\n  }\n  const chainContext =\n    testnetChains[chain as keyof typeof testnetChains].context;\n  console.log(\"chainContext\", chainContext);\n  // TODO make it dynamic import\n  if (chainContext === \"Solana\") {\n    const signature = await solanaSigner.signAndSendTransaction(\n      request as SolanaUnsignedTransaction<Network>,\n      wallet as SolanaWallet,\n      options\n    );\n    return signature;\n  } else if (chainContext === \"Ethereum\") {\n    const tx = await ethereumSigner.signAndSendTransaction(\n      request as EvmUnsignedTransaction<Network, EvmChains>,\n      wallet as Eip6963Wallet,\n      chain,\n      options\n    );\n    return tx;\n  } else {\n    throw new Error(`Unsupported chain: ${chain}`);\n  }\n\n  // if (chain === \"Ethereum\") {\n  //   const evm = await import('./SolanaSigner');\n  //   const tx = await evm.signAndSendTransaction(\n  //     request as EvmUnsignedTransaction<Network, EvmChains>,\n  //     wallet,\n  //     chain,\n  //     options,\n  //   );\n  //   return tx;\n  // } else if (chain === \"Solana\") {\n  //   const solana = await import('./SolanaSigner');\n  //   const signature = await solana.signAndSendTransaction(\n  //     request as SolanaUnsignedTransaction<Network>,\n  //     wallet,\n  //     options,\n  //   );\n  //   return signature;\n  // } else if (chain === \"Aptos\") {\n  //   const aptos = await import('utils/wallet/aptos');\n  //   const tx = await aptos.signAndSendTransaction(\n  //     request as AptosUnsignedTransaction<Network, AptosChains>,\n  //     wallet,\n  //   );\n  //   return tx.id;\n  // } else {\n  //   throw new Error('unimplemented');\n  // }\n};\n","import { AptosWallet } from \"@xlabs-libs/wallet-aggregator-aptos\";\nimport {\n  Account,\n  AccountAuthenticator,\n  AnyRawTransaction,\n  Aptos,\n  AptosConfig,\n  Network as AptosNetwork,\n  Ed25519Account,\n  Ed25519PrivateKey,\n} from \"@aptos-labs/ts-sdk\";\n\nimport {\n  Chain,\n  Network,\n  SignAndSendSigner,\n  TxHash,\n  UnsignedTransaction,\n} from \"@wormhole-foundation/sdk\";\nimport {\n  AptosUnsignedTransaction,\n  AptosChains,\n} from \"@wormhole-foundation/sdk-aptos\";\nimport { WalletContextState } from \"@aptos-labs/wallet-adapter-react\";\n\nexport class AptosSigner<N extends Network, C extends Chain>\n  implements SignAndSendSigner<N, C>\n{\n  _chain: C;\n  _address: string;\n  _options: any;\n  _wallet: WalletContextState;\n  _feePayerAccount: Ed25519Account | undefined;\n\n  constructor(\n    chain: C,\n    address: string,\n    options: any,\n    wallet: WalletContextState,\n    feePayerAccount: Ed25519Account | undefined\n  ) {\n    this._chain = chain;\n    this._address = address;\n    this._options = options;\n    this._wallet = wallet;\n    this._feePayerAccount = feePayerAccount;\n  }\n\n  chain(): C {\n    return this._chain;\n  }\n  address(): string {\n    return this._address;\n  }\n  /* other methods... */\n\n  async signAndSend(txs: UnsignedTransaction<N, C>[]): Promise<TxHash[]> {\n    console.log(\"Signer signAndSend txs\", txs);\n    const txHashes: TxHash[] = [];\n\n    for (const tx of txs) {\n      const txId = await signAndSendTransaction(\n        tx as AptosUnsignedTransaction<Network, AptosChains>,\n        this._wallet,\n        this._feePayerAccount\n      );\n      txHashes.push(txId);\n    }\n    return txHashes;\n  }\n}\n\nexport function fetchOptions() {\n  const aptosWallets: Record<string, AptosWallet> = {};\n  const walletCore = AptosWallet.walletCoreFactory(\n    { network: AptosNetwork.TESTNET },\n    true,\n    []\n  );\n  walletCore.wallets.forEach((wallet) => {\n    aptosWallets[wallet.name] = new AptosWallet(wallet, walletCore);\n  });\n  return aptosWallets;\n}\n\nexport async function signAndSendTransaction(\n  request: UnsignedTransaction<Network, AptosChains>,\n  wallet: WalletContextState | undefined,\n  feePayerAccount: Ed25519Account | undefined\n) {\n  if (!wallet) {\n    throw new Error(\"Wallet is undefined\");\n  }\n\n  const payload = request.transaction;\n  // The wallets do not handle Uint8Array serialization\n  payload.functionArguments = payload.functionArguments.map((a: any) => {\n    if (a instanceof Uint8Array) {\n      return Array.from(a);\n    } else if (typeof a === \"bigint\") {\n      return a.toString();\n    } else {\n      return a;\n    }\n  });\n\n  const aptosConfig = new AptosConfig({\n    network: AptosNetwork.TESTNET,\n  });\n  const aptos = new Aptos(aptosConfig);\n\n  const txnToSign = await aptos.transaction.build.simple({\n    data: payload,\n    sender: wallet.account?.address!,\n    withFeePayer: feePayerAccount ? true : false,\n  });\n  const senderAuthenticator = await wallet.signTransaction(txnToSign);\n\n  const txnToSubmit: {\n    transaction: AnyRawTransaction;\n    senderAuthenticator: AccountAuthenticator;\n    feePayerAuthenticator?: AccountAuthenticator;\n  } = {\n    transaction: txnToSign,\n    senderAuthenticator,\n  };\n\n  if (feePayerAccount) {\n    const feePayerSignerAuthenticator = aptos.transaction.signAsFeePayer({\n      signer: feePayerAccount,\n      transaction: txnToSign,\n    });\n    txnToSubmit.feePayerAuthenticator = feePayerSignerAuthenticator;\n  }\n\n  const response = await aptos.transaction.submit.simple(txnToSubmit);\n  console.log(\"response\", response.hash);\n\n  const tx = await aptos.waitForTransaction({\n    transactionHash: response.hash,\n  });\n\n  return tx.hash;\n}\n","import * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => {\n  return (\n    <ProgressPrimitive.Root\n      ref={ref}\n      className={cn(\n        \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        className=\"h-full w-full flex-1 bg-primary transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  );\n});\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n","import { Copy, LogOut } from \"lucide-react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Button } from \"../../../ui/button\";\nimport { Dialog, DialogContent, DialogTrigger } from \"../../../ui/dialog\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"../../../ui/dropdown-menu\";\nimport { useToast } from \"../../../ui/use-toast\";\nimport {\n  BinanceWallet,\n  EVMWallet,\n  Eip6963Wallet,\n  Eip6963Wallets,\n  InjectedWallet,\n  InjectedWallets,\n  DEFAULT_CHAINS,\n} from \"@xlabs-libs/wallet-aggregator-evm\";\nimport { truncateAddress } from \"@aptos-labs/wallet-adapter-react\";\nimport { Wallet, WalletState } from \"@xlabs-libs/wallet-aggregator-core\";\nimport { EthereumWalletItem } from \"./EthereumWalletItem\";\n\nconst eip6963Wallets = Object.entries(Eip6963Wallets).reduce(\n  (acc, [key, name]) => ({ [key]: new Eip6963Wallet(name), ...acc }),\n  {}\n);\n\nexport function EthereumWalletSelector({\n  setSourceWallet,\n  transactionInProgress,\n}: {\n  setSourceWallet: (wallet: Wallet | null) => void;\n  transactionInProgress: boolean;\n}) {\n  const [connected, setConnected] = useState(false);\n  const [accountAddress, setAccountAddress] = useState<string | undefined>(\n    undefined\n  );\n  const [wallet, setWallet] = useState<Eip6963Wallet | undefined>(undefined);\n\n  const { toast } = useToast();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const closeDialog = useCallback(() => setIsDialogOpen(false), []);\n\n  const onDisconnect = useCallback(async () => {\n    await wallet?.disconnect();\n    setConnected(false);\n    setSourceWallet(null);\n    setAccountAddress(undefined);\n    setWallet(undefined);\n  }, [wallet]);\n\n  const copyAddress = useCallback(async () => {\n    if (!accountAddress) return;\n    try {\n      await navigator.clipboard.writeText(accountAddress);\n      toast({\n        title: \"Success\",\n        description: \"Copied wallet address to clipboard.\",\n      });\n    } catch {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to copy wallet address.\",\n      });\n    }\n  }, [accountAddress, toast]);\n\n  return connected ? (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button disabled={transactionInProgress}>\n          {truncateAddress(accountAddress) || \"Unknown\"}\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onSelect={copyAddress} className=\"gap-2\">\n          <Copy className=\"h-4 w-4\" /> Copy address\n        </DropdownMenuItem>\n        <DropdownMenuItem onSelect={onDisconnect} className=\"gap-2\">\n          <LogOut className=\"h-4 w-4\" /> Disconnect\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  ) : (\n    <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n      <DialogTrigger asChild>\n        <Button>Connect Ethereum Wallet</Button>\n      </DialogTrigger>\n      <ConnectWalletDialog\n        close={closeDialog}\n        setAccountAddress={setAccountAddress}\n        setConnected={setConnected}\n        setWallet={setWallet}\n        setSourceWallet={setSourceWallet}\n      />\n    </Dialog>\n  );\n}\n\ninterface ConnectWalletDialogProps {\n  close: () => void;\n  setAccountAddress: (address: string | undefined) => void;\n  setConnected: (connected: boolean) => void;\n  setWallet: (wallet: Eip6963Wallet | undefined) => void;\n  setSourceWallet: (wallet: Eip6963Wallet | null) => void;\n}\n\nfunction ConnectWalletDialog({\n  close,\n  setAccountAddress,\n  setConnected,\n  setWallet,\n  setSourceWallet,\n}: ConnectWalletDialogProps) {\n  const [wallets, setEthereumWallets] = useState<Eip6963Wallet[]>([]);\n\n  useEffect(() => {\n    const ethereumWallets = Object.values(eip6963Wallets).filter((wallet) =>\n      [\"MetaMask\", \"Phantom\", \"Coinbase Wallet\"].includes(\n        (wallet as Eip6963Wallet).getName()\n      )\n    );\n    setEthereumWallets(ethereumWallets as Eip6963Wallet[]);\n  }, []);\n\n  const onConnectClick = useCallback(\n    (wallet: Eip6963Wallet) => {\n      setAccountAddress(wallet.getAddress());\n      setConnected(true);\n      setWallet(wallet);\n      setSourceWallet(wallet);\n      close();\n    },\n    [setAccountAddress, close, setSourceWallet]\n  );\n  return (\n    <DialogContent className=\"max-h-screen overflow-auto\">\n      <div className=\"flex flex-col gap-3 pt-3\">\n        {wallets.map((wallet) => (\n          <WalletRow\n            key={wallet.getName()}\n            wallet={wallet}\n            onConnect={() => onConnectClick(wallet)}\n          />\n        ))}\n      </div>\n    </DialogContent>\n  );\n}\n\ninterface WalletRowProps {\n  wallet: Eip6963Wallet;\n  onConnect?: () => void;\n}\n\nfunction WalletRow({ wallet, onConnect }: WalletRowProps) {\n  const connectWallet = useCallback(async () => {\n    const res = await wallet.connect();\n    console.log(\"res\", res);\n    onConnect?.();\n  }, [wallet, onConnect]);\n\n  return (\n    <EthereumWalletItem\n      wallet={wallet}\n      onConnect={connectWallet}\n      className=\"flex items-center justify-between px-4 py-3 gap-4 border rounded-md\"\n    >\n      <div className=\"flex items-center gap-4\">\n        <EthereumWalletItem.Icon className=\"h-6 w-6\" />\n        <EthereumWalletItem.Name className=\"text-base font-normal\" />\n      </div>\n      {wallet.getWalletState() === WalletState.NotDetected ? (\n        <Button size=\"sm\" variant=\"ghost\" asChild>\n          <EthereumWalletItem.InstallLink />\n        </Button>\n      ) : (\n        <EthereumWalletItem.ConnectButton asChild>\n          <Button size=\"sm\">Connect</Button>\n        </EthereumWalletItem.ConnectButton>\n      )}\n    </EthereumWalletItem>\n  );\n}\n","import { Slot } from \"@radix-ui/react-slot\";\nimport {\n  cloneElement,\n  createContext,\n  forwardRef,\n  isValidElement,\n  ReactNode,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { Eip6963Wallet } from \"@xlabs-libs/wallet-aggregator-evm\";\nexport interface WalletItemProps extends HeadlessComponentProps {\n  /** The wallet option to be displayed. */\n  wallet: Eip6963Wallet;\n  /** A callback to be invoked when the wallet is connected. */\n  onConnect?: () => void;\n}\n\nfunction useEthereumWalletItemContext(displayName: string) {\n  const context = useContext(EthereumWalletItemContext);\n\n  if (!context) {\n    throw new Error(\n      `\\`${displayName}\\` must be used within \\`EthereumWalletItem\\``\n    );\n  }\n\n  return context;\n}\n\nconst EthereumWalletItemContext = createContext<{\n  wallet: Eip6963Wallet;\n  connectWallet: () => void;\n} | null>(null);\n\nconst Root = forwardRef<HTMLDivElement, WalletItemProps>(\n  ({ wallet, onConnect, className, asChild, children }, ref) => {\n    const connectWallet = useCallback(async () => {\n      await wallet.connect();\n      onConnect?.();\n    }, [wallet, onConnect]);\n\n    // const isWalletReady =\n    //   wallet.readyState === WalletReadyState.Installed ||\n    //   wallet.readyState === WalletReadyState.Loadable;\n\n    // const mobileSupport =\n    //   \"deeplinkProvider\" in wallet && wallet.deeplinkProvider;\n\n    // if (!isWalletReady && isRedirectable() && !mobileSupport) return null;\n\n    const Component = asChild ? Slot : \"div\";\n\n    return (\n      <EthereumWalletItemContext.Provider value={{ wallet, connectWallet }}>\n        <Component ref={ref} className={className}>\n          {children}\n        </Component>\n      </EthereumWalletItemContext.Provider>\n    );\n  }\n);\nRoot.displayName = \"EthereumWalletItem\";\n\nconst Icon = createHeadlessComponent(\n  \"EthereumWalletItem.Icon\",\n  \"img\",\n  (displayName) => {\n    const context = useEthereumWalletItemContext(displayName);\n\n    return {\n      src: context.wallet.getIcon(),\n      alt: `${context.wallet.getName()} icon`,\n    };\n  }\n);\n\nconst Name = createHeadlessComponent(\n  \"EthereumWalletItem.Name\",\n  \"div\",\n  (displayName) => {\n    const context = useEthereumWalletItemContext(displayName);\n\n    return {\n      children: context.wallet.getName(),\n    };\n  }\n);\n\nconst ConnectButton = createHeadlessComponent(\n  \"EthereumWalletItem.ConnectButton\",\n  \"button\",\n  (displayName) => {\n    const context = useEthereumWalletItemContext(displayName);\n\n    return {\n      onClick: context.connectWallet,\n      children: \"Connect\",\n    };\n  }\n);\n\nconst InstallLink = createHeadlessComponent(\n  \"EthereumWalletItem.InstallLink\",\n  \"a\",\n  (displayName) => {\n    const context = useEthereumWalletItemContext(displayName);\n\n    return {\n      href: context.wallet.getUrl(),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"Install\",\n    };\n  }\n);\n\n/** A headless component for rendering a wallet option's name, icon, and either connect button or install link. */\nexport const EthereumWalletItem = Object.assign(Root, {\n  Icon,\n  Name,\n  ConnectButton,\n  InstallLink,\n});\n\nexport interface HeadlessComponentProps {\n  /** A class name for styling the element. */\n  className?: string;\n  /**\n   * Whether to render as the child element instead of the default element provided.\n   * All props will be merged into the child element.\n   */\n  asChild?: boolean;\n  children?: ReactNode;\n}\n\n/**\n * Gets an HTML element type from its tag name\n * @example\n * HTMLElementFromTag<\"img\"> // resolved type: HTMLImageElement\n */\ntype HTMLElementFromTag<T extends keyof JSX.IntrinsicElements> =\n  JSX.IntrinsicElements[T] extends React.ClassAttributes<infer Element>\n    ? Element\n    : HTMLElement;\n\nexport function createHeadlessComponent<\n  TElement extends keyof JSX.IntrinsicElements,\n>(\n  displayName: string,\n  elementType: TElement,\n  props?:\n    | JSX.IntrinsicElements[TElement]\n    | ((displayName: string) => JSX.IntrinsicElements[TElement])\n) {\n  const component = forwardRef<\n    HTMLElementFromTag<TElement>,\n    HeadlessComponentProps\n  >(({ className, asChild, children }, ref) => {\n    const Component = asChild ? Slot : elementType;\n\n    const { children: defaultChildren, ...resolvedProps } =\n      typeof props === \"function\" ? props(displayName) : (props ?? {});\n    const resolvedChildren =\n      /**\n       * Use props' default children if no children are set in the component element's children and when asChild is true.\n       */\n      asChild && isValidElement(children) && !children.props.children\n        ? cloneElement(children, {}, defaultChildren)\n        : (children ?? defaultChildren);\n\n    return (\n      /**\n       * Due to the complexity of the types at play, TypeScript reports the\n       * following error for our JSX below:\n       *\n       * `Expression produces a union type that is too complex to represent.`\n       *\n       * We can safely ignore this error and retain accurate return types for\n       * consumers of this function. The only drawback is that type-checking is\n       * ignored for the JSX block below.\n       */\n      // @ts-expect-error\n      <Component ref={ref} className={className} {...resolvedProps}>\n        {resolvedChildren}\n      </Component>\n    );\n  });\n  component.displayName = displayName;\n\n  return component;\n}\n","import { SVGProps } from \"react\";\n\nexport function AptosLogo(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.6943 3.99351C12.8543 3.99351 13.0077 3.92825 13.1182 3.8127L13.9661 2.9278C14.0721 2.81724 14.2184 2.75489 14.3714 2.75489H14.4063C14.5672 2.75489 14.7201 2.82389 14.8265 2.94442L15.541 3.75202C15.6769 3.90581 15.8723 3.99351 16.0776 3.99351H17.9933C16.1691 1.56864 13.2674 0 9.99882 0C6.73019 0 3.82858 1.56864 2.00432 3.99351H12.6943ZM13.7056 6.69066H15.4679L15.4675 6.69107H19.4352C19.71 7.47373 19.8891 8.30086 19.9606 9.15917H12.5272C12.3219 9.15917 12.1265 9.07147 11.9906 8.91768L11.2761 8.11008C11.1697 7.98955 11.0168 7.92055 10.8559 7.92055H10.821C10.668 7.92055 10.5217 7.9829 10.4157 8.09346L9.56783 8.97836C9.45727 9.09391 9.30389 9.15917 9.14387 9.15917H0.0371094C0.1086 8.30128 0.287743 7.47415 0.562483 6.69107H10.2092C10.5118 6.69107 10.7998 6.56098 11.0006 6.33445L11.6136 5.64157C11.72 5.52145 11.8734 5.45245 12.0338 5.45245C12.1943 5.45245 12.3477 5.52104 12.4541 5.64157L13.169 6.44917C13.3049 6.60254 13.5002 6.69066 13.7056 6.69066ZM5.97165 14.1684C5.86109 14.284 5.70772 14.3493 5.54769 14.3493H0.992651C0.615662 13.5695 0.338843 12.7328 0.174248 11.8562H6.65746C6.96047 11.8562 7.24851 11.7261 7.44927 11.4996L8.06234 10.8067C8.16875 10.6866 8.32212 10.6176 8.48256 10.6176C8.643 10.6176 8.79637 10.6862 8.90277 10.8067L9.61727 11.6143C9.75318 11.7677 9.94853 11.8558 10.1539 11.8558H19.823C19.6584 12.7324 19.382 13.5691 19.0046 14.3488H8.93104C8.72571 14.3488 8.53036 14.2611 8.39444 14.1073L7.67995 13.2998C7.57354 13.1796 7.42059 13.1106 7.25973 13.1106H7.22482C7.07186 13.1106 6.92555 13.173 6.81957 13.2835L5.97165 14.1684ZM6.22687 16.8199H8.84668V16.8203H17.3096C15.4841 18.7759 12.8855 20 9.99968 20C7.11386 20 4.51484 18.7759 2.68974 16.8203H2.73048C3.03348 16.8203 3.32152 16.6902 3.52228 16.4637L4.13535 15.7708C4.24176 15.6507 4.39513 15.5817 4.55557 15.5817C4.71601 15.5817 4.86938 15.6503 4.97579 15.7708L5.69028 16.5784C5.82619 16.7318 6.02155 16.8199 6.22687 16.8199Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nfunction USDC() {\n  return (\n    <svg\n      style={{ maxHeight: '100%', maxWidth: '100%' }}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      data-name=\"86977684-12db-4850-8f30-233a7c267d11\"\n      width=\"2000\"\n      height=\"2000\"\n      viewBox=\"0 0 2000 2000\"\n    >\n      <path\n        fill=\"#2775ca\"\n        d=\"M1000 2000c554.17 0 1000-445.83 1000-1000S1554.17 0 1000 0 0 445.83 0 1000s445.83 1000 1000 1000z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M1275 1158.33c0-145.83-87.5-195.83-262.5-216.66-125-16.67-150-50-150-108.34s41.67-95.83 125-95.83c75 0 116.67 25 137.5 87.5 4.17 12.5 16.67 20.83 29.17 20.83h66.66c16.67 0 29.17-12.5 29.17-29.16v-4.17c-16.67-91.67-91.67-162.5-187.5-170.83v-100c0-16.67-12.5-29.17-33.33-33.34h-62.5c-16.67 0-29.17 12.5-33.34 33.34v95.83c-125 16.67-204.16 100-204.16 204.17 0 137.5 83.33 191.66 258.33 212.5 116.67 20.83 154.17 45.83 154.17 112.5s-58.34 112.5-137.5 112.5c-108.34 0-145.84-45.84-158.34-108.34-4.16-16.66-16.66-25-29.16-25h-70.84c-16.66 0-29.16 12.5-29.16 29.17v4.17c16.66 104.16 83.33 179.16 220.83 200v100c0 16.66 12.5 29.16 33.33 33.33h62.5c16.67 0 29.17-12.5 33.34-33.33v-100c125-20.84 208.33-108.34 208.33-220.84z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M787.5 1595.83c-325-116.66-491.67-479.16-370.83-800 62.5-175 200-308.33 370.83-370.83 16.67-8.33 25-20.83 25-41.67V325c0-16.67-8.33-29.17-25-33.33-4.17 0-12.5 0-16.67 4.16-395.83 125-612.5 545.84-487.5 941.67 75 233.33 254.17 412.5 487.5 487.5 16.67 8.33 33.34 0 37.5-16.67 4.17-4.16 4.17-8.33 4.17-16.66v-58.34c0-12.5-12.5-29.16-25-37.5zm441.67-1300c-16.67-8.33-33.34 0-37.5 16.67-4.17 4.17-4.17 8.33-4.17 16.67v58.33c0 16.67 12.5 33.33 25 41.67 325 116.66 491.67 479.16 370.83 800-62.5 175-200 308.33-370.83 370.83-16.67 8.33-25 20.83-25 41.67V1700c0 16.67 8.33 29.17 25 33.33 4.17 0 12.5 0 16.67-4.16 395.83-125 612.5-545.84 487.5-941.67-75-237.5-258.34-416.67-487.5-491.67z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport default USDC;\n","export const logger = {\n  log: (...args: any[]) => {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(...args);\n    }\n  },\n  warn: (...args: any[]) => {\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(...args);\n    }\n  },\n  error: (...args: any[]) => {\n    if (process.env.NODE_ENV === \"development\") {\n      console.error(...args);\n    }\n  },\n};\n"],"mappings":"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","names":["import_react","import_wallet_adapter_react","import_lucide_react","import_ts_sdk","import_sdk_icons","import_lucide_react","React","CollapsibleTrigger","CollapsibleContent","React","React","import_lucide_react","React","toast","props","toast","CollapsibleTrigger","CollapsibleContent","import_lucide_react","import_react","import_react_slot","import_react","Root","import_wallet_adapter_react","toast","ConnectWalletDialog","wallets","WalletRow","React","import_lucide_react","import_wallet_adapter_react","React","import_web3","rpcProvider","fee","signAndSendTransaction","signAndSendTransaction","signAndSendTransaction","signAndSendTransaction","AptosNetwork","aptos","React","import_lucide_react","import_react","import_wallet_adapter_react","import_wallet_aggregator_core","import_react_slot","import_react","Root","Icon","createHeadlessComponent","Name","ConnectButton","InstallLink","toast","ConnectWalletDialog","WalletRow","AptosNetwork","amount","quote","amountUtils","solana","aptos","evm","platform","cctpRoute"]}