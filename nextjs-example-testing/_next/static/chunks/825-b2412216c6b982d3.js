(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[825],{39362:function(){},43777:function(e,t,n){"use strict";n.d(t,{te:function(){return ep},kj:function(){return O},I:function(){return q},Wp:function(){return ew}});var a,r,o=n(20803),s=n(49489),i=n(52131),c=n(71976),l=n(9144),u=n(8224),h=n(71170),d=n(70757),g=n(21236),w=n(71806),m=n(48038),p=n(8322),f=n(2155),E=n(25998),C={log:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n]}},y=class{chain(){return this._chain}address(){return this._wallet.accountAddress.toString()}claimedTransactionHashes(){return this._claimedTransactionHashes}async signAndSend(e){let t=[];for(let n of e){let e=await T(n,this._wallet,this._sponsorAccount);t.push(e),this._claimedTransactionHashes=e}return t}constructor(e,t,n,a){this._chain=e,this._options=t,this._wallet=n,this._sponsorAccount=a,this._claimedTransactionHashes=""}};async function T(e,t,n){if(!t)throw Error("Wallet is undefined");let a=e.transaction;a.functionArguments=a.functionArguments.map(e=>e instanceof Uint8Array?Array.from(e):"bigint"==typeof e?e.toString():e);let r=new o.ScN({network:o.ZcK.TESTNET}),s=new o.gZG(r),i=await s.transaction.build.simple({data:a,sender:t.accountAddress.toString(),withFeePayer:!!n}),c=await s.transaction.sign({signer:t,transaction:i}),l={transaction:i,senderAuthenticator:c};if(n){if("string"==typeof n);else{let e=s.transaction.signAsFeePayer({signer:n,transaction:i});l.feePayerAuthenticator=e}}let u=await s.transaction.submit.simple(l);return(await s.waitForTransaction({transactionHash:u.hash})).hash}async function S(e,t,n){var a;if(!t)throw Error("Wallet not found").message;let r=null!=(a=null==n?void 0:n.commitment)?a:"finalized",o=new p.Connection("https://api.devnet.solana.com"),{blockhash:s,lastValidBlockHeight:i}=await o.getLatestBlockhash(r);e.transaction.transaction;let c=await k(o,s,i,e),l=null,u=null,h=1,d="",g=(await t.signTransaction(c)).serialize(),w={skipPreflight:!0,maxRetries:0,preFlightCommitment:r};for(d=await o.sendRawTransaction(g,w),l=o.confirmTransaction({signature:d,blockhash:s,lastValidBlockHeight:i},r);!u&&!(u=await Promise.race([l,new Promise(e=>setTimeout(()=>{e(null)},5e3))]));){console.log("Tx not confirmed after ".concat(5e3*h++,"ms, resending"));try{await o.sendRawTransaction(g,w)}catch(e){console.error("Failed to resend transaction:",e)}}if(u.value.err){let e="Transaction failed: ".concat(u.value.err);if("object"==typeof u.value.err)try{e="Transaction failed: ".concat(JSON.stringify(u.value.err,(e,t)=>"bigint"==typeof t?t.toString():t))}catch(t){e="Transaction failed: Unknown error"}throw Error("Transaction failed: ".concat(e)).message}return d}async function k(e,t,n,a){let r=a.transaction.transaction;return r.recentBlockhash=t,r.lastValidBlockHeight=n,r.instructions=r.instructions.filter(e=>"ComputeBudget111111111111111111111111111111"!==e.programId.toString()),r.add(...await v(e,r)),a.transaction.signers&&r.partialSign(...a.transaction.signers),r}async function v(e,t,n){let a=2e5,r=0;for(;;){let n=await e.simulateTransaction(t);if(n.value.err){if(function(e){let t={};if("BlockhashNotFound"===e.err&&(t.BlockhashNotFound="Blockhash not found during simulation. Trying again."),e.logs)for(let n of e.logs)n.includes("SlippageToleranceExceeded")&&(t.SlippageToleranceExceeded="Slippage failure during simulation. Trying again."),n.includes("RequireGteViolated")&&(t.RequireGteViolated="Swap instruction failure during simulation. Trying again.");return!x(t)&&(console.table(t),!0)}(n.value)){if(r<5){r++,await A(1e3);continue}}else if(r<3){r++,await A(1e3);continue}throw Error("Simulation failed: ".concat(JSON.stringify(n.value.err),"\nLogs:\n").concat((n.value.logs||[]).join("\n  "))).message}n.value.unitsConsumed&&(a=n.value.unitsConsumed);break}let o=Math.floor(1.2*a),s=[];s.push(p.ComputeBudgetProgram.setComputeUnitLimit({units:o}));let i=async n=>{if("triton"===n)try{return{fee:await (0,f.VE)(e,t,.9,1,1e5,1e8),methodUsed:"triton"}}catch(e){console.warn("Failed to determine priority fee using Triton RPC:",e)}try{return{fee:await (0,f.J6)(e,t,.9,1,1e5,1e8),methodUsed:"default"}}catch(e){return console.warn("Failed to determine priority fee using Triton RPC:",e),{fee:1e5,methodUsed:"minimum"}}},c=function(e){try{let t=new URL(e).hostname;if("rpcpool.com"===t)return"triton";if("helius-rpc.com"===t)return"helius";if("rpc.ankr.com"===t)return"ankr";return"unknown"}catch(e){return"unknown"}}(e.rpcEndpoint),{fee:l,methodUsed:u}=await i(c),h=l/1e6/p.LAMPORTS_PER_SOL*o;return console.table({"RPC Provider":c,"Method used":u,"Percentile used":.9,"Multiple used":1,"Compute budget":o,"Priority fee":l,"Max fee in SOL":h}),s.push(p.ComputeBudgetProgram.setComputeUnitPrice({microLamports:l})),s}async function A(e){return new Promise(t=>setTimeout(t,e))}var x=e=>{if(null==e)return!0;for(let t in e)if(e.hasOwnProperty.call(e,t))return!1;return!0};async function I(e,t,n,a){if(!t||!t.sendTransaction)throw Error("wallet.sendTransaction is undefined").message;let r=await t.getConnectedNetwork();if(!r)throw Error("No signer found for chain"+n).message;let o=e.transaction.chainId?(0,E.yT)(e.transaction.chainId):void 0;if(!r||!o||BigInt(r.name)!==o)throw Error("Signer is not connected to the right chain. Expected ".concat(o,", got ").concat(r)).message;return await t.sendTransaction(e.transaction)}async function N(e,t){if(!t||!t.sendTransaction)throw Error("wallet.sendTransaction is undefined");let n=await t.sendTransaction({transactionBlock:e.transaction});return null==n?void 0:n.id}var P=class{chain(){return this._chain.displayName}address(){return this._address}async signAndSend(e){let t=[];for(let n of e){let e=await b(this._chain,n,this._wallet,this._options);t.push(e)}return t}constructor(e,t,n,a){this._chain=e,this._address=t,this._options=n,this._wallet=a}},b=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!n)throw Error("wallet is undefined");if("Solana"===e.context)return await S(t,n,a);if("Ethereum"===e.context)return await I(t,n,e.displayName,a);if("Sui"===e.context)return await N(t,n);throw Error("Unsupported chain: ".concat(e))},D=class{get wormholeContext(){return this._wormholeContext}async setWormholeContext(e){var t;let n=null==(t=this.crossChainCore._dappConfig)?void 0:t.network;if(n===o.ZcK.DEVNET)throw Error("Devnet is not supported on Wormhole");if(!e)throw Error("Origin chain not selected");let a=n===o.ZcK.MAINNET,r=[g.Z,w.Z,m.Z],i=await (0,s.c77)(a?"Mainnet":"Testnet",r);this._wormholeContext=i}async getRoute(e){if(!this._wormholeContext)throw Error("Wormhole context not initialized");let{sourceToken:t,destToken:n}=this.getTokenInfo(e),a=this._wormholeContext.getPlatform((0,i.fm)(e)).getChain(e);C.log("sourceContext",a);let r=this._wormholeContext.getPlatform((0,i.fm)("Aptos")).getChain("Aptos");C.log("destContext",r);let o=await c.f.create(this._wormholeContext,{source:t,destination:n},a,r),s=this._wormholeContext.resolver([l.R]),u=(await s.findRoutes(o))[0];return this.wormholeRoute=u,this.wormholeRequest=o,{route:u,request:o}}async getQuote(e){let{amount:t,sourceChain:n}=e;this._wormholeContext||await this.setWormholeContext(n);let{route:a,request:r}=await this.getRoute(n),o=await a.validate(r,{amount:t,options:{nativeGas:0}});if(!o.valid)throw C.log("invalid",o.valid),Error("Invalid quote: ".concat(o.error)).message;let s=await a.quote(r,o.params);if(!s.success)throw C.log("quote failed",s.success),Error("Invalid quote: ".concat(s.error)).message;return this.wormholeQuote=s,C.log("quote",s),s}async submitCCTPTransfer(e){let t;let{sourceChain:n,wallet:a,destinationAddress:r}=e;if(this._wormholeContext||await this.setWormholeContext(n),!this.wormholeRoute||!this.wormholeRequest||!this.wormholeQuote)throw Error("Wormhole route, request, or quote not initialized");let o=this.getChainConfig(n).context,s=await a.getAccount();t="Solana"===o?s.publicKey.toString():s.address,C.log("signerAddress",t);let i=new P(this.getChainConfig(n),t,{},a),c=await this.wormholeRoute.initiate(this.wormholeRequest,i,this.wormholeQuote,u.D.chainAddress("Aptos",r.toString()));return{originChainTxnId:("originTxs"in c?c.originTxs[c.originTxs.length-1].txid:void 0)||"",receipt:c}}async claimCCTPTransfer(e){let{receipt:t,mainSigner:n,sponsorAccount:a}=e;if(!this.wormholeRoute)throw Error("Wormhole route not initialized");C.log("mainSigner",n.accountAddress.toString());let r=0;for(;r<5;)try{for await(t of this.wormholeRoute.track(t,12e4))if(t.state>=h.ki.SourceInitiated){C.log("Receipt is on track ",t);try{let e=new y("Aptos",{},n,a||void 0);if(!d.x7(this.wormholeRoute))return{destinationChainTxnId:""};{let n=await this.wormholeRoute.complete(e,t);return C.log("Claim receipt: ",n),{destinationChainTxnId:e.claimedTransactionHashes()}}}catch(e){return console.error("Failed to claim",e),{destinationChainTxnId:""}}}}catch(t){console.error("Error tracking transfer (attempt ".concat(r+1," / ").concat(5,"):"),t);let e=1e3*Math.pow(2,r);await (0,o._vH)(e),r++}return{destinationChainTxnId:""}}async initiateCCTPTransfer(e){var t;if((null==(t=this.crossChainCore._dappConfig)?void 0:t.network)===o.ZcK.DEVNET)throw Error("Devnet is not supported on Wormhole");e.amount&&await this.getQuote({amount:e.amount,sourceChain:e.sourceChain});let{originChainTxnId:n,receipt:a}=await this.submitCCTPTransfer(e),{destinationChainTxnId:r}=await this.claimCCTPTransfer({receipt:a,mainSigner:e.mainSigner,sponsorAccount:e.sponsorAccount});return{originChainTxnId:n,destinationChainTxnId:r}}getChainConfig(e){let t=this.crossChainCore.CHAINS[e];if(!t)throw Error("Chain config not found for chain: ".concat(e));return t}getTokenInfo(e){return{sourceToken:u.D.tokenId(this.crossChainCore.TOKENS[e].tokenId.chain,this.crossChainCore.TOKENS[e].tokenId.address),destToken:u.D.tokenId(this.crossChainCore.APTOS_TOKEN.tokenId.chain,this.crossChainCore.APTOS_TOKEN.tokenId.address)}}constructor(e){this.crossChainCore=e}},W=((a=W||{}).ETH="Ethereum",a.TERRA="Terra",a.XPLA="XPLA",a.SOLANA="Solana",a.ALGORAND="Algorand",a.NEAR="Near",a.APTOS="Aptos",a.SUI="Sui",a.OTHER="OTHER",a),q={Sepolia:{key:"Sepolia",id:10002,context:"Ethereum",finalityThreshold:0,displayName:"Sepolia",explorerUrl:"https://sepolia.etherscan.io/",explorerName:"Etherscan",gasToken:"ETHsepolia",chainId:11155111,icon:"Ethereum",maxBlockSearch:2e3,symbol:"ETH",sdkName:"Sepolia",wrappedGasToken:"0xeef12A83EE5b7161D3873317c8E0E7B76e0B5D9c"},Solana:{key:"Solana",id:1,context:"Solana",finalityThreshold:32,displayName:"Solana",explorerUrl:"https://explorer.solana.com/",explorerName:"Solana Explorer",gasToken:"SOL",chainId:0,icon:"Solana",maxBlockSearch:2e3,symbol:"SOL",sdkName:"Solana",wrappedGasToken:"So11111111111111111111111111111111111111112"}},R={Avalanche:{symbol:"USDC",icon:"USDC",decimals:6,tokenId:{chain:"Avalanche",address:"0x5425890298aed601595a70AB815c96711a31Bc65"}},Sepolia:{symbol:"USDC",icon:"USDC",decimals:6,tokenId:{chain:"Sepolia",address:"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238"}},Solana:{symbol:"USDC",tokenId:{chain:"Solana",address:"4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU"},icon:"USDC",decimals:6},Sui:{symbol:"USDC",tokenId:{chain:"Sui",address:"0xa1ec7fc00a6f40db9693ad1415d0c193ad3906494428cf252621037bd7117e29::usdc::USDC"},icon:"USDC",decimals:6}},_={symbol:"USDC",decimals:6,tokenId:{chain:"Aptos",address:"0x69091fbab5f7d635ee7ac5098cf0c1efbe31d68fec0f2cd565e8d168daf52832"},icon:"USDC"},O={Ethereum:{key:"Ethereum",id:2,context:"Ethereum",finalityThreshold:64,displayName:"Ethereum",explorerUrl:"https://etherscan.io/",explorerName:"Etherscan",gasToken:"ETH",chainId:1,icon:"Ethereum",maxBlockSearch:2e3,symbol:"ETH",sdkName:"Ethereum"},Solana:{key:"Solana",id:1,context:"Solana",finalityThreshold:32,displayName:"Solana",explorerUrl:"https://explorer.solana.com/",explorerName:"Solana Explorer",gasToken:"SOL",chainId:0,icon:"Solana",maxBlockSearch:2e3,symbol:"SOL",sdkName:"Solana"}},U={Ethereum:{symbol:"USDC",tokenId:{chain:"Ethereum",address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},icon:"USDC",decimals:6},Solana:{symbol:"USDC",tokenId:{chain:"Solana",address:"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"},icon:"USDC",decimals:6},Sui:{symbol:"USDC",decimals:6,tokenId:{chain:"Sui",address:"0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC"},icon:"USDC"}},M={symbol:"USDC",tokenId:{chain:"Aptos",address:"0xbae207659db88bea0cbead6da0ed00aac12edcdda169e591cd41c94180b46f3b"},icon:"USDC",decimals:6},K=class{getProvider(e){if("Wormhole"===e)return new D(this);throw Error("Unknown provider: ".concat(e))}constructor(e){var t;this.CHAINS=q,this.TOKENS=R,this.APTOS_TOKEN=_,this._dappConfig=e.dappConfig,(null==(t=e.dappConfig)?void 0:t.network)===o.ZcK.MAINNET?(this.CHAINS=O,this.TOKENS=U,this.APTOS_TOKEN=M):(this.CHAINS=q,this.TOKENS=R,this.APTOS_TOKEN=_)}},B=n(85316),j=n(6174),H=n(81146),J=n(7350),L=n(12964),V=n(20882),F=n(54950),G=e=>{let t=new o.EZS(e.toBytes()),n=t.authKey().derivedAddress();return new j.wP({address:n,publicKey:t})},Z=e=>({accounts:[],chains:j.xE,features:{...Q(e),...z(e)},icon:e.icon,name:e.name,url:e.url,version:"1.0.0"}),Q=e=>({"aptos:account":{account:async()=>{if(!e.publicKey)throw Error("No account found").message;return G(e.publicKey)},version:"1.0.0"},"aptos:connect":{connect:async()=>{try{if(await e.connect(),!e.publicKey)return{status:j.qk.REJECTED};return{args:G(e.publicKey),status:j.qk.APPROVED}}catch(e){if(e instanceof F.$w)return{status:j.qk.REJECTED};throw Error("Error connecting to wallet"+e).message}},version:"1.0.0"},"aptos:disconnect":{disconnect:async()=>{try{await e.disconnect()}catch(e){throw Error("Failed to disconnect"+e).message}},version:"1.0.0"},"aptos:network":{network:async()=>{throw Error("Fetch network info not supported by Solana wallet adapter").message},version:"1.0.0"},"aptos:signMessage":{signMessage:async t=>{if(!e.signMessage)throw Error("Not supported");try{let n=new TextEncoder().encode(t.message),a=await e.signMessage(n),r={address:G(new p.PublicKey(e.publicKey)).address.toString(),fullMessage:t.message,message:t.message,nonce:t.nonce,prefix:"APTOS",signature:new o.AoU(a)};return{status:j.qk.APPROVED,args:r}}catch(e){if(e instanceof Error&&e.message.includes("rejected"))return{status:j.qk.REJECTED};throw Error("Error signing message"+e).message}},version:"1.0.0"},"aptos:signTransaction":{signTransaction:async e=>{throw Error("signTransaction not yet implemented").message},version:"1.0.0"},"aptos:onAccountChange":{onAccountChange:async t=>{e.wallet.features["standard:events"]&&e.wallet.features["standard:events"].on("change",e=>{e.accounts&&0!==e.accounts.length&&t(G(new p.PublicKey(e.accounts[0].publicKey)))})},version:"1.0.0"},"aptos:onNetworkChange":{onNetworkChange:async()=>{throw Error("onNetworkChange not yet implemented in solana wallet adapter").message},version:"1.0.0"},"aptos:signIn":{signIn:async t=>{try{if(!e.signIn)throw Error("signIn not supported in ".concat(e.name)).message;let n={domain:window.location.host,statement:t.statement,nonce:Math.random().toString(36).slice(2),uri:t.uri,version:t.version,chainId:t.chainId,issuedAt:t.issuedAt,expirationTime:t.expirationTime,notBefore:t.notBefore},a=await e.signIn(n),r={account:G(new p.PublicKey(a.account.publicKey)),input:{...t,domain:t.uri||"",address:G(new p.PublicKey(a.account.publicKey)).address.toString(),uri:t.uri||"",version:t.version||"0.1.0",chainId:t.chainId||"1"},plainText:new TextDecoder().decode(a.signedMessage),signingMessage:a.signedMessage,signature:"ed25519"===a.signatureType?new o.AoU(a.signature):a.signature,type:a.signatureType||"ed25519"};return{status:j.qk.APPROVED,args:r}}catch(e){if(e instanceof Error&&e.message.includes("rejected"))return{status:j.qk.REJECTED};throw Error("Error signing in"+e).message}},version:"0.1.0"}}),z=e=>({"solana:signTransaction":{signTransaction:async t=>{if(!e.signTransaction)throw Error("signTransaction not supported").message;try{let n=await e.signTransaction(t);return{status:j.qk.APPROVED,args:n}}catch(e){if(e instanceof Error&&e.message.includes("rejected"))return{status:j.qk.REJECTED};throw Error("Error signing transaction"+e).message}},version:"1.0.0"}}),X=class extends V.O{get icon(){return this.solanaWallet.icon}get name(){return this.solanaWallet.name}get url(){return this.solanaWallet.url}get readyState(){return V.i.Installed}get chains(){return j.xE}get isConnected(){return this.connected}async getAccount(){return await this.solanaWallet.features["aptos:account"].account()}async getConnectedNetwork(){return await this.solanaWallet.features["aptos:network"].network()}async connect(){let e=await this.solanaWallet.features["aptos:connect"].connect();if(e.status===j.qk.REJECTED)throw Error("User rejected the request").message;return await this.onAccountChange(),this.connected=!0,e.args}async disconnect(){this.connected&&(await this.solanaWallet.features["aptos:disconnect"].disconnect(),this.connected=!1)}async signMessage(e){let t=await this.solanaWallet.features["aptos:signMessage"].signMessage(e);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return t.args}async signTransaction(e){let t=await this.solanaWallet.features["solana:signTransaction"].signTransaction(e);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return t.args}async signIn(e){let t=await this.solanaWallet.features["aptos:signIn"].signIn(e);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return t.args}async onAccountChange(){await this.solanaWallet.features["aptos:onAccountChange"].onAccountChange(async e=>{this.emit("accountChange",e)})}async onNetworkChange(e){await this.solanaWallet.features["aptos:onNetworkChange"].onNetworkChange(e)}constructor(e){super(),this.originChain="Solana",this.version="1.0.0",this.accounts=[],this.connected=!1,this.solanaWallet=e}},Y=n(15498),$=n(32381),ee=n(95697).Buffer,et=e=>({accounts:[],chains:j.xE,features:{...en(e),...ea(e)},icon:e.info.icon,name:e.info.name,url:eo[e.info.name],version:"1.0.0"}),en=e=>({"aptos:account":{account:async()=>{throw Error("Not yet implemented").message},version:"1.0.0"},"aptos:connect":{connect:async()=>{throw Error("Not yet implemented").message},version:"1.0.0"},"aptos:disconnect":{disconnect:async()=>{try{e.provider.on("disconnect",e=>{throw Error("EIP-6963 wallet disconnected"+e).message})}catch(e){throw Error("Failed to disconnect").message}},version:"1.0.0"},"aptos:network":{network:async()=>{let t=await e.provider.request({method:"eth_chainId"});return{name:parseInt(t,16),chainId:t}},version:"1.0.0"},"aptos:signMessage":{signMessage:async t=>{let n=await e.provider.request({method:"eth_requestAccounts"}).catch(e=>{throw Error("Error signing message"+e).message}),a="0x".concat(ee.from(t.message,"utf8").toString("hex")),r=await e.provider.request({method:"personal_sign",params:[a,n[0]]}),o={fullMessage:t.message,message:t.message,nonce:t.nonce,prefix:"APTOS",signature:r};return{status:j.qk.APPROVED,args:o}},version:"1.0.0"},"aptos:signTransaction":{signTransaction:async e=>{throw Error("Not yet implemented").message},version:"1.0.0"},"aptos:onAccountChange":{onAccountChange:async e=>{throw Error("Not yet implemented").message},version:"1.0.0"},"aptos:signIn":{signIn:async t=>{var n;try{let a=await e.provider.request({method:"eth_requestAccounts"}).catch(e=>{throw Error("Error signing in"+e).message}),r=t.uri||window.location.origin,o=a[0],s=await e.provider.request({method:"eth_chainId"}),i="".concat(r," wants you to sign in with your Ethereum account:\n").concat(o,"\n\n").concat(t.statement,"\n\nURI: ").concat(r,"\nVersion: ").concat(null!=(n=t.version)?n:"0.1.0","\nChain ID: ").concat(parseInt(s,16),"\nNonce: ").concat(Math.random().toString(16),"\nIssued At: ").concat(new Date().toLocaleString()),c="0x".concat(ee.from(i,"utf8").toString("hex")),l=await e.provider.request({method:"personal_sign",params:[c,a[0]]}),u={account:{address:a[0],publicKey:$.Pw(a[0])},input:{...t,domain:t.uri||"",address:a[0],uri:t.uri||"",version:t.version||"0.1.0",chainId:t.chainId||"1"},plainText:i,signingMessage:new TextEncoder().encode(c),signature:l,type:""};return{status:j.qk.APPROVED,args:u}}catch(e){if(e instanceof Error&&e.message.includes("refused connection"))return{status:j.qk.REJECTED};throw Error("Error signing in"+e).message}},version:"0.1.0"},"aptos:onNetworkChange":{onNetworkChange:async t=>{e.provider.on("chainChanged",e=>{t({name:parseInt(e),chainId:parseInt(e)})})},version:"1.0.0"}}),ea=e=>({"eip6963:account":{account:async()=>{let t=await e.provider.request({method:"eth_requestAccounts"}).catch(e=>{throw Error("Error getting account"+e).message});return{address:t[0],publicKey:$.Pw(t[0])}},version:"1.0.0"},"eip6963:connect":{connect:async()=>{try{let t=await e.provider.request({method:"eth_requestAccounts"}).catch(e=>{throw Error("Error connecting to wallet"+e).message});return{args:{address:t[0],publicKey:$.Pw(t[0])},status:j.qk.APPROVED}}catch(e){if(e instanceof Error&&e.message.includes("refused connection"))return{status:j.qk.REJECTED};throw Error("Error connecting to wallet"+e).message}},version:"1.0.0"},"eip6963:sendTransaction":{sendTransaction:async(e,t)=>{try{let n=await t.getSigner();if(!n)throw Error("No signer found").message;let a=await n.sendTransaction(e),r=await a.wait();return{status:j.qk.APPROVED,args:(null==r?void 0:r.hash)||""}}catch(e){if(e instanceof Error&&e.message.includes("rejected"))return{status:j.qk.REJECTED};throw Error("Error sending transaction"+e).message}},version:"1.0.0"},"eip6963:onAccountChange":{onAccountChange:async t=>{e.provider.on("accountsChanged",e=>{t({address:e[0],publicKey:$.Pw(e[0])})})},version:"1.0.0"}}),er=((r=er||{}).PhantomWallet="Phantom",r.MetaMaskWallet="MetaMask",r.BackpackWallet="Backpack",r.CoinbaseWallet="Coinbase Wallet",r.NightlyWallet="Nightly",r.RabbyWallet="Rabby Wallet",r),eo={Phantom:"https://phantom.app/",MetaMask:"https://metamask.io/",Backpack:"https://www.backpack.app/","Coinbase Wallet":"https://www.coinbase.com/wallet",Nightly:"https://nightly.app/","Rabby Wallet":"https://rabby.io/"},es=class extends V.O{get icon(){return this.eip6963Wallet.icon}get name(){return this.eip6963Wallet.name}get url(){return eo[this.eip6963Wallet.name]}get readyState(){return V.i.Installed}get chains(){return j.xE}get isConnected(){return this.connected}async getAccount(){return await this.eip6963Wallet.features["eip6963:account"].account()}async getConnectedNetwork(){return await this.eip6963Wallet.features["aptos:network"].network()}async connect(){let e=await this.eip6963Wallet.features["eip6963:connect"].connect();if(e.status===j.qk.REJECTED)throw Error("User rejected the request").message;return await this.onAccountChange(),await this.onNetworkChange(),this.provider=new Y.Q(await this.eip6963WalletProvider.provider,"any"),this.connected=!0,e.args}async disconnect(){try{if(!this.connected)return;await this.eip6963Wallet.features["aptos:disconnect"].disconnect(),this.connected=!1}catch(e){throw Error(e).message}}async signMessage(e){let t=await this.eip6963Wallet.features["aptos:signMessage"].signMessage(e);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return t.args}async signTransaction(e){throw Error("Not implemented")}async sendTransaction(e){if(!this.provider)throw Error("Provider not connected");let t=await this.eip6963Wallet.features["eip6963:sendTransaction"].sendTransaction(e,this.provider);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return t.args}async signIn(e){let t=await this.eip6963Wallet.features["aptos:signIn"].signIn(e);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return await this.onAccountChange(),await this.onNetworkChange(),this.provider=new Y.Q(await this.eip6963WalletProvider.provider,"any"),this.connected=!0,t.args}async onAccountChange(){await this.eip6963Wallet.features["eip6963:onAccountChange"].onAccountChange(e=>{this.emit("accountChange",e)})}async onNetworkChange(){await this.eip6963Wallet.features["aptos:onNetworkChange"].onNetworkChange(e=>{this.emit("networkChange",e)})}constructor(e,t){super(),this.originChain="Ethereum",this.version="1.0.0",this.accounts=[],this.connected=!1,this.eip6963Wallet=e,this.eip6963WalletProvider=t}},ei=n(87748),ec=()=>{let e=new ei.V8;return e.wallets.map(t=>new eh(t,e))},el=()=>{let e=new ei.V8;return e.notDetectedWallets.map(t=>new eu(t,e))},eu=class{get icon(){return this.aptosWallet.icon}get name(){return this.aptosWallet.name}get url(){return this.aptosWallet.url}get readyState(){return V.i.NotDetected}constructor(e,t){this.originChain="Aptos",this.version="1.0.0",this.aptosWallet=e,this.walletCore=t}},eh=class extends V.O{get icon(){return this.aptosWallet.icon}get name(){return this.aptosWallet.name}get url(){return this.aptosWallet.url}get readyState(){return V.i.Installed}get chains(){return j.xE}get isConnected(){return this.connected}async getAccount(){let e=await this.walletCore.account;if(!e)throw Error("Account not found");return e}async getConnectedNetwork(){let e=await this.walletCore.network;if(!e)throw Error("Network not found");return e}async connect(){return await this.walletCore.connect(this.name),this.onAccountChange(),this.connected=!0,this.walletCore.account}async disconnect(){this.connected&&(this.walletCore.off("accountChange"),await this.walletCore.disconnect(),this.connected=!1)}async signMessage(e){return await this.walletCore.signMessage(e)}async signTransaction(e){return await this.walletCore.signTransaction(e)}async signIn(e){var t,n,a,r,o,s,i,c,l;return await this.walletCore.signIn({input:{nonce:null!=(t=e.nonce)?t:Math.random().toString(16),uri:null!=(n=e.uri)?n:window.location.origin,version:null!=(a=e.version)?a:"0.1.0",chainId:null!=(r=e.chainId)?r:"1",issuedAt:null!=(o=e.issuedAt)?o:new Date().toISOString(),expirationTime:null!=(s=e.expirationTime)?s:new Date(Date.now()+864e5).toISOString(),notBefore:null!=(i=e.notBefore)?i:new Date().toISOString(),requestId:null!=(c=e.requestId)?c:Math.random().toString(16),resources:null!=(l=e.resources)?l:[]},walletName:this.name})}onAccountChange(){this.walletCore.onAccountChange(),this.walletCore.on("accountChange",async e=>{this.emit("accountChange",e)})}async onNetworkChange(e){await this.walletCore.onNetworkChange()}constructor(e,t){super(),this.originChain="Aptos",this.version="1.0.0",this.accounts=[],this.connected=!1,this.aptosWallet=e,this.walletCore=t}},ed=n(76887),eg=(0,B.createContext)({connected:!1});function ew(){let e=(0,B.useContext)(eg);if(!e)throw Error("useWallet must be used within a WalletContextState");return e}var em={connected:!1,account:null,wallet:null,sourceChain:null,setSourceChain:()=>{}},ep=e=>{let{children:t,dappConfig:n,disableTelemetry:a,onError:r}=e,[{connected:o,wallet:s,account:i,sourceChain:c},l]=(0,B.useState)(em),[u,h]=(0,B.useState)(),[d,g]=(0,B.useState)();(0,B.useEffect)(()=>{g(new K({dappConfig:n}))},[]),(0,B.useEffect)(()=>{if(!s)return;let e=e=>{l(t=>({...t,account:e}))},t=e=>{console.log("new network is",e)};return s.on("accountChange",e),s.on("networkChange",t),()=>{s.off("accountChange",e),s.off("networkChange",t)}},[s]);let w=async e=>{try{let{amount:t,sourceChain:n}=e,a=null==d?void 0:d.getProvider("Wormhole");if(!a)throw Error("Provider not found");return h(a),await (null==a?void 0:a.getQuote({amount:t,sourceChain:n}))}catch(e){return r&&r(e),Promise.reject(e)}},m=async e=>{try{let{sourceChain:t,mainSigner:n,sponsorAccount:a,destinationAddress:r}=e;if(!u)throw Error("Provider is not set");let{originChainTxnId:o,destinationChainTxnId:i}=await u.initiateCCTPTransfer({sourceChain:t,wallet:s,destinationAddress:r,mainSigner:n,sponsorAccount:a});return{originChainTxnId:o,destinationChainTxnId:i}}catch(e){return r&&r(e),Promise.reject(e)}},p=async e=>{try{let t=await e.connect();l(n=>({...n,connected:!0,wallet:e,account:t}))}catch(e){return r&&r(e),Promise.reject(e)}},f=async()=>{try{await (null==s?void 0:s.disconnect()),l(e=>({...e,connected:!1,wallet:null}))}catch(e){return r&&r(e),Promise.reject(e)}},E=async e=>{try{let{input:t,wallet:n}=e;if(!n.signIn)throw Error("Wallet does not support signIn").message;let a=await n.signIn(t);console.log("WalletProvider signInWith response",a),l(e=>({...e,connected:!0,wallet:n,account:a.account}))}catch(e){return r&&r(e),Promise.reject(e)}};return(0,ed.jsx)(eg.Provider,{value:{connected:o,account:i,isLoading:!1,getSolanaWallets:()=>(0,J.M)().get().filter(H.N).map(e=>new X(Z(new L.t({wallet:e})))),getEthereumWallets:()=>(function(){let e=[],t=[],n=n=>{let a=n.detail;e.some(e=>e.info.uuid===a.info.uuid)||(e.push(a),t.push(new es(et(a),a)))};return window.addEventListener("eip6963:announceProvider",e=>{n(e)}),window.dispatchEvent(new Event("eip6963:requestProvider")),t})(),getAptosWallets:()=>ec(),fetchAptosNotDetectedWallets:()=>el(),getChainInfo:e=>{if(!d)throw Error("CrossChainCore is not set");let t=d.CHAINS[e];if(!t)throw Error("Chain config not found for chain: ".concat(e));return t},connect:p,disconnect:f,signInWith:E,wallet:s,getQuote:w,initiateTransfer:m,sourceChain:c,setSourceChain:e=>{l(t=>({...t,sourceChain:e}))}},children:t})}},20882:function(e,t,n){"use strict";n.d(t,{O:function(){return s},i:function(){return o}});var a,r=n(76778),o=((a=o||{}).Installed="Installed",a.NotDetected="NotDetected",a),s=class extends r{sendTransaction(e){throw Error("Not implemented")}}}}]);