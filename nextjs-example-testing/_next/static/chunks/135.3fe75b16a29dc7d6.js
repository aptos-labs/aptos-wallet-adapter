"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[135],{48094:function(e,t,n){n.d(t,{C:function(){return i}});var r=n(87981);class i extends r.py{}},60483:function(e,t,n){n.d(t,{W:function(){return v}});var r=n(87981),i=n(12975),a=n(8224),s=n(52131),o=n(63014),f=n(38032),d=n(82568),l=n(97339),c=n(50727),u=n(77501),p=n(58016);let b=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner_",type:"address"},{internalType:"address",name:"spender_",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender_",type:"address"},{internalType:"uint256",name:"amount_",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account_",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account_",type:"address"},{internalType:"uint256",name:"amount_",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"chainId",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender_",type:"address"},{internalType:"uint256",name:"subtractedValue_",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"eip712Domain",outputs:[{internalType:"bytes1",name:"domainFields",type:"bytes1"},{internalType:"string",name:"domainName",type:"string"},{internalType:"string",name:"domainVersion",type:"string"},{internalType:"uint256",name:"domainChainId",type:"uint256"},{internalType:"address",name:"domainVerifyingContract",type:"address"},{internalType:"bytes32",name:"domainSalt",type:"bytes32"},{internalType:"uint256[]",name:"domainExtensions",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender_",type:"address"},{internalType:"uint256",name:"addedValue_",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint8",name:"decimals_",type:"uint8"},{internalType:"uint64",name:"sequence_",type:"uint64"},{internalType:"address",name:"owner_",type:"address"},{internalType:"uint16",name:"chainId_",type:"uint16"},{internalType:"bytes32",name:"nativeContract_",type:"bytes32"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account_",type:"address"},{internalType:"uint256",name:"amount_",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nativeContract",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner_",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner_",type:"address"},{internalType:"address",name:"spender_",type:"address"},{internalType:"uint256",name:"value_",type:"uint256"},{internalType:"uint256",name:"deadline_",type:"uint256"},{internalType:"uint8",name:"v_",type:"uint8"},{internalType:"bytes32",name:"r_",type:"bytes32"},{internalType:"bytes32",name:"s_",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient_",type:"address"},{internalType:"uint256",name:"amount_",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender_",type:"address"},{internalType:"address",name:"recipient_",type:"address"},{internalType:"uint256",name:"amount_",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint64",name:"sequence_",type:"uint64"}],name:"updateDetails",outputs:[],stateMutability:"nonpayable",type:"function"}],h="0x6080806040523461001657611af2908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816306fdde0314611136578163095ea7b31461110c57816318160ddd146110ed57816323b872dd14611026578163313ce567146110055781633644e51514610fe15781633950935114610f985781633d6c043b14610f7957816340c10f1914610ea157816370a0823114610e695781637ecebe0014610e3157816384b0196e14610d575781638da5cb5b14610d2e57816395d89b4114610c595781639a8a059214610c335781639dc29fac14610af1578163a18cd7c6146107bf578163a457c2d71461070f578163a9059cbb146106de578163c71f461514610335578163d505accf14610160575063dd62ed3e1461011557600080fd5b3461015c578060031936011261015c57806020926101316111af565b6101396111ca565b6001600160a01b0391821683526006865283832091168252845220549051908152f35b5080fd5b8391503461015c5760e036600319011261015c5761017c6111af565b6101846111ca565b906044359260643560843560ff81168103610331576101a16112e1565b8142116102ee5760018060a01b039081851692838952600e602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815261021e81611212565b519020610229611798565b918a5191602083019361190160f01b855260228401526042830152604282526080820182811067ffffffffffffffff8211176102db5791610283939161027b938d5260c4359260a435925190206119c7565b919091611855565b160361029857506102959394506115e0565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b9050346106da5760e03660031901126106da5767ffffffffffffffff81358181116106d6576103679036908401611250565b916024358281116106d25761037f9036908301611250565b6044359060ff821680920361033157606435938085168095036106ce576084356001600160a01b03811696908790036106ca5760a4359761ffff891689036106c6576007549060ff8260a01c1661068e575060ff60a01b1916600160a01b17600755805182811161067b57806103f58b546112a7565b92601f93848111610622575b506020908483116001146105b3578c926105a8575b50508160011b916000199060031b1c19161789555b825191821161059557819060019361044385546112a7565b828111610538575b5060209183116001146104cd578a926104c2575b5050600019600383901b1c191690821b1790555b60ff1982541617905567ffffffffffffffff1960025416176002556007549161ffff60a81b9060a81b16916bffffffffffffffffff0000ff60a01b16171760075560c4356008556102956112e1565b01519050388061045f565b848b52849350600080516020611a9d8339815191529190601f1984168c5b81811061052057508411610507575b505050811b019055610473565b015160001960f88460031b161c191690553880806104fa565b828401518555879690940193602093840193016104eb565b90919250848b52600080516020611a9d8339815191528380860160051c8201926020871061058c575b91869588929594930160051c01915b82811061057e57505061044b565b8d8155869550879101610570565b92508192610561565b634e487b7160e01b895260418552602489fd5b015190503880610416565b8c8052600080516020611a7d8339815191529250601f1984168d5b81811061060a57509084600195949392106105f1575b505050811b01895561042b565b015160001960f88460031b161c191690553880806105e4565b929360206001819287860151815501950193016105ce565b9091508b8052600080516020611a7d8339815191528480850160051c82019260208610610672575b9085949392910160051c01905b8181106106645750610401565b8d8155849350600101610657565b9250819261064a565b634e487b7160e01b8a526041865260248afd5b5162461bcd60e51b81526020818801526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b8980fd5b8880fd5b8780fd5b8580fd5b8480fd5b8280fd5b50503461015c578060031936011261015c576020906107086106fe6111af565b6024359033611416565b5160018152f35b905082346107bc57826003193601126107bc5761072a6111af565b918360243592338152600660205281812060018060a01b038616825260205220549082821061076b576020856107088661076487876113e6565b90336115e0565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b83833461015c57606036600319011261015c5767ffffffffffffffff928035848111610aed576107f29036908301611250565b936024358181116106d65761080a9036908401611250565b91604435938285168095036106d25761082e60018060a01b03600754163314611594565b8483600254161015610aaa57508551828111610a97578061084f87546112a7565b97601f98898111610a3e575b506020908983116001146109cf5788926109c4575b50508160011b916000199060031b1c19161785555b82519182116109b1575060019161089c83546112a7565b868111610961575b5060209582116001146108f75794849582939495926108ec575b5050600019600383901b1c191690821b1790555b67ffffffffffffffff1960025416176002556102956112e1565b0151905085806108be565b828552601f19821695600080516020611a9d83398151915291865b88811061094b5750838596979810610932575b505050811b0190556108d2565b015160001960f88460031b161c19169055858080610925565b8183015184559285019260209283019201610912565b838652600080516020611a9d8339815191528780850160051c820192602086106109a8575b0160051c019084905b82811061099d5750506108a4565b87815501849061098f565b92508192610986565b634e487b7160e01b855260419052602484fd5b015190508880610870565b888052600080516020611a7d8339815191529250601f198416895b818110610a265750908460019594939210610a0d575b505050811b018555610885565b015160001960f88460031b161c19169055888080610a00565b929360206001819287860151815501950193016109ea565b909150878052600080516020611a7d8339815191528980850160051c82019260208610610a8e575b9085949392910160051c01905b818110610a80575061085b565b898155849350600101610a73565b92508192610a66565b634e487b7160e01b865260418252602486fd5b906020606492519162461bcd60e51b8352820152601e60248201527f63757272656e74206d6574616461746120697320757020746f206461746500006044820152fd5b8380fd5b8391503461015c578260031936011261015c57610b0c6111af565b600754602435916001600160a01b0391610b299083163314611594565b16918215610be65782845260056020528484205490828210610b985750818495610b767fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946020946113e6565b8587526005845281872055610b8d826003546113e6565b60035551908152a380f35b608490602087519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152fd5b608490602086519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b50503461015c578160031936011261015c5760209061ffff60075460a81c169051908152f35b50503461015c578160031936011261015c57805190826001805491610c7d836112a7565b80865292828116908115610d065750600114610cbc575b505050610ca682610cb894038361122e565b5191829160208352602083019061118a565b0390f35b9450808552600080516020611a9d8339815191525b828610610cee57505050610ca6826020610cb89582010194610c94565b80546020878701810191909152909501948101610cd1565b610cb8975086935060209250610ca694915060ff191682840152151560051b82010194610c94565b50503461015c578160031936011261015c5760075490516001600160a01b039091168152602090f35b9050346106da57826003193601126106da57610d7161133d565b918051610d7d816111e0565b600194858252602091603160f81b83820152610d97611810565b938051918483019683881067ffffffffffffffff8911176109b1575093879592610dee838b978a859652878452610de182519a601f60f81b8c5260e0878d015260e08c019061118a565b918a8303908b015261118a565b9346606089015230608089015260a088015286840360c088015251928381520195925b828110610e1e5785870386f35b8351875295810195928101928401610e11565b50503461015c57602036600319011261015c5760209181906001600160a01b03610e596111af565b168152600e845220549051908152f35b50503461015c57602036600319011261015c5760209181906001600160a01b03610e916111af565b1681526005845220549051908152f35b919050346106da57806003193601126106da57610ebc6111af565b60075460243592916001600160a01b0391610eda9083163314611594565b16928315610f3757506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92610f158795600354611409565b60035585855260058352808520610f2d838254611409565b905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b50503461015c578160031936011261015c576020906008549051908152f35b50503461015c578060031936011261015c57610708602092610764610fbb6111af565b338352600686528483206001600160a01b03821684528652918490205460243590611409565b50503461015c578160031936011261015c57602090610ffe611798565b9051908152f35b8284346107bc57806003193601126107bc575060ff60209254169051908152f35b905082346107bc5760603660031901126107bc576110426111af565b918361104c6111ca565b9261105b604435809587611416565b6001600160a01b0385168152600660209081528282203383529052205490828210611099576020856107088661109187876113e6565b9033906115e0565b608490602086519162461bcd60e51b8352820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152fd5b50503461015c578160031936011261015c576020906003549051908152f35b50503461015c578060031936011261015c5760209061070861112c6111af565b60243590336115e0565b50503461015c578160031936011261015c57610cb89061115461133d565b905191829160208352602083019061118a565b60005b83811061117a5750506000910152565b818101518382015260200161116a565b906020916111a381518092818552858086019101611167565b601f01601f1916010190565b600435906001600160a01b03821682036111c557565b600080fd5b602435906001600160a01b03821682036111c557565b6040810190811067ffffffffffffffff8211176111fc57604052565b634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff8211176111fc57604052565b90601f8019910116810190811067ffffffffffffffff8211176111fc57604052565b81601f820112156111c55780359067ffffffffffffffff82116111fc5760405192611285601f8401601f19166020018561122e565b828452602083830101116111c557816000926020809301838601378301015290565b90600182811c921680156112d7575b60208310146112c157565b634e487b7160e01b600052602260045260246000fd5b91607f16916112b6565b6112e96117de565b6112f1611810565b81600d5414801590611331575b611306575050565b46600a55600b80546001600160a01b0319163017905561132681836116e2565b600955600c55600d55565b5080600c5414156112fe565b60405190600082815491611350836112a7565b808352926001908181169081156113c45750600114611379575b506113779250038361122e565b565b60008080529150600080516020611a7d8339815191525b8483106113a9575061137793505081016020013861136a565b81935090816020925483858a01015201910190918592611390565b90506020925061137794915060ff191682840152151560051b8201013861136a565b919082039182116113f357565b634e487b7160e01b600052601160045260246000fd5b919082018092116113f357565b6001600160a01b0390811691821561154157169182156114f0576000828152600560205260408120549180831061149c576040602092611477837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef966113e6565b868252600585528282205586815220611491828254611409565b9055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b1561159b57565b60405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e65720000000000000000006044820152606490fd5b6001600160a01b0390811691821561169157169182156116415760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260068252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90604051906116f0826111e0565b600191828152602092603160f81b84830152604051918460005b83811061178457505050600060218301528152611726816111e0565b828151910120604051928301937fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac564728552604084015260608301524660808301523060a083015260c082015260c0815261177e81611212565b51902090565b81818401015182828701015201859061170a565b600b546001600160a01b03163014806117d3575b156117b75760095490565b6117d06117c26117de565b6117ca611810565b906116e2565b90565b50600a5446146117ac565b6117e661133d565b60405161177e602082816118038183019687815193849201611167565b810103808452018261122e565b60075460085460405190602082019261ffff60f01b9060481b1683526022820152602281526060810181811067ffffffffffffffff8211176111fc5760405251902090565b60058110156119b157806118665750565b600181036118b35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036119005760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600381036119585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b60041461196157565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611a705760ff16601b81141580611a65575b611a59579160809493916020936040519384528484015260408301526060820152600093849182805260015afa15611a4c5781516001600160a01b03811615611a46579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600490565b50601c8114156119ff565b5050505060009060039056fe290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6a26469706673582212209c2a6ab851b98b79f450a0f6c6580132088da5913ef53a145eab9f7b320248f664736f6c63430008130033",y=e=>e.length>1;class m extends c.l{constructor(...e){y(e)?super(...e):super(b,h,e[0])}getDeployTransaction(e){return super.getDeployTransaction(e||{})}deploy(e){return super.deploy(e||{})}connect(e){return super.connect(e)}static bytecode=h;static abi=b;static createInterface(){return new u.vU(b)}static connect(e,t){return new p.CH(e,b,t)}}var g=n(87546),w=n(48094),T=n(36948);class v extends r.X2{static _platform=T.c0;constructor(e,t){super(e,t??(0,i.X5)(e,v._platform))}getRpc(e){if(e in this.config&&this.config[e].rpc)return new l.r6(this.config[e].rpc);throw Error("No configuration available for chain: "+e)}getChain(e,t){if(e in this.config)return new w.C(e,this,t);throw Error("No configuration available for chain: "+e)}static nativeTokenId(e,t){if(!v.isSupportedChain(t))throw Error(`invalid chain for EVM: ${t}`);return a.D.tokenId(t,g.l)}static isNativeTokenId(e,t,n){return!!v.isSupportedChain(t)&&n.chain===t&&n.address.toString()===g.l}static isSupportedChain(e){return(0,s.fm)(e)===v._platform}static async getDecimals(e,t,n){if((0,r.tY)(n))return o.K(v._platform);let i=v.getTokenImplementation(t,new g.V(n).toString());return Number(await i.decimals())}static async getBalance(e,t,n,i){return(0,r.tY)(i)?t.getBalance(n):v.getTokenImplementation(t,new g.V(i).toString()).balanceOf(n)}static async getBalances(e,t,n,i){return(await Promise.all(i.map(async i=>{let a=await this.getBalance(e,t,n,i);return{[(0,r.tY)(i)?"native":new g.V(i).toString()]:a}}))).reduce((e,t)=>Object.assign(e,t),{})}static async sendWait(e,t,n){let r=[];for(let i of n){let n=await t.broadcastTransaction(i);if(r.push(n.hash),"Celo"===e){console.error("TODO: override celo block fetching");continue}if(null===await n.wait())throw Error("Received null TxReceipt")}return r}static async getLatestBlock(e){return await e.getBlockNumber()}static async getLatestFinalizedBlock(e){let t=await e.getBlock("finalized");if(!t)throw Error("Could not get finalized block");return t?.number}static chainFromChainId(e){let t=f.I(v._platform,BigInt(e));if(void 0===t)throw Error(`Unknown EVM chainId ${e}`);let[n,r]=t;return[n,r]}static async chainFromRpc(e){let{chainId:t}=await e.getNetwork();return v.chainFromChainId(d.Al.encode(t,!0))}static getTokenImplementation(e,t){let n=m.connect(t,e);if(!n)throw Error(`No token implementation available for: ${t}`);return n}}},68135:function(e,t,n){n.r(t),n.d(t,{default:function(){return tK}});var r,i,a,s,o,f,d,l,c=n(12975),u=n(87546),p=n(60483),b=n(87981),h=n(92387),y=n(46255),m=n(32443),g=n(42979),w=n(59682),T=n(44322),v=n(32381),E=n(28968),A=n(28185),N=n(40734),R=n(64362),I=n(48599),O=n(64034);class C extends A.g{address;#e;constructor(e,t){super(t),(0,y.en)(e&&"function"==typeof e.sign,"invalid private key","privateKey","[ REDACTED ]"),this.#e=e;let n=(0,R.d)(this.signingKey.publicKey);(0,O.h)(this,{address:n})}get signingKey(){return this.#e}get privateKey(){return this.signingKey.privateKey}async getAddress(){return this.address}connect(e){return new C(this.#e,e)}async signTransaction(e){e=(0,N.kK)(e);let{to:t,from:n}=await (0,O.m)({to:e.to?(0,m.ru)(e.to,this.provider):void 0,from:e.from?(0,m.ru)(e.from,this.provider):void 0});null!=t&&(e.to=t),null!=n&&(e.from=n),null!=e.from&&((0,y.en)((0,g.K)(e.from)===this.address,"transaction from address mismatch","tx.from",e.from),delete e.from);let r=I.Y.from(e);return r.signature=this.signingKey.sign(r.unsignedHash),r.serialized}async signMessage(e){return this.signMessageSync(e)}signMessageSync(e){var t;return this.signingKey.sign(("string"==typeof(t=e)&&(t=(0,T.Y0)(t)),(0,w.w)((0,v.zo)([(0,T.Y0)("\x19Ethereum Signed Message:\n"),(0,T.Y0)(String(t.length)),t])))).serialized}async signTypedData(e,t,n){let r=await E.E.resolveNames(e,t,n,async e=>{(0,y.hu)(null!=this.provider,"cannot resolve ENS names without a provider","UNSUPPORTED_OPERATION",{operation:"resolveName",info:{name:e}});let t=await this.provider.resolveName(e);return(0,y.hu)(null!=t,"unconfigured ENS name","UNCONFIGURED_NAME",{value:e}),t});return this.signingKey.sign(E.E.hash(r.domain,t,r.value)).serialized}}var k=n(23016),S=n(68203);let P=!1,D=function(e,t,n){return(0,S.zH)(e,t).update(n).digest()},U=D;function M(e,t,n){let r=(0,v.Pw)(t,"key"),i=(0,v.Pw)(n,"data");return(0,v.Dv)(U(e,r,i))}M._=D,M.lock=function(){P=!0},M.register=function(e){if(P)throw Error("computeHmac is locked");U=e},Object.freeze(M);var L=n(43172),x=n(50165);let _=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),$=Uint8Array.from({length:16},(e,t)=>t),K=$.map(e=>(9*e+5)%16),B=[$],G=[K];for(let e=0;e<4;e++)for(let t of[B,G])t.push(t[e].map(e=>_[e]));let F=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(e=>new Uint8Array(e)),V=B.map((e,t)=>e.map(e=>F[t][e])),W=G.map((e,t)=>e.map(e=>F[t][e])),z=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]),Y=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]),J=(e,t)=>e<<t|e>>>32-t;function j(e,t,n,r){return 0===e?t^n^r:1===e?t&n|~t&r:2===e?(t|~n)^r:3===e?t&r|n&~r:t^(n|~r)}let H=new Uint32Array(16);class X extends L.N{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){let{h0:e,h1:t,h2:n,h3:r,h4:i}=this;return[e,t,n,r,i]}set(e,t,n,r,i){this.h0=0|e,this.h1=0|t,this.h2=0|n,this.h3=0|r,this.h4=0|i}process(e,t){for(let n=0;n<16;n++,t+=4)H[n]=e.getUint32(t,!0);let n=0|this.h0,r=n,i=0|this.h1,a=i,s=0|this.h2,o=s,f=0|this.h3,d=f,l=0|this.h4,c=l;for(let e=0;e<5;e++){let t=4-e,u=z[e],p=Y[e],b=B[e],h=G[e],y=V[e],m=W[e];for(let t=0;t<16;t++){let r=J(n+j(e,i,s,f)+H[b[t]]+u,y[t])+l|0;n=l,l=f,f=0|J(s,10),s=i,i=r}for(let e=0;e<16;e++){let n=J(r+j(t,a,o,d)+H[h[e]]+p,m[e])+c|0;r=c,c=d,d=0|J(o,10),o=a,a=n}}this.set(this.h1+s+d|0,this.h2+f+c|0,this.h3+l+r|0,this.h4+n+a|0,this.h0+i+o|0)}roundClean(){H.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}let Z=(0,x.hE)(()=>new X),q=!1,Q=function(e){return Z(e)},ee=Q;function et(e){let t=(0,v.Pw)(e,"data");return(0,v.Dv)(ee(t))}et._=Q,et.lock=function(){q=!0},et.register=function(e){if(q)throw TypeError("ripemd160 is locked");ee=e},Object.freeze(et);let en=!1,er=function(e){return new Uint8Array((0,S.O6)(e))},ei=er;function ea(e){return ei(e)}ea._=er,ea.lock=function(){en=!0},ea.register=function(e){if(en)throw Error("randomBytes is locked");ei=e},Object.freeze(ea);var es=n(93688),eo=n(25998),ef=n(10666);let ed=" !#$%&'()*+,-./<=>?@[]^_`{|}~",el=/^[a-z]*$/i;function ec(e,t){let n=97;return e.reduce((e,r)=>(r===t?n++:r.match(el)?e.push(String.fromCharCode(n)+r):(n=97,e.push(r)),e),[])}class eu{locale;constructor(e){(0,O.h)(this,{locale:e})}split(e){return e.toLowerCase().split(/\s+/g)}join(e){return e.join(" ")}}class ep extends eu{#t;#n;constructor(e,t,n){super(e),this.#t=t,this.#n=n,this.#r=null}get _data(){return this.#t}_decodeWords(){var e;return e=this.#t,(0,y.en)("0"===e[0],"unsupported auwl data","data",e),function(e,t){for(let n=ed.length-1;n>=0;n--)e=e.split(ed[n]).join(t.substring(2*n,2*n+2));let n=[],r=e.replace(/(:|([0-9])|([A-Z][a-z]*))/g,(e,t,r,i)=>{if(r)for(let e=parseInt(r);e>=0;e--)n.push(";");else n.push(t.toLowerCase());return""});if(r)throw Error(`leftovers: ${JSON.stringify(r)}`);return ec(ec(n,";"),":")}(e.substring(1+2*ed.length),e.substring(1,1+2*ed.length))}#r;#i(){if(null==this.#r){let e=this._decodeWords();if((0,ef.id)(e.join("\n")+"\n")!==this.#n)throw Error(`BIP39 Wordlist for ${this.locale} FAILED`);this.#r=e}return this.#r}getWord(e){let t=this.#i();return(0,y.en)(e>=0&&e<t.length,`invalid word index: ${e}`,"index",e),t[e]}getWordIndex(e){return this.#i().indexOf(e)}}let eb=null;class eh extends ep{constructor(){super("en","0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO","0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60")}static wordlist(){return null==eb&&(eb=new eh),eb}}let ey=!1,em=function(e,t,n,r,i){return(0,S.Sf)(e,t,n,r,i)},eg=em;function ew(e,t,n,r,i){let a=(0,v.Pw)(e,"password"),s=(0,v.Pw)(t,"salt");return(0,v.Dv)(eg(a,s,n,r,i))}function eT(e){return(1<<e)-1<<8-e&255}function ev(e,t){(0,y.fA)("NFKD"),null==t&&(t=eh.wordlist());let n=t.split(e);(0,y.en)(n.length%3==0&&n.length>=12&&n.length<=24,"invalid mnemonic length","mnemonic","[ REDACTED ]");let r=new Uint8Array(Math.ceil(11*n.length/8)),i=0;for(let e=0;e<n.length;e++){let a=t.getWordIndex(n[e].normalize("NFKD"));(0,y.en)(a>=0,`invalid mnemonic word at index ${e}`,"mnemonic","[ REDACTED ]");for(let e=0;e<11;e++)a&1<<10-e&&(r[i>>3]|=1<<7-i%8),i++}let a=32*n.length/3,s=eT(n.length/3),o=(0,v.Pw)((0,k.J)(r.slice(0,a/8)))[0]&s;return(0,y.en)(o===(r[r.length-1]&s),"invalid mnemonic checksum","mnemonic","[ REDACTED ]"),(0,v.Dv)(r.slice(0,a/8))}function eE(e,t){(0,y.en)(e.length%4==0&&e.length>=16&&e.length<=32,"invalid entropy size","entropy","[ REDACTED ]"),null==t&&(t=eh.wordlist());let n=[0],r=11;for(let t=0;t<e.length;t++)r>8?(n[n.length-1]<<=8,n[n.length-1]|=e[t],r-=8):(n[n.length-1]<<=r,n[n.length-1]|=e[t]>>8-r,n.push(e[t]&((1<<8-r)-1&255)),r+=3);let i=e.length/4,a=parseInt((0,k.J)(e).substring(2,4),16)&eT(i);return n[n.length-1]<<=i,n[n.length-1]|=a>>8-i,t.join(n.map(e=>t.getWord(e)))}ew._=em,ew.lock=function(){ey=!0},ew.register=function(e){if(ey)throw Error("pbkdf2 is locked");eg=e},Object.freeze(ew);let eA={};class eN{phrase;password;wordlist;entropy;constructor(e,t,n,r,i){null==r&&(r=""),null==i&&(i=eh.wordlist()),(0,y.NK)(e,eA,"Mnemonic"),(0,O.h)(this,{phrase:n,password:r,wordlist:i,entropy:t})}computeSeed(){let e=(0,T.Y0)("mnemonic"+this.password,"NFKD");return ew((0,T.Y0)(this.phrase,"NFKD"),e,2048,64,"sha512")}static fromPhrase(e,t,n){let r=ev(e,n);return e=eE((0,v.Pw)(r),n),new eN(eA,r,e,t,n)}static fromEntropy(e,t,n){let r=(0,v.Pw)(e,"entropy"),i=eE(r,n);return new eN(eA,(0,v.Dv)(r),i,t,n)}static entropyToPhrase(e,t){return eE((0,v.Pw)(e,"entropy"),t)}static phraseToEntropy(e,t){return ev(e,t)}static isValidMnemonic(e,t){try{return ev(e,t),!0}catch(e){}return!1}}var eR=function(e,t,n,r){if("a"===n&&!r)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(e):r?r.value:t.get(e)},eI=function(e,t,n,r,i){if("m"===r)throw TypeError("Private method is not writable");if("a"===r&&!i)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?i.call(e,n):i?i.value=n:t.set(e,n),n};let eO={16:10,24:12,32:14},eC=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],ek=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],eS=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],eP=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],eD=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],eU=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],eM=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],eL=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],ex=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],e_=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],e$=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],eK=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],eB=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],eG=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],eF=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function eV(e){let t=[];for(let n=0;n<e.length;n+=4)t.push(e[n]<<24|e[n+1]<<16|e[n+2]<<8|e[n+3]);return t}class eW{get key(){return eR(this,r,"f").slice()}constructor(e){let t;if(r.set(this,void 0),i.set(this,void 0),a.set(this,void 0),!(this instanceof eW))throw Error("AES must be instanitated with `new`");eI(this,r,new Uint8Array(e),"f");let n=eO[this.key.length];if(null==n)throw TypeError("invalid key size (must be 16, 24 or 32 bytes)");eI(this,a,[],"f"),eI(this,i,[],"f");for(let e=0;e<=n;e++)eR(this,a,"f").push([0,0,0,0]),eR(this,i,"f").push([0,0,0,0]);let s=(n+1)*4,o=this.key.length/4,f=eV(this.key);for(let e=0;e<o;e++)t=e>>2,eR(this,a,"f")[t][e%4]=f[e],eR(this,i,"f")[n-t][e%4]=f[e];let d=0,l=o,c;for(;l<s;){if(c=f[o-1],f[0]^=ek[c>>16&255]<<24^ek[c>>8&255]<<16^ek[255&c]<<8^ek[c>>24&255]^eC[d]<<24,d+=1,8!=o)for(let e=1;e<o;e++)f[e]^=f[e-1];else{for(let e=1;e<o/2;e++)f[e]^=f[e-1];c=f[o/2-1],f[o/2]^=ek[255&c]^ek[c>>8&255]<<8^ek[c>>16&255]<<16^ek[c>>24&255]<<24;for(let e=o/2+1;e<o;e++)f[e]^=f[e-1]}let e=0,t,r;for(;e<o&&l<s;)t=l>>2,r=l%4,eR(this,a,"f")[t][r]=f[e],eR(this,i,"f")[n-t][r]=f[e++],l++}for(let e=1;e<n;e++)for(let t=0;t<4;t++)c=eR(this,i,"f")[e][t],eR(this,i,"f")[e][t]=eK[c>>24&255]^eB[c>>16&255]^eG[c>>8&255]^eF[255&c]}encrypt(e){if(16!=e.length)throw TypeError("invalid plaintext size (must be 16 bytes)");let t=eR(this,a,"f").length-1,n=[0,0,0,0],r=eV(e);for(let e=0;e<4;e++)r[e]^=eR(this,a,"f")[0][e];for(let e=1;e<t;e++){for(let t=0;t<4;t++)n[t]=eP[r[t]>>24&255]^eD[r[(t+1)%4]>>16&255]^eU[r[(t+2)%4]>>8&255]^eM[255&r[(t+3)%4]]^eR(this,a,"f")[e][t];r=n.slice()}let i=new Uint8Array(16),s=0;for(let e=0;e<4;e++)s=eR(this,a,"f")[t][e],i[4*e]=(ek[r[e]>>24&255]^s>>24)&255,i[4*e+1]=(ek[r[(e+1)%4]>>16&255]^s>>16)&255,i[4*e+2]=(ek[r[(e+2)%4]>>8&255]^s>>8)&255,i[4*e+3]=(ek[255&r[(e+3)%4]]^s)&255;return i}decrypt(e){if(16!=e.length)throw TypeError("invalid ciphertext size (must be 16 bytes)");let t=eR(this,i,"f").length-1,n=[0,0,0,0],r=eV(e);for(let e=0;e<4;e++)r[e]^=eR(this,i,"f")[0][e];for(let e=1;e<t;e++){for(let t=0;t<4;t++)n[t]=eL[r[t]>>24&255]^ex[r[(t+3)%4]>>16&255]^e_[r[(t+2)%4]>>8&255]^e$[255&r[(t+1)%4]]^eR(this,i,"f")[e][t];r=n.slice()}let a=new Uint8Array(16),s=0;for(let e=0;e<4;e++)s=eR(this,i,"f")[t][e],a[4*e]=(eS[r[e]>>24&255]^s>>24)&255,a[4*e+1]=(eS[r[(e+3)%4]>>16&255]^s>>16)&255,a[4*e+2]=(eS[r[(e+2)%4]>>8&255]^s>>8)&255,a[4*e+3]=(eS[255&r[(e+1)%4]]^s)&255;return a}}r=new WeakMap,i=new WeakMap,a=new WeakMap;class ez{constructor(e,t,n){if(n&&!(this instanceof n))throw Error(`${e} must be instantiated with "new"`);Object.defineProperties(this,{aes:{enumerable:!0,value:new eW(t)},name:{enumerable:!0,value:e}})}}var eY=function(e,t,n,r,i){if("m"===r)throw TypeError("Private method is not writable");if("a"===r&&!i)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?i.call(e,n):i?i.value=n:t.set(e,n),n},eJ=function(e,t,n,r){if("a"===n&&!r)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(e):r?r.value:t.get(e)};class ej extends ez{constructor(e,t){if(super("ECC",e,ej),s.set(this,void 0),o.set(this,void 0),t){if(t.length%16)throw TypeError("invalid iv size (must be 16 bytes)");eY(this,s,new Uint8Array(t),"f")}else eY(this,s,new Uint8Array(16),"f");eY(this,o,this.iv,"f")}get iv(){return new Uint8Array(eJ(this,s,"f"))}encrypt(e){if(e.length%16)throw TypeError("invalid plaintext size (must be multiple of 16 bytes)");let t=new Uint8Array(e.length);for(let n=0;n<e.length;n+=16){for(let t=0;t<16;t++)eJ(this,o,"f")[t]^=e[n+t];eY(this,o,this.aes.encrypt(eJ(this,o,"f")),"f"),t.set(eJ(this,o,"f"),n)}return t}decrypt(e){if(e.length%16)throw TypeError("invalid ciphertext size (must be multiple of 16 bytes)");let t=new Uint8Array(e.length);for(let n=0;n<e.length;n+=16){let r=this.aes.decrypt(e.subarray(n,n+16));for(let i=0;i<16;i++)t[n+i]=r[i]^eJ(this,o,"f")[i],eJ(this,o,"f")[i]=e[n+i]}return t}}s=new WeakMap,o=new WeakMap,new WeakMap,new WeakMap,new WeakSet;var eH=function(e,t,n,r,i){if("m"===r)throw TypeError("Private method is not writable");if("a"===r&&!i)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?i.call(e,n):i?i.value=n:t.set(e,n),n},eX=function(e,t,n,r){if("a"===n&&!r)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(e):r?r.value:t.get(e)};class eZ extends ez{constructor(e,t){super("CTR",e,eZ),f.set(this,void 0),d.set(this,void 0),l.set(this,void 0),eH(this,l,new Uint8Array(16),"f"),eX(this,l,"f").fill(0),eH(this,f,eX(this,l,"f"),"f"),eH(this,d,16,"f"),null==t&&(t=1),"number"==typeof t?this.setCounterValue(t):this.setCounterBytes(t)}get counter(){return new Uint8Array(eX(this,l,"f"))}setCounterValue(e){if(!Number.isInteger(e)||e<0||e>Number.MAX_SAFE_INTEGER)throw TypeError("invalid counter initial integer value");for(let t=15;t>=0;--t)eX(this,l,"f")[t]=e%256,e=Math.floor(e/256)}setCounterBytes(e){if(16!==e.length)throw TypeError("invalid counter initial Uint8Array value length");eX(this,l,"f").set(e)}increment(){for(let e=15;e>=0;e--)if(255===eX(this,l,"f")[e])eX(this,l,"f")[e]=0;else{eX(this,l,"f")[e]++;break}}encrypt(e){var t,n;let r=new Uint8Array(e);for(let e=0;e<r.length;e++)16===eX(this,d,"f")&&(eH(this,f,this.aes.encrypt(eX(this,l,"f")),"f"),eH(this,d,0,"f"),this.increment()),r[e]^=eX(this,f,"f")[eH(this,d,(n=eX(this,d,"f"),t=n++,n),"f"),t];return r}decrypt(e){return this.encrypt(e)}}f=new WeakMap,d=new WeakMap,l=new WeakMap,new WeakMap,new WeakMap,new WeakMap;var eq=n(9565),eQ=n(55892),e1=n(68306);let e0=(e,t)=>e<<t|e>>>32-t;function e2(e,t,n,r,i,a){let s=e[t++]^n[r++],o=e[t++]^n[r++],f=e[t++]^n[r++],d=e[t++]^n[r++],l=e[t++]^n[r++],c=e[t++]^n[r++],u=e[t++]^n[r++],p=e[t++]^n[r++],b=e[t++]^n[r++],h=e[t++]^n[r++],y=e[t++]^n[r++],m=e[t++]^n[r++],g=e[t++]^n[r++],w=e[t++]^n[r++],T=e[t++]^n[r++],v=e[t++]^n[r++],E=s,A=o,N=f,R=d,I=l,O=c,C=u,k=p,S=b,P=h,D=y,U=m,M=g,L=w,x=T,_=v;for(let e=0;e<8;e+=2)I^=e0(E+M|0,7),S^=e0(I+E|0,9),M^=e0(S+I|0,13),E^=e0(M+S|0,18),P^=e0(O+A|0,7),L^=e0(P+O|0,9),A^=e0(L+P|0,13),O^=e0(A+L|0,18),x^=e0(D+C|0,7),N^=e0(x+D|0,9),C^=e0(N+x|0,13),D^=e0(C+N|0,18),R^=e0(_+U|0,7),k^=e0(R+_|0,9),U^=e0(k+R|0,13),_^=e0(U+k|0,18),A^=e0(E+R|0,7),N^=e0(A+E|0,9),R^=e0(N+A|0,13),E^=e0(R+N|0,18),C^=e0(O+I|0,7),k^=e0(C+O|0,9),I^=e0(k+C|0,13),O^=e0(I+k|0,18),U^=e0(D+P|0,7),S^=e0(U+D|0,9),P^=e0(S+U|0,13),D^=e0(P+S|0,18),M^=e0(_+x|0,7),L^=e0(M+_|0,9),x^=e0(L+M|0,13),_^=e0(x+L|0,18);i[a++]=s+E|0,i[a++]=o+A|0,i[a++]=f+N|0,i[a++]=d+R|0,i[a++]=l+I|0,i[a++]=c+O|0,i[a++]=u+C|0,i[a++]=p+k|0,i[a++]=b+S|0,i[a++]=h+P|0,i[a++]=y+D|0,i[a++]=m+U|0,i[a++]=g+M|0,i[a++]=w+L|0,i[a++]=T+x|0,i[a++]=v+_|0}function e6(e,t,n,r,i){let a=r+0,s=r+16*i;for(let r=0;r<16;r++)n[s+r]=e[t+(2*i-1)*16+r];for(let r=0;r<i;r++,a+=16,t+=16)e2(n,s,e,t,n,a),r>0&&(s+=16),e2(n,a,e,t+=16,n,s)}function e5(e,t,n){let{N:r,r:i,p:a,dkLen:s,asyncTick:o,maxmem:f,onProgress:d}=(0,x.U5)({dkLen:32,asyncTick:10,maxmem:1073742848},n);if((0,eq.Rx)(r),(0,eq.Rx)(i),(0,eq.Rx)(a),(0,eq.Rx)(s),(0,eq.Rx)(o),(0,eq.Rx)(f),void 0!==d&&"function"!=typeof d)throw Error("progressCb should be function");let l=128*i,c=l/4;if(r<=1||(r&r-1)!=0||r>=2**(l/8)||r>4294967296)throw Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(a<0||a>(4294967296-1)*32/l)throw Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(s<0||s>(4294967296-1)*32)throw Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");let u=l*(r+a);if(u>f)throw Error(`Scrypt: parameters too large, ${u} (128 * r * (N + p)) > ${f} (maxmem)`);let p=(0,e1.n)(eQ.J,e,t,{c:1,dkLen:l*a}),b=(0,x.Jq)(p),h=(0,x.Jq)(new Uint8Array(l*r)),y=(0,x.Jq)(new Uint8Array(l)),m=()=>{};if(d){let e=2*r*a,t=Math.max(Math.floor(e/1e4),1),n=0;m=()=>{n++,d&&(!(n%t)||n===e)&&d(n/e)}}return{N:r,r:i,p:a,dkLen:s,blockSize32:c,V:h,B32:b,B:p,tmp:y,blockMixCb:m,asyncTick:o}}function e3(e,t,n,r,i){let a=(0,e1.n)(eQ.J,e,n,{c:1,dkLen:t});return n.fill(0),r.fill(0),i.fill(0),a}async function e4(e,t,n){let{N:r,r:i,p:a,dkLen:s,blockSize32:o,V:f,B32:d,B:l,tmp:c,blockMixCb:u,asyncTick:p}=e5(e,t,n);for(let e=0;e<a;e++){let t=o*e;for(let e=0;e<o;e++)f[e]=d[t+e];let n=0;await (0,x.oY)(r-1,p,()=>{e6(f,n,f,n+=o,i),u()}),e6(f,(r-1)*o,d,t,i),u(),await (0,x.oY)(r,p,()=>{let e=d[t+o-16]%r;for(let n=0;n<o;n++)c[n]=d[t+n]^f[e*o+n];e6(c,0,d,t,i),u()})}return e3(e,s,l,f,c)}let e8=!1,e7=!1,e9=async function(e,t,n,r,i,a,s){return await e4(e,t,{N:n,r,p:i,dkLen:a,onProgress:s})},te=function(e,t,n,r,i,a){return function(e,t,n){let{N:r,r:i,p:a,dkLen:s,blockSize32:o,V:f,B32:d,B:l,tmp:c,blockMixCb:u}=e5(e,t,n);for(let e=0;e<a;e++){let t=o*e;for(let e=0;e<o;e++)f[e]=d[t+e];for(let e=0,t=0;e<r-1;e++)e6(f,t,f,t+=o,i),u();e6(f,(r-1)*o,d,t,i),u();for(let e=0;e<r;e++){let e=d[t+o-16]%r;for(let n=0;n<o;n++)c[n]=d[t+n]^f[e*o+n];e6(c,0,d,t,i),u()}}return e3(e,s,l,f,c)}(e,t,{N:n,r,p:i,dkLen:a})},tt=e9,tn=te;async function tr(e,t,n,r,i,a,s){let o=(0,v.Pw)(e,"passwd"),f=(0,v.Pw)(t,"salt");return(0,v.Dv)(await tt(o,f,n,r,i,a,s))}function ti(e,t,n,r,i,a){let s=(0,v.Pw)(e,"passwd"),o=(0,v.Pw)(t,"salt");return(0,v.Dv)(tn(s,o,n,r,i,a))}function ta(e){return"string"!=typeof e||e.startsWith("0x")||(e="0x"+e),(0,v.h_)(e)}function ts(e,t){for(e=String(e);e.length<t;)e="0"+e;return e}function to(e){return"string"==typeof e?(0,T.Y0)(e,"NFKC"):(0,v.h_)(e)}function tf(e,t){let n=t.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);(0,y.en)(null!=n,"invalid path","path",t);let r=n[1],i=n[3],a="!"===n[4],s=e;for(let e of r.toLowerCase().split(".")){if(Array.isArray(s)){if(!e.match(/^[0-9]+$/))break;s=s[parseInt(e)]}else if("object"==typeof s){let t=null;for(let n in s)if(n.toLowerCase()===e){t=s[n];break}s=t}else s=null;if(null==s)break}if((0,y.en)(!a||null!=s,"missing required value","path",r),i&&null!=s){if("int"===i){if("string"==typeof s&&s.match(/^-?[0-9]+$/))return parseInt(s);if(Number.isSafeInteger(s))return s}if("number"===i&&"string"==typeof s&&s.match(/^-?[0-9.]*$/))return parseFloat(s);if("data"===i&&"string"==typeof s)return ta(s);if("array"===i&&Array.isArray(s)||i===typeof s)return s;(0,y.en)(!1,`wrong type found for ${i} `,"path",r)}return s}tr._=e9,tr.lock=function(){e7=!0},tr.register=function(e){if(e7)throw Error("scrypt is locked");tt=e},Object.freeze(tr),ti._=te,ti.lock=function(){e8=!0},ti.register=function(e){if(e8)throw Error("scryptSync is locked");tn=e},Object.freeze(ti);var td=n(88640);let tl="m/44'/60'/0'/0/0";function tc(e){try{let t=JSON.parse(e),n=null!=t.version?parseInt(t.version):0;if(3===n)return!0}catch(e){}return!1}function tu(e,t){let n=(0,v.Pw)(t),r=tf(e,"crypto.ciphertext:data!"),i=(0,v.Dv)((0,w.w)((0,v.zo)([n.slice(16,32),r]))).substring(2);(0,y.en)(i===tf(e,"crypto.mac:string!").toLowerCase(),"incorrect password","password","[ REDACTED ]");let a=function(e,t,n){if("aes-128-ctr"===tf(e,"crypto.cipher:string")){let r=new eZ(t,tf(e,"crypto.cipherparams.iv:data!"));return(0,v.Dv)(r.decrypt(n))}(0,y.hu)(!1,"unsupported cipher","UNSUPPORTED_OPERATION",{operation:"decrypt"})}(e,n.slice(0,16),r),s=(0,R.d)(a);if(e.address){let t=e.address.toLowerCase();t.startsWith("0x")||(t="0x"+t),(0,y.en)((0,g.K)(t)===s,"keystore address/privateKey mismatch","address",e.address)}let o={address:s,privateKey:a};if("0.1"===tf(e,"x-ethers.version:string")){let t=n.slice(32,64),r=tf(e,"x-ethers.mnemonicCiphertext:data!"),i=new eZ(t,tf(e,"x-ethers.mnemonicCounter:data!"));o.mnemonic={path:tf(e,"x-ethers.path:string")||tl,locale:tf(e,"x-ethers.locale:string")||"en",entropy:(0,v.Dv)((0,v.Pw)(i.decrypt(r)))}}return o}function tp(e){let t=tf(e,"crypto.kdf:string");if(t&&"string"==typeof t){if("scrypt"===t.toLowerCase()){let n=tf(e,"crypto.kdfparams.salt:data!"),r=tf(e,"crypto.kdfparams.n:int!"),i=tf(e,"crypto.kdfparams.r:int!"),a=tf(e,"crypto.kdfparams.p:int!");(0,y.en)(r>0&&(r&r-1)==0,"invalid kdf.N","kdf.N",r),(0,y.en)(i>0&&a>0,"invalid kdf","kdf",t);let s=tf(e,"crypto.kdfparams.dklen:int!");return(0,y.en)(32===s,"invalid kdf.dklen","kdf.dflen",s),{name:"scrypt",salt:n,N:r,r:i,p:a,dkLen:64}}if("pbkdf2"===t.toLowerCase()){let t=tf(e,"crypto.kdfparams.salt:data!"),n=tf(e,"crypto.kdfparams.prf:string!"),r=n.split("-").pop();(0,y.en)("sha256"===r||"sha512"===r,"invalid kdf.pdf","kdf.pdf",n);let i=tf(e,"crypto.kdfparams.c:int!"),a=tf(e,"crypto.kdfparams.dklen:int!");return(0,y.en)(32===a,"invalid kdf.dklen","kdf.dklen",a),{name:"pbkdf2",salt:t,count:i,dkLen:a,algorithm:r}}}(0,y.en)(!1,"unsupported key-derivation function","kdf",t)}function tb(e){return new Promise(t=>{setTimeout(()=>{t()},e)})}async function th(e,t,n){let r=JSON.parse(e),i=to(t),a=tp(r);if("pbkdf2"===a.name){n&&(n(0),await tb(0));let{salt:e,count:t,dkLen:s,algorithm:o}=a,f=ew(i,e,t,s,o);return n&&(n(1),await tb(0)),tu(r,f)}(0,y.hu)("scrypt"===a.name,"cannot be reached","UNKNOWN_ERROR",{params:a});let{salt:s,N:o,r:f,p:d,dkLen:l}=a;return tu(r,await tr(i,s,o,f,d,l,n))}function ty(e){let t=null!=e.salt?(0,v.Pw)(e.salt,"options.salt"):ea(32),n=131072,r=8,i=1;return e.scrypt&&(e.scrypt.N&&(n=e.scrypt.N),e.scrypt.r&&(r=e.scrypt.r),e.scrypt.p&&(i=e.scrypt.p)),(0,y.en)("number"==typeof n&&n>0&&Number.isSafeInteger(n)&&(BigInt(n)&BigInt(n-1))===BigInt(0),"invalid scrypt N parameter","options.N",n),(0,y.en)("number"==typeof r&&r>0&&Number.isSafeInteger(r),"invalid scrypt r parameter","options.r",r),(0,y.en)("number"==typeof i&&i>0&&Number.isSafeInteger(i),"invalid scrypt p parameter","options.p",i),{name:"scrypt",dkLen:32,salt:t,N:n,r,p:i}}function tm(e,t,n,r){let i=(0,v.Pw)(n.privateKey,"privateKey"),a=null!=r.iv?(0,v.Pw)(r.iv,"options.iv"):ea(16);(0,y.en)(16===a.length,"invalid options.iv length","options.iv",r.iv);let s=null!=r.uuid?(0,v.Pw)(r.uuid,"options.uuid"):ea(16);(0,y.en)(16===s.length,"invalid options.uuid length","options.uuid",r.iv);let o=e.slice(0,16),f=e.slice(16,32),d=new eZ(o,a),l=(0,v.Pw)(d.encrypt(i)),c=(0,w.w)((0,v.zo)([f,l])),u={address:n.address.substring(2).toLowerCase(),id:function(e){let t=(0,v.Pw)(e,"randomBytes");t[6]=15&t[6]|64,t[8]=63&t[8]|128;let n=(0,v.Dv)(t);return[n.substring(2,10),n.substring(10,14),n.substring(14,18),n.substring(18,22),n.substring(22,34)].join("-")}(s),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:(0,v.Dv)(a).substring(2)},ciphertext:(0,v.Dv)(l).substring(2),kdf:"scrypt",kdfparams:{salt:(0,v.Dv)(t.salt).substring(2),n:t.N,dklen:32,p:t.p,r:t.r},mac:c.substring(2)}};if(n.mnemonic){let t=null!=r.client?r.client:`ethers/${td.i}`,i=n.mnemonic.path||tl,a=n.mnemonic.locale||"en",s=e.slice(32,64),o=(0,v.Pw)(n.mnemonic.entropy,"account.mnemonic.entropy"),f=ea(16),d=new eZ(s,f),l=(0,v.Pw)(d.encrypt(o)),c=new Date,p="UTC--"+(c.getUTCFullYear()+"-"+ts(c.getUTCMonth()+1,2)+"-"+ts(c.getUTCDate(),2)+"T"+ts(c.getUTCHours(),2)+"-"+ts(c.getUTCMinutes(),2)+"-")+ts(c.getUTCSeconds(),2)+".0Z--"+u.address;u["x-ethers"]={client:t,gethFilename:p,path:i,locale:a,mnemonicCounter:(0,v.Dv)(f).substring(2),mnemonicCiphertext:(0,v.Dv)(l).substring(2),version:"0.1"}}return JSON.stringify(u)}function tg(e,t,n){null==n&&(n={});let r=to(t),i=ty(n),a=ti(r,i.salt,i.N,i.r,i.p,64);return tm((0,v.Pw)(a),i,e,n)}async function tw(e,t,n){null==n&&(n={});let r=to(t),i=ty(n),a=await tr(r,i.salt,i.N,i.r,i.p,64,n.progressCallback);return tm((0,v.Pw)(a),i,e,n)}let tT="m/44'/60'/0'/0/0",tv=new Uint8Array([66,105,116,99,111,105,110,32,115,101,101,100]),tE=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");function tA(e,t){let n="";for(;e;)n="0123456789abcdef"[e%16]+n,e=Math.trunc(e/16);for(;n.length<2*t;)n="0"+n;return"0x"+n}function tN(e){let t=(0,v.Pw)(e),n=(0,v.QB)((0,k.J)((0,k.J)(t)),0,4),r=(0,v.zo)([t,n]);return(0,es.X)(r)}let tR={};function tI(e,t,n,r){let i=new Uint8Array(37);2147483648&e?((0,y.hu)(null!=r,"cannot derive child of neutered node","UNSUPPORTED_OPERATION",{operation:"deriveChild"}),i.set((0,v.Pw)(r),1)):i.set((0,v.Pw)(n));for(let t=24;t>=0;t-=8)i[33+(t>>3)]=e>>24-t&255;let a=(0,v.Pw)(M("sha512",t,i));return{IL:a.slice(0,32),IR:a.slice(32)}}function tO(e,t){let n=t.split("/");(0,y.en)(n.length>0,"invalid path","path",t),"m"===n[0]&&((0,y.en)(0===e.depth,`cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth ${e.depth}`,"path",t),n.shift());let r=e;for(let e=0;e<n.length;e++){let t=n[e];if(t.match(/^[0-9]+'$/)){let n=parseInt(t.substring(0,t.length-1));(0,y.en)(n<2147483648,"invalid path index",`path[${e}]`,t),r=r.deriveChild(2147483648+n)}else if(t.match(/^[0-9]+$/)){let n=parseInt(t);(0,y.en)(n<2147483648,"invalid path index",`path[${e}]`,t),r=r.deriveChild(n)}else(0,y.en)(!1,"invalid path component",`path[${e}]`,t)}return r}class tC extends C{publicKey;fingerprint;parentFingerprint;mnemonic;chainCode;path;index;depth;constructor(e,t,n,r,i,a,s,o,f){super(t,f),(0,y.NK)(e,tR,"HDNodeWallet"),(0,O.h)(this,{publicKey:t.compressedPublicKey});let d=(0,v.QB)(et((0,k.J)(this.publicKey)),0,4);(0,O.h)(this,{parentFingerprint:n,fingerprint:d,chainCode:r,path:i,index:a,depth:s}),(0,O.h)(this,{mnemonic:o})}connect(e){return new tC(tR,this.signingKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.mnemonic,e)}#a(){let e={address:this.address,privateKey:this.privateKey},t=this.mnemonic;return this.path&&t&&"en"===t.wordlist.locale&&""===t.password&&(e.mnemonic={path:this.path,locale:"en",entropy:t.entropy}),e}async encrypt(e,t){return await tw(this.#a(),e,{progressCallback:t})}encryptSync(e){return tg(this.#a(),e)}get extendedKey(){return(0,y.hu)(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"}),tN((0,v.zo)(["0x0488ADE4",tA(this.depth,1),this.parentFingerprint,tA(this.index,4),this.chainCode,(0,v.zo)(["0x00",this.privateKey])]))}hasPath(){return null!=this.path}neuter(){return new tk(tR,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.provider)}deriveChild(e){let t=(0,eo.Dx)(e,"index");(0,y.en)(t<=4294967295,"invalid index","index",t);let n=this.path;n&&(n+="/"+(2147483647&t),2147483648&t&&(n+="'"));let{IR:r,IL:i}=tI(t,this.chainCode,this.publicKey,this.privateKey);return new tC(tR,new h.E((0,eo.m9)(((0,eo.Gh)(i)+BigInt(this.privateKey))%tE,32)),this.fingerprint,(0,v.Dv)(r),n,t,this.depth+1,this.mnemonic,this.provider)}derivePath(e){return tO(this,e)}static #s(e,t){(0,y.en)((0,v.Zq)(e),"invalid seed","seed","[REDACTED]");let n=(0,v.Pw)(e,"seed");(0,y.en)(n.length>=16&&n.length<=64,"invalid seed","seed","[REDACTED]");let r=(0,v.Pw)(M("sha512",tv,n));return new tC(tR,new h.E((0,v.Dv)(r.slice(0,32))),"0x00000000",(0,v.Dv)(r.slice(32)),"m",0,0,t,null)}static fromExtendedKey(e){let t=(0,eo.ot)((0,es.G)(e));(0,y.en)(82===t.length||tN(t.slice(0,78))===e,"invalid extended key","extendedKey","[ REDACTED ]");let n=t[4],r=(0,v.Dv)(t.slice(5,9)),i=parseInt((0,v.Dv)(t.slice(9,13)).substring(2),16),a=(0,v.Dv)(t.slice(13,45)),s=t.slice(45,78);switch((0,v.Dv)(t.slice(0,4))){case"0x0488b21e":case"0x043587cf":{let e=(0,v.Dv)(s);return new tk(tR,(0,R.d)(e),e,r,a,null,i,n,null)}case"0x0488ade4":case"0x04358394 ":if(0!==s[0])break;return new tC(tR,new h.E(s.slice(1)),r,a,null,i,n,null,null)}(0,y.en)(!1,"invalid extended key prefix","extendedKey","[ REDACTED ]")}static createRandom(e,t,n){null==e&&(e=""),null==t&&(t=tT),null==n&&(n=eh.wordlist());let r=eN.fromEntropy(ea(16),e,n);return tC.#s(r.computeSeed(),r).derivePath(t)}static fromMnemonic(e,t){return t||(t=tT),tC.#s(e.computeSeed(),e).derivePath(t)}static fromPhrase(e,t,n,r){null==t&&(t=""),null==n&&(n=tT),null==r&&(r=eh.wordlist());let i=eN.fromPhrase(e,t,r);return tC.#s(i.computeSeed(),i).derivePath(n)}static fromSeed(e){return tC.#s(e,null)}}class tk extends A.b{publicKey;fingerprint;parentFingerprint;chainCode;path;index;depth;constructor(e,t,n,r,i,a,s,o,f){super(t,f),(0,y.NK)(e,tR,"HDNodeVoidWallet"),(0,O.h)(this,{publicKey:n});let d=(0,v.QB)(et((0,k.J)(n)),0,4);(0,O.h)(this,{publicKey:n,fingerprint:d,parentFingerprint:r,chainCode:i,path:a,index:s,depth:o})}connect(e){return new tk(tR,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,e)}get extendedKey(){return(0,y.hu)(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"}),tN((0,v.zo)(["0x0488B21E",tA(this.depth,1),this.parentFingerprint,tA(this.index,4),this.chainCode,this.publicKey]))}hasPath(){return null!=this.path}deriveChild(e){let t=(0,eo.Dx)(e,"index");(0,y.en)(t<=4294967295,"invalid index","index",t);let n=this.path;n&&(n+="/"+(2147483647&t),2147483648&t&&(n+="'"));let{IR:r,IL:i}=tI(t,this.chainCode,this.publicKey,null),a=h.E.addPoints(i,this.publicKey,!0);return new tk(tR,(0,R.d)(a),a,this.fingerprint,(0,v.Dv)(r),n,t,this.depth+1,this.provider)}derivePath(e){return tO(this,e)}}function tS(e){try{if(JSON.parse(e).encseed)return!0}catch(e){}return!1}function tP(e,t){let n=JSON.parse(e),r=to(t),i=(0,g.K)(tf(n,"ethaddr:string!")),a=ta(tf(n,"encseed:string!"));(0,y.en)(a&&a.length%16==0,"invalid encseed","json",e);let s=(0,v.Pw)(ew(r,r,2e3,32,"sha256")).slice(0,16),o=a.slice(0,16),f=a.slice(16),d=new ej(s,o),l=function(e){if(e.length<16)throw TypeError("PKCS#7 invalid length");let t=e[e.length-1];if(t>16)throw TypeError("PKCS#7 padding byte out of range");let n=e.length-t;for(let r=0;r<t;r++)if(e[n+r]!==t)throw TypeError("PKCS#7 invalid padding byte");return new Uint8Array(e.subarray(0,n))}((0,v.Pw)(d.decrypt(f))),c="";for(let e=0;e<l.length;e++)c+=String.fromCharCode(l[e]);return{address:i,privateKey:(0,ef.id)(c)}}function tD(e){return new Promise(t=>{setTimeout(()=>{t()},e)})}class tU extends C{constructor(e,t){"string"!=typeof e||e.startsWith("0x")||(e="0x"+e),super("string"==typeof e?new h.E(e):e,t)}connect(e){return new tU(this.signingKey,e)}async encrypt(e,t){let n={address:this.address,privateKey:this.privateKey};return await tw(n,e,{progressCallback:t})}encryptSync(e){return tg({address:this.address,privateKey:this.privateKey},e)}static #o(e){if((0,y.en)(e,"invalid JSON wallet","json","[ REDACTED ]"),"mnemonic"in e&&e.mnemonic&&"en"===e.mnemonic.locale){let t=eN.fromEntropy(e.mnemonic.entropy),n=tC.fromMnemonic(t,e.mnemonic.path);if(n.address===e.address&&n.privateKey===e.privateKey)return n;console.log("WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key")}let t=new tU(e.privateKey);return(0,y.en)(t.address===e.address,"address/privateKey mismatch","json","[ REDACTED ]"),t}static async fromEncryptedJson(e,t,n){let r=null;return tc(e)?r=await th(e,t,n):tS(e)&&(n&&(n(0),await tD(0)),r=tP(e,t),n&&(n(1),await tD(0))),tU.#o(r)}static fromEncryptedJsonSync(e,t){let n=null;return tc(e)?n=function(e,t){let n=JSON.parse(e),r=to(t),i=tp(n);if("pbkdf2"===i.name){let{salt:e,count:t,dkLen:a,algorithm:s}=i;return tu(n,ew(r,e,t,a,s))}(0,y.hu)("scrypt"===i.name,"cannot be reached","UNKNOWN_ERROR",{params:i});let{salt:a,N:s,r:o,p:f,dkLen:d}=i;return tu(n,ti(r,a,s,o,f,d))}(e,t):tS(e)?n=tP(e,t):(0,y.en)(!1,"invalid JSON wallet","json","[ REDACTED ]"),tU.#o(n)}static createRandom(e){let t=tC.createRandom();return e?t.connect(e):t}static fromPhrase(e,t){let n=tC.fromPhrase(e);return t?n.connect(t):n}}class tM extends A.g{signer;#f;#d;constructor(e){super(e.provider),(0,O.h)(this,{signer:e}),this.#f=null,this.#d=0}async getAddress(){return this.signer.getAddress()}connect(e){return new tM(this.signer.connect(e))}async getNonce(e){if("pending"===e){null==this.#f&&(this.#f=super.getNonce("pending"));let e=this.#d;return await this.#f+e}return super.getNonce(e)}increment(){this.#d++}reset(){this.#d=0,this.#f=null}async sendTransaction(e){let t=this.getNonce("pending");return this.increment(),(e=await this.signer.populateTransaction(e)).nonce=await t,await this.signer.sendTransaction(e)}signTransaction(e){return this.signer.signTransaction(e)}signMessage(e){return this.signer.signMessage(e)}signTypedData(e,t,n){return this.signer.signTypedData(e,t,n)}}async function tL(e,t,n){let r="string"==typeof t?new tU(t,e):t,i=n?.chain??(await p.W.chainFromRpc(e))[1],a=new tM(r);if(null===a.provider)try{a.connect(e)}catch(e){console.error("Cannot connect to network for signer",e)}return new tx(i,await r.getAddress(),a,n)}class tx extends b.Oh{opts;constructor(e,t,n,r){super(e,t,n),this.opts=r}chain(){return this._chain}address(){return this._address}async sign(e){let t=this.chain(),n=[],r=500000n,i=100000000000n,a=1500000000n,s=100000000n;if(this.opts?.overrides===void 0&&"Celo"!==t){let e=await this._signer.provider.getFeeData();i=e.gasPrice??i,a=e.maxFeePerGas??a,s=e.maxPriorityFeePerGas??s}this.opts?.gasLimit!==void 0&&(r=this.opts.gasLimit),this.opts?.maxGasLimit!==void 0&&(r=r>this.opts?.maxGasLimit?this.opts?.maxGasLimit:r);let o="Oasis"===t?{gasLimit:r,gasPrice:i,type:0}:{gasLimit:r,maxFeePerGas:a,maxPriorityFeePerGas:s};for(let t of e){let{transaction:e,description:r}=t;this.opts?.debug&&console.log(`Signing: ${r} for ${this.address()}`);let i={...e,...o,from:this.address(),nonce:await this._signer.getNonce(),...this.opts?.overrides};n.push(await this._signer.signTransaction(i))}return n}}var t_=n(48094),t$=n(36948),tK={Address:u.V,Platform:p.W,getSigner:tL,protocols:{WormholeCore:()=>n.e(527).then(n.bind(n,94527)),TokenBridge:()=>Promise.all([n.e(527),n.e(946)]).then(n.bind(n,89946)),PorticoBridge:()=>Promise.all([n.e(527),n.e(946),n.e(401)]).then(n.bind(n,8401)),CircleBridge:()=>Promise.all([n.e(527),n.e(946),n.e(948)]).then(n.bind(n,62948))},getChain:(e,t,n)=>new t_.C(t,new p.W(e,(0,c.C_)(e,t$.c0,{[t]:n})))}},50727:function(e,t,n){n.d(t,{l:function(){return d}});var r=n(77501),i=n(83207),a=n(32381),s=n(64034),o=n(46255),f=n(58016);class d{interface;bytecode;runner;constructor(e,t,n){let i=r.vU.from(e);t instanceof Uint8Array||("object"==typeof t&&(t=t.object),t.startsWith("0x")||(t="0x"+t)),t=(0,a.Dv)((0,a.Pw)(t)),(0,s.h)(this,{bytecode:t,interface:i,runner:n||null})}attach(e){return new f.VZ(e,this.interface,this.runner)}async getDeployTransaction(...e){let t={},n=this.interface.deploy;if(n.inputs.length+1===e.length&&(t=await (0,f.Jc)(e.pop())),n.inputs.length!==e.length)throw Error("incorrect number of arguments to constructor");let r=await (0,f.rq)(this.runner,n.inputs,e);return Object.assign({},t,{data:(0,a.zo)([this.bytecode,this.interface.encodeDeploy(r)])})}async deploy(...e){let t=await this.getDeployTransaction(...e);(0,o.hu)(this.runner&&"function"==typeof this.runner.sendTransaction,"factory runner does not support sending transactions","UNSUPPORTED_OPERATION",{operation:"sendTransaction"});let n=await this.runner.sendTransaction(t),r=(0,i.e)(n);return new f.VZ(r,this.interface,this.runner,n)}connect(e){return new d(this.interface,this.bytecode,e)}static fromSolidity(e,t){(0,o.en)(null!=e,"bad compiler output","output",e),"string"==typeof e&&(e=JSON.parse(e));let n=e.abi,r="";return e.bytecode?r=e.bytecode:e.evm&&e.evm.bytecode&&(r=e.evm.bytecode),new this(n,r,t)}}}}]);