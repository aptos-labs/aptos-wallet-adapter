(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[102],{39362:function(){},23938:function(){},26790:function(e,t,n){"use strict";n.d(t,{pm:function(){return d}});var a=n(25955);let o=0,r=new Map,s=e=>{if(r.has(e))return;let t=setTimeout(()=>{r.delete(e),u({type:"REMOVE_TOAST",toastId:e})},1e6);r.set(e,t)},i=(e,t)=>{switch(t.type){case"ADD_TOAST":return{...e,toasts:[t.toast,...e.toasts].slice(0,1)};case"UPDATE_TOAST":return{...e,toasts:e.toasts.map(e=>e.id===t.toast.id?{...e,...t.toast}:e)};case"DISMISS_TOAST":{let{toastId:n}=t;return n?s(n):e.toasts.forEach(e=>{s(e.id)}),{...e,toasts:e.toasts.map(e=>e.id===n||void 0===n?{...e,open:!1}:e)}}case"REMOVE_TOAST":if(void 0===t.toastId)return{...e,toasts:[]};return{...e,toasts:e.toasts.filter(e=>e.id!==t.toastId)}}},c=[],l={toasts:[]};function u(e){l=i(l,e),c.forEach(e=>{e(l)})}function h(e){let{...t}=e,n=(o=(o+1)%Number.MAX_SAFE_INTEGER).toString(),a=()=>u({type:"DISMISS_TOAST",toastId:n});return u({type:"ADD_TOAST",toast:{...t,id:n,open:!0,onOpenChange:e=>{e||a()}}}),{id:n,dismiss:a,update:e=>u({type:"UPDATE_TOAST",toast:{...e,id:n}})}}function d(){let[e,t]=a.useState(l);return a.useEffect(()=>(c.push(t),()=>{let e=c.indexOf(t);e>-1&&c.splice(e,1)}),[e]),{...e,toast:h,dismiss:e=>u({type:"DISMISS_TOAST",toastId:e})}}},52873:function(e,t,n){"use strict";n.d(t,{te:function(){return eh},kj:function(){return U},I:function(){return R},Wp:function(){return el}});var a,o,r=n(49410),s=n(72092),i=n(26493),c=n(21759),l=n(13050),u=n(16388),h=n(18110),d=n(73995),g=n(20943),p=n(50641),w=n(12309),m=n(81520),f=n(68782),E=n(69323),y=n(54354),S={log:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n]}},C=class{chain(){return this._chain}address(){return this._wallet.accountAddress.toString()}claimedTransactionHashes(){return this._claimedTransactionHashes}async signAndSend(e){console.log("Signer signAndSend txs",e);let t=[];for(let n of e){let e=await T(n,this._wallet,this._sponsorAccount);t.push(e),this._claimedTransactionHashes=e}return t}constructor(e,t,n,a){this._chain=e,this._options=t,this._wallet=n,this._sponsorAccount=a,this._claimedTransactionHashes=""}};async function T(e,t,n){if(!t)throw Error("Wallet is undefined");let a=e.transaction;a.functionArguments=a.functionArguments.map(e=>e instanceof Uint8Array?Array.from(e):"bigint"==typeof e?e.toString():e);let o=new m.ScN({network:m.ZcK.TESTNET}),r=new m.gZG(o),s=await r.transaction.build.simple({data:a,sender:t.accountAddress.toString(),withFeePayer:!!n}),i=await r.transaction.sign({signer:t,transaction:s}),c={transaction:s,senderAuthenticator:i};if(n){let e=r.transaction.signAsFeePayer({signer:n,transaction:s});c.feePayerAuthenticator=e}let l=await r.transaction.submit.simple(c);return(await r.waitForTransaction({transactionHash:l.hash})).hash}async function k(e,t,n){var a;if(!t)throw Error("Wallet not found");let o=null!=(a=null==n?void 0:n.commitment)?a:"finalized",r=new f.Connection("https://api.devnet.solana.com"),{blockhash:s,lastValidBlockHeight:i}=await r.getLatestBlockhash(o);e.transaction.transaction;let c=await v(r,s,i,e),l=null,u=null,h=1,d="",g=(await t.signTransaction(c)).serialize(),p={skipPreflight:!0,maxRetries:0,preFlightCommitment:o};for(d=await r.sendRawTransaction(g,p),l=r.confirmTransaction({signature:d,blockhash:s,lastValidBlockHeight:i},o);!u&&!(u=await Promise.race([l,new Promise(e=>setTimeout(()=>{e(null)},5e3))]));){console.log("Tx not confirmed after ".concat(5e3*h++,"ms, resending"));try{await r.sendRawTransaction(g,p)}catch(e){console.error("Failed to resend transaction:",e)}}if(u.value.err){let e="Transaction failed: ".concat(u.value.err);if("object"==typeof u.value.err)try{e="Transaction failed: ".concat(JSON.stringify(u.value.err,(e,t)=>"bigint"==typeof t?t.toString():t))}catch(t){e="Transaction failed: Unknown error"}throw Error("Transaction failed: ".concat(e))}return d}async function v(e,t,n,a){let o=a.transaction.transaction;return o.recentBlockhash=t,o.lastValidBlockHeight=n,o.instructions=o.instructions.filter(e=>"ComputeBudget111111111111111111111111111111"!==e.programId.toString()),o.add(...await A(e,o)),a.transaction.signers&&o.partialSign(...a.transaction.signers),o}async function A(e,t,n){var a;let o=2e5,r=0;for(;;){let n=await e.simulateTransaction(t);if(n.value.err){if(function(e){let t={};if("BlockhashNotFound"===e.err&&(t.BlockhashNotFound="Blockhash not found during simulation. Trying again."),e.logs)for(let n of e.logs)n.includes("SlippageToleranceExceeded")&&(t.SlippageToleranceExceeded="Slippage failure during simulation. Trying again."),n.includes("RequireGteViolated")&&(t.RequireGteViolated="Swap instruction failure during simulation. Trying again.");return!x(t)&&(console.table(t),!0)}(n.value)){if(r<5){r++,await N(1e3);continue}}else if(r<3){r++,await N(1e3);continue}throw Error("Simulation failed: ".concat(JSON.stringify(n.value.err),"\nLogs:\n").concat((n.value.logs||[]).join("\n  ")))}n.value.unitsConsumed&&(o=n.value.unitsConsumed);break}let s=Math.floor(1.2*o),i=[];i.push(f.ComputeBudgetProgram.setComputeUnitLimit({units:s}));let c=async n=>{if("triton"===n)try{return{fee:await (0,E.VE)(e,t,.9,1,1e5,1e8),methodUsed:"triton"}}catch(e){console.warn("Failed to determine priority fee using Triton RPC:",e)}try{return{fee:await (0,E.J6)(e,t,.9,1,1e5,1e8),methodUsed:"default"}}catch(e){return console.warn("Failed to determine priority fee using Triton RPC:",e),{fee:1e5,methodUsed:"minimum"}}},l=(a=e.rpcEndpoint).includes("rpcpool.com")?"triton":a.includes("helius-rpc.com")?"helius":a.includes("rpc.ankr.com")?"ankr":"unknown",{fee:u,methodUsed:h}=await c(l),d=u/1e6/f.LAMPORTS_PER_SOL*s;return console.table({"RPC Provider":l,"Method used":h,"Percentile used":.9,"Multiple used":1,"Compute budget":s,"Priority fee":u,"Max fee in SOL":d}),i.push(f.ComputeBudgetProgram.setComputeUnitPrice({microLamports:u})),i}async function N(e){return new Promise(t=>setTimeout(t,e))}var x=e=>{if(null==e)return!0;for(let t in e)if(e.hasOwnProperty.call(e,t))return!1;return!0};async function b(e,t,n,a){if(!t||!t.sendTransaction)throw Error("wallet.sendTransaction is undefined");let o=await t.getConnectedNetwork();if(!o)throw Error("No signer found for chain"+n);let r=e.transaction.chainId?(0,y.yT)(e.transaction.chainId):void 0;if(!o||!r||BigInt(o)!==r)throw Error("Signer is not connected to the right chain. Expected ".concat(r,", got ").concat(o));return await t.sendTransaction(e.transaction)}async function P(e,t){if(!t||!t.sendTransaction)throw Error("wallet.sendTransaction is undefined");let n=await t.sendTransaction({transactionBlock:e.transaction});return null==n?void 0:n.id}var I=class{chain(){return this._chain.displayName}address(){return this._address}async signAndSend(e){let t=[];for(let n of e){let e=await D(this._chain,n,this._wallet,this._options);t.push(e)}return t}constructor(e,t,n,a){this._chain=e,this._address=t,this._options=n,this._wallet=a}},D=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!n)throw Error("wallet is undefined");if("Solana"===e.context)return await k(t,n,a);if("Ethereum"===e.context)return await b(t,n,e.displayName,a);if("Sui"===e.context)return await P(t,n);throw Error("Unsupported chain: ".concat(e))},_=((a=_||{}).ETH="Ethereum",a.TERRA="Terra",a.XPLA="XPLA",a.SOLANA="Solana",a.ALGORAND="Algorand",a.NEAR="Near",a.APTOS="Aptos",a.SUI="Sui",a.OTHER="OTHER",a),R={Sepolia:{key:"Sepolia",id:10002,context:"Ethereum",finalityThreshold:0,displayName:"Sepolia",explorerUrl:"https://sepolia.etherscan.io/",explorerName:"Etherscan",gasToken:"ETHsepolia",chainId:11155111,icon:"Ethereum",maxBlockSearch:2e3,symbol:"ETH",sdkName:"Sepolia",wrappedGasToken:"0xeef12A83EE5b7161D3873317c8E0E7B76e0B5D9c"},Solana:{key:"Solana",id:1,context:"Solana",finalityThreshold:32,displayName:"Solana",explorerUrl:"https://explorer.solana.com/",explorerName:"Solana Explorer",gasToken:"SOL",chainId:0,icon:"Solana",maxBlockSearch:2e3,symbol:"SOL",sdkName:"Solana",wrappedGasToken:"So11111111111111111111111111111111111111112"},Sui:{key:"Sui",id:21,context:"Sui",finalityThreshold:0,displayName:"Sui",explorerUrl:"https://suiscan.xyz/testnet/",explorerName:"Suiscan",gasToken:"SUI",chainId:0,icon:"Sui",maxBlockSearch:0,symbol:"SUI",sdkName:"Sui"}},W={Avalanche:{symbol:"USDC",icon:"USDC",decimals:6,tokenId:{chain:"Avalanche",address:"0x5425890298aed601595a70AB815c96711a31Bc65"}},Sepolia:{symbol:"USDC",icon:"USDC",decimals:6,tokenId:{chain:"Sepolia",address:"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238"}},Solana:{symbol:"USDC",tokenId:{chain:"Solana",address:"4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU"},icon:"USDC",decimals:6},Sui:{symbol:"USDC",tokenId:{chain:"Sui",address:"0xa1ec7fc00a6f40db9693ad1415d0c193ad3906494428cf252621037bd7117e29::usdc::USDC"},icon:"USDC",decimals:6}},O={symbol:"USDC",decimals:6,tokenId:{chain:"Aptos",address:"0x69091fbab5f7d635ee7ac5098cf0c1efbe31d68fec0f2cd565e8d168daf52832"},icon:"USDC"},U={Ethereum:{key:"Ethereum",id:2,context:"Ethereum",finalityThreshold:64,displayName:"Ethereum",explorerUrl:"https://etherscan.io/",explorerName:"Etherscan",gasToken:"ETH",chainId:1,icon:"Ethereum",maxBlockSearch:2e3,symbol:"ETH",sdkName:"Ethereum"},Solana:{key:"Solana",id:1,context:"Solana",finalityThreshold:32,displayName:"Solana",explorerUrl:"https://explorer.solana.com/",explorerName:"Solana Explorer",gasToken:"SOL",chainId:0,icon:"Solana",maxBlockSearch:2e3,symbol:"SOL",sdkName:"Solana"},Sui:{key:"Sui",id:21,context:"Sui",finalityThreshold:0,displayName:"Sui",sdkName:"Sui",explorerUrl:"https://suiscan.xyz/",explorerName:"Suiscan",gasToken:"SUI",chainId:0,icon:"Sui",maxBlockSearch:0,symbol:"SUI"}},q={Ethereum:{symbol:"USDC",tokenId:{chain:"Ethereum",address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},icon:"USDC",decimals:6},Solana:{symbol:"USDC",tokenId:{chain:"Solana",address:"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"},icon:"USDC",decimals:6},Sui:{symbol:"USDC",decimals:6,tokenId:{chain:"Sui",address:"0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC"},icon:"USDC"}},M={symbol:"USDC",tokenId:{chain:"Aptos",address:"0xbae207659db88bea0cbead6da0ed00aac12edcdda169e591cd41c94180b46f3b"},icon:"USDC",decimals:6},B=class{get wormholeContext(){return this._wormholeContext}async setWormholeContext(e){var t;let n=null==(t=this.crossChainCore._dappConfig)?void 0:t.network;if(n===m.ZcK.DEVNET)throw Error("Devnet is not supported on Wormhole");if(!e)throw Error("Origin chain not selected");let a=n===m.ZcK.MAINNET,o=[d.Z,g.Z,p.Z,w.Z],s=await (0,r.c77)(a?"Mainnet":"Testnet",o);this._wormholeContext=s}async getWormholeCctpRoute(e){if(!this._wormholeContext)throw Error("Wormhole context not initialized");let{sourceToken:t,destToken:n}=this.getTokenInfo(e),a=this._wormholeContext.getPlatform((0,s.fm)(e)).getChain(e);S.log("sourceContext",a);let o=this._wormholeContext.getPlatform((0,s.fm)("Aptos")).getChain("Aptos");S.log("destContext",o);let r=await i.f.create(this._wormholeContext,{source:t,destination:n},a,o),l=this._wormholeContext.resolver([c.R]);return{route:(await l.findRoutes(r))[0],request:r}}async getQuote(e){let{amount:t,sourceChain:n}=e;this._wormholeContext||await this.setWormholeContext(n);let{route:a,request:o}=await this.getWormholeCctpRoute(n);this.wormholeRoute=a,this.wormholeRequest=o;let r=await a.validate(o,{amount:t,options:{nativeGas:0}});if(!r.valid)throw S.log("invalid",r.valid),r.error;let s=await a.quote(o,r.params);if(!s.success)throw S.log("quote failed",s.success),s.error;return this.wormholeQuote=s,S.log("quote",s),s}async startCCTPTransfer(e){let t;let{sourceChain:n,wallet:a,destinationAddress:o}=e;if(this._wormholeContext||await this.setWormholeContext(n),!this.wormholeRoute||!this.wormholeRequest||!this.wormholeQuote)throw Error("Wormhole route, request, or quote not initialized");let r=this.getChainConfig(n).context,s=await a.getAccount();t="Solana"===r?s.publicKey.toString():s.address,S.log("signerAddress",t);let i=new I(this.getChainConfig(n),t,{},a),c=await this.wormholeRoute.initiate(this.wormholeRequest,i,this.wormholeQuote,l.D.chainAddress("Aptos",o.toString()));return{originChainTxnId:("originTxs"in c?c.originTxs[c.originTxs.length-1].txid:void 0)||"",receipt:c}}async initiateCCTPTransfer(e){var t;if((null==(t=this.crossChainCore._dappConfig)?void 0:t.network)===m.ZcK.DEVNET)throw Error("Devnet is not supported on Wormhole");if(!this.wormholeRoute||!this.wormholeRequest||!this.wormholeQuote)throw Error("Wormhole route, request, or quote not initialized");let{originChainTxnId:n,receipt:a}=await this.startCCTPTransfer(e),{mainSigner:o,sponsorAccount:r}=e;S.log("mainSigner",o.accountAddress.toString());let s=0;for(;s<5;)try{for await(a of this.wormholeRoute.track(a,12e4))if(a.state>=u.ki.SourceInitiated){S.log("Receipt is on track ",a);try{let e=new C("Aptos",{},o,r||void 0);if(!h.x7(this.wormholeRoute))return{destinationChainTxnId:"",originChainTxnId:n};{let t=await this.wormholeRoute.complete(e,a);return S.log("Claim receipt: ",t),{destinationChainTxnId:e.claimedTransactionHashes(),originChainTxnId:n}}}catch(e){return console.error("Failed to claim",e),{destinationChainTxnId:"",originChainTxnId:n}}}}catch(t){console.error("Error tracking transfer (attempt ".concat(s+1," / ").concat(5,"):"),t);let e=1e3*Math.pow(2,s);await (0,m._vH)(e),s++}return{destinationChainTxnId:"",originChainTxnId:n}}getChainConfig(e){let t=this.CHAINS[e];if(!t)throw Error("Chain config not found for chain: ".concat(e));return t}getTokenInfo(e){return{sourceToken:l.D.tokenId(this.TOKENS[e].tokenId.chain,this.TOKENS[e].tokenId.address),destToken:l.D.tokenId(this.APTOS_TOKEN.tokenId.chain,this.APTOS_TOKEN.tokenId.address)}}constructor(e){var t;this.CHAINS=R,this.TOKENS=W,this.APTOS_TOKEN=O,this.crossChainCore=e,(null==(t=e._dappConfig)?void 0:t.network)===m.ZcK.MAINNET?(this.CHAINS=U,this.TOKENS=q,this.APTOS_TOKEN=M):(this.CHAINS=R,this.TOKENS=W,this.APTOS_TOKEN=O)}},K=class{getProvider(e){if("Wormhole"===e)return new B(this);throw Error("Unknown provider: ".concat(e))}constructor(e){this._dappConfig=e.dappConfig}},H=n(25955),j=n(83688),J=n(80612),L=n(23167),F=n(65204),V=n(40030),G=n(62680),Z=e=>{let t=new m.EZS(e.toBytes()),n=t.authKey().derivedAddress();return new j.wP({address:n,publicKey:t})},z=e=>({accounts:[],chains:j.xE,features:{...Q(e),...X(e)},icon:e.icon,name:e.name,url:e.url,version:"1.0.0"}),Q=e=>({"aptos:account":{account:async()=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:connect":{connect:async()=>{try{if(await e.connect(),!e.publicKey)return{status:j.qk.REJECTED};return{args:Z(e.publicKey),status:j.qk.APPROVED}}catch(e){if(console.log("e",e),e instanceof G.$w)return{status:j.qk.REJECTED};throw e}},version:"1.0.0"},"aptos:disconnect":{disconnect:async()=>{try{await e.disconnect()}catch(e){throw Error("Failed to disconnect")}},version:"1.0.0"},"aptos:network":{network:async()=>{throw Error("Fetch network info not supported by Solana wallet adapter")},version:"1.0.0"},"aptos:signMessage":{signMessage:async e=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:signTransaction":{signTransaction:async e=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:onAccountChange":{onAccountChange:async t=>{e.wallet.features["standard:events"]&&e.wallet.features["standard:events"].on("change",e=>{e.accounts&&0!==e.accounts.length&&t(Z(new f.PublicKey(e.accounts[0].publicKey)))})},version:"1.0.0"},"aptos:onNetworkChange":{onNetworkChange:async()=>{throw Error("onNetworkChange not yet implemented in solana wallet adapter")},version:"1.0.0"}}),X=e=>({"solana:account":{account:async()=>{if(!e.publicKey)throw Error("Disconnected");return Z(e.publicKey)},version:"1.0.0"},"solana:signMessage":{signMessage:async t=>{if(!e.signMessage)throw Error("Not supported");try{let n=new TextEncoder().encode(t),a=await e.signMessage(n);return{status:j.qk.APPROVED,args:a}}catch(e){if(e instanceof Error&&e.message.includes("rejected"))return{status:j.qk.REJECTED};throw e}},version:"1.0.0"},"solana:signTransaction":{signTransaction:async t=>{if(!e.signTransaction)throw Error("Not supported");try{let n=await e.signTransaction(t);return{status:j.qk.APPROVED,args:n}}catch(e){if(e instanceof Error&&e.message.includes("rejected"))return{status:j.qk.REJECTED};throw e}},version:"1.0.0"}}),Y=class extends V.O{get icon(){return this.solanaWallet.icon}get name(){return this.solanaWallet.name}get url(){return this.solanaWallet.url}get readyState(){return V.i.Installed}get chains(){return j.xE}get isConnected(){return this.connected}async getAccount(){return await this.solanaWallet.features["solana:account"].account()}async getConnectedNetwork(){return await this.solanaWallet.features["aptos:network"].network()}async connect(){let e=await this.solanaWallet.features["aptos:connect"].connect();if(e.status===j.qk.REJECTED)throw Error("User rejected the request").message;return await this.onAccountChange(),this.connected=!0,e.args}async disconnect(){this.connected&&(await this.solanaWallet.features["aptos:disconnect"].disconnect(),this.connected=!1)}async signMessage(e){let t=await this.solanaWallet.features["solana:signMessage"].signMessage(e);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return t.args}async signTransaction(e){let t=await this.solanaWallet.features["solana:signTransaction"].signTransaction(e);if(t.status===j.qk.REJECTED)throw Error("User rejected");return t.args}async onAccountChange(){await this.solanaWallet.features["aptos:onAccountChange"].onAccountChange(async e=>{this.emit("accountChange",e)})}async onNetworkChange(e){await this.solanaWallet.features["aptos:onNetworkChange"].onNetworkChange(e)}constructor(e){super(),this.version="1.0.0",this.accounts=[],this.connected=!1,this.solanaWallet=e}},$=n(12118),ee=n(35372),et=e=>({accounts:[],chains:j.xE,features:{...en(e),...ea(e)},icon:e.info.icon,name:e.info.name,url:er[e.info.name],version:"1.0.0"}),en=e=>({"aptos:account":{account:async()=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:connect":{connect:async()=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:disconnect":{disconnect:async()=>{try{e.provider.on("disconnect",e=>{console.error("EIP-6963 wallet disconnected",e)})}catch(e){throw Error("Failed to disconnect").message}},version:"1.0.0"},"aptos:network":{network:async()=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:signMessage":{signMessage:async e=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:signTransaction":{signTransaction:async e=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:onAccountChange":{onAccountChange:async e=>{throw Error("Not yet implemented")},version:"1.0.0"},"aptos:onNetworkChange":{onNetworkChange:async t=>{e.provider.on("chainChanged",e=>{console.log("chainId",e),t({name:parseInt(e),chainId:parseInt(e)})})},version:"1.0.0"}}),ea=e=>{let t={"eip6963:account":{account:async()=>{let t=await e.provider.request({method:"eth_requestAccounts"}).catch(console.error);return{address:t[0],publicKey:ee.Pw(t[0])}},version:"1.0.0"},"eip6963:connect":{connect:async()=>{try{let t=await e.provider.request({method:"eth_requestAccounts"}).catch(e=>{throw Error("Error connecting to wallet"+e).message});return{args:{address:t[0],publicKey:ee.Pw(t[0])},status:j.qk.APPROVED}}catch(e){if(e instanceof Error&&e.message.includes("refused connection"))return{status:j.qk.REJECTED};throw e}},version:"1.0.0"},"eip6963:network":{network:async()=>parseInt(await e.provider.request({method:"eth_chainId"}),16),version:"1.0.0"},"eip6963:signMessage":{signMessage:async n=>{try{let a=await e.provider.request({method:"personal_sign",params:[n,(await t["eip6963:account"].account()).address]});return{status:j.qk.APPROVED,args:a}}catch(e){if("message"in e&&e.message.includes("rejected"))return{status:j.qk.REJECTED};throw Error(e).message}},version:"1.0.0"},"eip6963:sendTransaction":{sendTransaction:async(e,t)=>{try{let n=await t.getSigner();if(!n)throw Error("No signer found");let a=await n.sendTransaction(e),o=await a.wait();return{status:j.qk.APPROVED,args:(null==o?void 0:o.hash)||""}}catch(e){if(e instanceof Error&&e.message.includes("rejected"))return{status:j.qk.REJECTED};throw Error(e).message}},version:"1.0.0"},"eip6963:onAccountChange":{onAccountChange:async t=>{e.provider.on("accountsChanged",e=>{t({address:e[0],publicKey:ee.Pw(e[0])})})},version:"1.0.0"}};return t},eo=((o=eo||{}).PhantomWallet="Phantom",o.MetaMaskWallet="MetaMask",o.BackpackWallet="Backpack",o.CoinbaseWallet="Coinbase Wallet",o.NightlyWallet="Nightly",o.RabbyWallet="Rabby Wallet",o),er={Phantom:"https://phantom.app/",MetaMask:"https://metamask.io/",Backpack:"https://www.backpack.app/","Coinbase Wallet":"https://www.coinbase.com/wallet",Nightly:"https://nightly.app/","Rabby Wallet":"https://rabby.io/"},es=class extends V.O{get icon(){return this.eip6963Wallet.icon}get name(){return this.eip6963Wallet.name}get url(){return er[this.eip6963Wallet.name]}get readyState(){return V.i.Installed}get chains(){return j.xE}get isConnected(){return this.connected}async getAccount(){return await this.eip6963Wallet.features["eip6963:account"].account()}async getConnectedNetwork(){return await this.eip6963Wallet.features["eip6963:network"].network()}async connect(){let e=await this.eip6963Wallet.features["eip6963:connect"].connect();if(e.status===j.qk.REJECTED)throw Error("User rejected the request").message;return await this.onAccountChange(),await this.onNetworkChange(),this.provider=new $.Q(await this.eip6963WalletProvider.provider,"any"),this.connected=!0,e.args}async disconnect(){try{if(!this.connected)return;await this.eip6963Wallet.features["aptos:disconnect"].disconnect(),this.connected=!1}catch(e){throw Error(e).message}}async signMessage(e){let t=await this.eip6963Wallet.features["eip6963:signMessage"].signMessage(e);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return t.args}async signTransaction(e){throw Error("Not implemented")}async sendTransaction(e){if(!this.provider)throw Error("Provider not connected");let t=await this.eip6963Wallet.features["eip6963:sendTransaction"].sendTransaction(e,this.provider);if(t.status===j.qk.REJECTED)throw Error("User rejected the request").message;return t.args}async onAccountChange(){await this.eip6963Wallet.features["eip6963:onAccountChange"].onAccountChange(e=>{this.emit("accountChange",e)})}async onNetworkChange(){await this.eip6963Wallet.features["aptos:onNetworkChange"].onNetworkChange(e=>{this.emit("networkChange",e)})}constructor(e,t){super(),this.version="1.0.0",this.accounts=[],this.connected=!1,this.eip6963Wallet=e,this.eip6963WalletProvider=t}},ei=n(8850),ec=(0,H.createContext)({connected:!1});function el(){let e=(0,H.useContext)(ec);if(!e)throw Error("useWallet must be used within a WalletContextState");return e}var eu={connected:!1,account:null,wallet:null,sourceChain:null,setSourceChain:()=>{}},eh=e=>{let{children:t,dappConfig:n,disableTelemetry:a,onError:o}=e,[{connected:r,wallet:s,account:i,sourceChain:c},l]=(0,H.useState)(eu),[u,h]=(0,H.useState)(),[d,g]=(0,H.useState)();(0,H.useEffect)(()=>{g(new K({dappConfig:n}))},[]),(0,H.useEffect)(()=>{if(!s)return;let e=e=>{l(t=>({...t,account:e}))},t=e=>{console.log("handleNetworkChange not implemented")};return s.on("accountChange",e),s.on("networkChange",t),()=>{s.off("accountChange",e),s.off("networkChange",t)}},[s]);let p=async(e,t)=>{try{let n=null==d?void 0:d.getProvider("Wormhole");if(!n)throw Error("Provider not found");return h(n),await (null==n?void 0:n.getQuote({amount:e,sourceChain:t}))}catch(e){return o&&o(e),Promise.reject(e)}},w=async(e,t,n)=>{try{if(!u)throw Error("Provider is not set");let{originChainTxnId:a,destinationChainTxnId:o}=await u.initiateCCTPTransfer({sourceChain:e,wallet:s,destinationAddress:"0x38383091fdd9325e0b8ada990c474da8c7f5aa51580b65eb477885b6ce0a36b7",mainSigner:t,sponsorAccount:n});return{originChainTxnId:a,destinationChainTxnId:o}}catch(e){return o&&o(e),Promise.reject(e)}},m=async e=>{try{let t=await e.connect();console.log("WalletProvider connect response",t),l(n=>({...n,connected:!0,wallet:e,account:t}))}catch(e){return o&&o(e),Promise.reject(e)}},f=async()=>{try{await (null==s?void 0:s.disconnect()),l(e=>({...e,connected:!1,wallet:null}))}catch(e){return o&&o(e),Promise.reject(e)}};return(0,ei.jsx)(ec.Provider,{value:{connected:r,account:i,isLoading:!1,getSolanaWallets:()=>(0,L.M)().get().filter(J.N).map(e=>new Y(z(new F.t({wallet:e})))),getEthereumWallets:()=>(function(){let e=[],t=[],n=n=>{let a=n.detail;e.some(e=>e.info.uuid===a.info.uuid)||(e.push(a),t.push(new es(et(a),a)))};return window.addEventListener("eip6963:announceProvider",e=>{n(e)}),window.dispatchEvent(new Event("eip6963:requestProvider")),t})(),getSuiWallets:()=>[],connect:m,disconnect:f,wallet:s,getQuote:p,initiateTransfer:w,sourceChain:c,setSourceChain:e=>{l(t=>({...t,sourceChain:e}))}},children:t})}},40030:function(e,t,n){"use strict";n.d(t,{O:function(){return s},i:function(){return r}});var a,o=n(57100),r=((a=r||{}).Installed="Installed",a.NotDetected="NotDetected",a),s=class extends o{sendTransaction(e){throw Error("Not implemented")}getAccountUsdcBalance(){throw Error("Not implemented")}}}}]);