import{AccountAddress as l,AnyPublicKey as a,Ed25519PublicKey as c,MultiEd25519PublicKey as r,MultiKey as u,Serializable as y,SigningScheme as i}from"@aptos-labs/ts-sdk";var d=class o extends y{constructor({address:e,publicKey:n,ansName:t}){super();this.address=l.from(e),this.publicKey=n,this.ansName=t}serialize(e){if(this.address.serialize(e),this.publicKey instanceof c)e.serializeU32AsUleb128(i.Ed25519);else if(this.publicKey instanceof r)e.serializeU32AsUleb128(i.MultiEd25519);else if(this.publicKey instanceof a)e.serializeU32AsUleb128(i.SingleKey);else if(this.publicKey instanceof u)e.serializeU32AsUleb128(i.MultiKey);else throw new Error("Unsupported public key");this.publicKey.serialize(e),e.serializeStr(this.ansName??"")}static deserialize(e){let n=l.deserialize(e),t=e.deserializeUleb128AsU32(),s;switch(t){case i.Ed25519:s=c.deserialize(e);break;case i.MultiEd25519:s=r.deserialize(e);break;case i.SingleKey:s=a.deserialize(e);break;case i.MultiKey:s=u.deserialize(e);break;default:throw new Error(`Unknown variant index for WrappedPublicKey: ${t}`)}let b=e.deserializeStr()||void 0;return new o({address:n,publicKey:s,ansName:b})}};export{d as a};
//# sourceMappingURL=chunk-FFGPGN2W.mjs.map