"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[802],{32802:function(e,t,r){r.r(t),r.d(t,{EvmPorticoBridge:function(){return m}});var n=r(48210),i=r(80769),a=r(29443),o=r(5729),s=r(52909),c=r(52295),d=r(81434),h=r(9905),u=r(53863),f=r(55340),l=r(87879),p=r(57175);let g=new p.vU(["function start((bytes32,address,address,address,address,address,uint256,uint256,uint256,uint256)) returns (address,uint16,uint64)","function receiveMessageAndSwap(bytes)"]),k=new p.vU(["function quoteExactInputSingle((address,address,uint256,uint24,uint160)) public view returns (uint256,uint160,uint32,uint256)"]);var w=r(15383),D=r(97578);class C{static async quoteRelayer(e,t,r){if((0,n.tY)(t)||(0,n.tY)(r))throw Error("how did you get here tho?");let i=w.$v.encode(t.toUniversalAddress().toUint8Array(),!1),a=w.$v.encode(r.toUniversalAddress().toUint8Array(),!1),s=(0,o.Vn)(e);try{let e=await D.default.post("https://gfx.relayers.xlabs.xyz/api/v1/swap/quote",{targetChain:s,sourceToken:i,targetToken:a});return BigInt(e.data.fee)}catch(e){if(D.default.isAxiosError(e))throw Error(`Error getting relayer fee: ${e.response?.statusText}`);throw e}}}let E={ETH:[c.D.tokenId("Arbitrum","native"),c.D.tokenId("Base","native"),c.D.tokenId("Ethereum","native"),c.D.tokenId("Optimism","native")],WETH:[c.D.tokenId("Arbitrum","0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"),c.D.tokenId("Avalanche","0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB"),c.D.tokenId("Base","0x4200000000000000000000000000000000000006"),c.D.tokenId("Bsc","0x2170Ed0880ac9A755fd29B2688956BD959F933F8"),c.D.tokenId("Ethereum","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"),c.D.tokenId("Optimism","0x4200000000000000000000000000000000000006"),c.D.tokenId("Polygon","0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619")],wstETH:[c.D.tokenId("Arbitrum","0x5979D7b546E38E414F7E9822514be443A4800529"),c.D.tokenId("Base","0xc1CBa3fCea344f92D9239c08C0568f6F2F0ee452"),c.D.tokenId("Ethereum","0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"),c.D.tokenId("Optimism","0x1F32b1c2345538c0c6f582fCB022739c4A194Ebb"),c.D.tokenId("Polygon","0x03b54A6e9a984069379fae1a4fC4dBAE93B3bCCD")],USDT:[c.D.tokenId("Arbitrum","0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9"),c.D.tokenId("Avalanche","0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7"),c.D.tokenId("Base","0xfde4C96c8593536E31F229EA8f37b2ADa2699bb2"),c.D.tokenId("Bsc","0x55d398326f99059fF775485246999027B3197955"),c.D.tokenId("Ethereum","0xdAC17F958D2ee523a2206206994597C13D831ec7"),c.D.tokenId("Optimism","0x94b008aA00579c1307B0EF2c499aD98a8ce58e58"),c.D.tokenId("Polygon","0xc2132D05D31c914a87C6611C10748AEb04B58e8F"),c.D.tokenId("Celo","0x48065fbBE25f71C9282ddf5e1cD6D6A887483D5e")]};var b=r(97026),A=r(32198);class m{network;chain;provider;contracts;chainId;core;tokenBridge;constructor(e,t,r,n){if(this.network=e,this.chain=t,this.provider=r,this.contracts=n,!n.portico)throw Error("Unsupported chain, no contract addresses for: "+t);this.core=new b.EvmWormholeCore(e,t,r,n),this.tokenBridge=new A.EvmTokenBridge(e,t,r,n),this.chainId=a.X.get(e,t)}static async fromRpc(e,t){let[r,n]=await d.W.chainFromRpc(e),i=t[n];if(i.network!==r)throw Error(`Network mismatch: ${i.network} != ${r}`);return new m(r,n,e,i.contracts)}async *transfer(e,t,r,a,s,c,d){let{minAmountStart:u,minAmountFinish:f}=d.swapAmounts;if(0n===u||0n===f)throw Error("Invalid min swap amount");let l=new h.V(e).toString(),[p,k]=(0,n.ZN)(this.network,this.chain,r),[w,D]=(0,n.ZN)(this.network,t.chain,s),C=(0,n.QC)(k),E=(0,n.QC)(await this.getTransferrableToken(C)),b=(0,n.QC)(t),A=(0,n.QC)(D),m=new Date().valueOf()%16,v=n.VW.serializeFlagSet({flags:{shouldWrapNative:p,shouldUnwrapNative:w},recipientChain:(0,o.Vn)(t.chain),bridgeNonce:m,feeTierStart:100,feeTierFinish:100,padding:new Uint8Array(19)}),B=g.encodeFunctionData("start",[[v,C.toLowerCase(),E,A.toLowerCase(),b,c,a.toString(),u.toString(),f.toString(),d.relayerFee.toString()]]),y=this.getTokenGroup(k.address.toString()),I=this.getPorticoAddress(y);p||(yield*this.approve(C,l,a,I));let F=await this.core.getMessageFee();yield this.createUnsignedTransaction((0,i.Dt)({to:I,data:B,value:F+(p?a:0n)},l),"PorticoBridge.Transfer")}async *redeem(e,t){let r=(0,o.k5)(t.payload.payload.flagSet.recipientChain),a=t.payload.payload.finalTokenAddress.toNative(r).toString(),s=this.getTokenGroup(a),c=this.getPorticoAddress(s),d=new f.CH(c,g.fragments,this.provider),u=await d.getFunction("receiveMessageAndSwap").populateTransaction((0,n.qC)(t)),l=new h.V(e).toString();yield this.createUnsignedTransaction((0,i.Dt)(u,l),"PorticoBridge.Redeem")}async isTransferCompleted(e){return await this.tokenBridge.tokenBridge.isTransferCompleted((0,l.w)(e.hash))}async quoteSwap(e,t,r,i){let[,a]=(0,n.ZN)(this.network,this.chain,e),[,o]=(0,n.ZN)(this.network,this.chain,t),c=(0,n.QC)(a),d=(0,n.QC)(o);if((0,s.J)(c,d))return i;let h=this.getQuoterAddress(r),u=new f.CH(h,k.fragments,this.provider);return(await u.getFunction("quoteExactInputSingle").staticCall([c,d,i,100,0]))[0]}async quoteRelay(e,t){return await C.quoteRelayer(this.chain,e,t)}async getTransferrableToken(e){let t=c.D.tokenId(this.chain,e),[,r]=(0,n.ZN)(this.network,this.chain,t);if("Ethereum"===this.chain)return r;let i=Object.values(E).find(e=>e.find(e=>e.chain===this.chain&&(0,n.QC)(e)===(0,n.QC)(r)));if(!i)throw Error(`No token group found for ${e} on ${this.chain}`);let a=i.find(e=>"Ethereum"===e.chain);if(!a)throw Error(`No Ethereum origin token found for ${e} on ${this.chain}`);let o=await this.tokenBridge.getWrappedAsset(a);return c.D.tokenId(this.chain,o.toString())}supportedTokens(){let e=[];for(let[t,r]of Object.entries(E))for(let n of r)n.chain===this.chain&&e.push({group:t,token:n});return e}getTokenGroup(e){let t=this.supportedTokens().find(t=>(0,n.QC)(t.token)===e);if(!t)throw Error("Token not found");return t.group}async *approve(e,t,r,n){let a=d.W.getTokenImplementation(this.provider,e);if(await a.allowance(t,n)<r){let e=await a.approve.populateTransaction(n,r);yield this.createUnsignedTransaction((0,i.Dt)(e,t),"PorticoBridge.Approve")}}createUnsignedTransaction(e,t){return new u.z((0,i.rQ)(e,this.chainId),this.network,this.chain,t,!1)}getPorticoAddress(e){let t=this.contracts.portico;return"USDT"===e&&t.porticoPancakeSwap||t.porticoUniswap}getQuoterAddress(e){let t=this.contracts.portico;return"USDT"===e&&t.pancakeSwapQuoterV2||t.uniswapQuoterV2}}(0,n.sW)(i.c0,"PorticoBridge",m)}}]);